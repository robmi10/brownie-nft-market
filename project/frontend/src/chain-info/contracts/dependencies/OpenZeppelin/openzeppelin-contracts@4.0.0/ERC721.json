{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "C:/Users/robel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC721/ERC721.sol",
    "10": "C:/Users/robel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/introspection/ERC165.sol",
    "11": "C:/Users/robel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/introspection/IERC165.sol",
    "2": "C:/Users/robel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC721/IERC721.sol",
    "3": "C:/Users/robel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC721/IERC721Receiver.sol",
    "6": "C:/Users/robel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC721/extensions/IERC721Metadata.sol",
    "7": "C:/Users/robel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/Address.sol",
    "8": "C:/Users/robel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/Context.sol",
    "9": "C:/Users/robel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/Strings.sol"
  },
  "ast": {
    "absolutePath": "C:/Users/robel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC721/ERC721.sol",
    "exportedSymbols": {
      "Address": [
        2477
      ],
      "Context": [
        1989
      ],
      "ERC165": [
        2704
      ],
      "ERC721": [
        1838
      ],
      "IERC165": [
        2716
      ],
      "IERC721": [
        2105
      ],
      "IERC721Enumerable": [
        2154
      ],
      "IERC721Metadata": [
        2181
      ],
      "IERC721Receiver": [
        2123
      ],
      "Strings": [
        2680
      ]
    },
    "id": 1839,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1019,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:1"
      },
      {
        "absolutePath": "C:/Users/robel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC721/IERC721.sol",
        "file": "./IERC721.sol",
        "id": 1020,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1839,
        "sourceUnit": 2106,
        "src": "58:23:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/robel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "./IERC721Receiver.sol",
        "id": 1021,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1839,
        "sourceUnit": 2124,
        "src": "82:31:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/robel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "file": "./extensions/IERC721Metadata.sol",
        "id": 1022,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1839,
        "sourceUnit": 2182,
        "src": "114:42:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/robel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "file": "./extensions/IERC721Enumerable.sol",
        "id": 1023,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1839,
        "sourceUnit": 2155,
        "src": "157:44:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/robel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 1024,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1839,
        "sourceUnit": 2478,
        "src": "202:33:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/robel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 1025,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1839,
        "sourceUnit": 1990,
        "src": "236:33:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/robel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/Strings.sol",
        "file": "../../utils/Strings.sol",
        "id": 1026,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1839,
        "sourceUnit": 2681,
        "src": "270:33:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/robel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/introspection/ERC165.sol",
        "file": "../../utils/introspection/ERC165.sol",
        "id": 1027,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1839,
        "sourceUnit": 2705,
        "src": "304:46:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1029,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1989,
              "src": "618:7:1"
            },
            "id": 1030,
            "nodeType": "InheritanceSpecifier",
            "src": "618:7:1"
          },
          {
            "baseName": {
              "id": 1031,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2704,
              "src": "627:6:1"
            },
            "id": 1032,
            "nodeType": "InheritanceSpecifier",
            "src": "627:6:1"
          },
          {
            "baseName": {
              "id": 1033,
              "name": "IERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2105,
              "src": "635:7:1"
            },
            "id": 1034,
            "nodeType": "InheritanceSpecifier",
            "src": "635:7:1"
          },
          {
            "baseName": {
              "id": 1035,
              "name": "IERC721Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2181,
              "src": "644:15:1"
            },
            "id": 1036,
            "nodeType": "InheritanceSpecifier",
            "src": "644:15:1"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1028,
          "nodeType": "StructuredDocumentation",
          "src": "352:246:1",
          "text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
        },
        "fullyImplemented": true,
        "id": 1838,
        "linearizedBaseContracts": [
          1838,
          2181,
          2105,
          2704,
          2716,
          1989
        ],
        "name": "ERC721",
        "nameLocation": "608:6:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1039,
            "libraryName": {
              "id": 1037,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2477,
              "src": "672:7:1"
            },
            "nodeType": "UsingForDirective",
            "src": "666:26:1",
            "typeName": {
              "id": 1038,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "684:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 1042,
            "libraryName": {
              "id": 1040,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2680,
              "src": "703:7:1"
            },
            "nodeType": "UsingForDirective",
            "src": "697:26:1",
            "typeName": {
              "id": 1041,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "715:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 1044,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "762:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 1838,
            "src": "747:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1043,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "747:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1046,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "809:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 1838,
            "src": "794:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1045,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "794:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1050,
            "mutability": "mutable",
            "name": "_owners",
            "nameLocation": "906:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 1838,
            "src": "869:44:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 1049,
              "keyType": {
                "id": 1047,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "878:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "869:28:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 1048,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "889:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1054,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "1001:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 1838,
            "src": "964:46:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1053,
              "keyType": {
                "id": 1051,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "973:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "964:28:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1052,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "984:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1058,
            "mutability": "mutable",
            "name": "_tokenApprovals",
            "nameLocation": "1103:15:1",
            "nodeType": "VariableDeclaration",
            "scope": 1838,
            "src": "1066:52:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 1057,
              "keyType": {
                "id": 1055,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1075:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1066:28:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 1056,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1086:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1064,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "1228:18:1",
            "nodeType": "VariableDeclaration",
            "scope": 1838,
            "src": "1173:73:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 1063,
              "keyType": {
                "id": 1059,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1182:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1173:46:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 1062,
                "keyType": {
                  "id": 1060,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1202:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1193:25:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 1061,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1213:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1080,
              "nodeType": "Block",
              "src": "1423:57:1",
              "statements": [
                {
                  "expression": {
                    "id": 1074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1072,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1044,
                      "src": "1433:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1073,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1067,
                      "src": "1441:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1433:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1075,
                  "nodeType": "ExpressionStatement",
                  "src": "1433:13:1"
                },
                {
                  "expression": {
                    "id": 1078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1076,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1046,
                      "src": "1456:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1077,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1069,
                      "src": "1466:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1456:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1079,
                  "nodeType": "ExpressionStatement",
                  "src": "1456:17:1"
                }
              ]
            },
            "documentation": {
              "id": 1065,
              "nodeType": "StructuredDocumentation",
              "src": "1253:108:1",
              "text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
            },
            "id": 1081,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1067,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1393:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1081,
                  "src": "1379:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1066,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1379:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1069,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1414:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1081,
                  "src": "1400:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1068,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1400:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1378:44:1"
            },
            "returnParameters": {
              "id": 1071,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1423:0:1"
            },
            "scope": 1838,
            "src": "1366:114:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2703,
              2715
            ],
            "body": {
              "id": 1111,
              "nodeType": "Block",
              "src": "1655:180:1",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 1097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1092,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1084,
                          "src": "1672:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1094,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2105,
                                "src": "1692:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$2105_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$2105_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              ],
                              "id": 1093,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1687:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 1095,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1687:13:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$2105",
                              "typeString": "type(contract IERC721)"
                            }
                          },
                          "id": 1096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1687:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1672:40:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 1103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1098,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1084,
                          "src": "1728:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1100,
                                "name": "IERC721Metadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2181,
                                "src": "1748:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$2181_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$2181_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              ],
                              "id": 1099,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1743:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 1101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1743:21:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$2181",
                              "typeString": "type(contract IERC721Metadata)"
                            }
                          },
                          "id": 1102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1743:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1728:48:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "1672:104:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 1107,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1084,
                          "src": "1816:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 1105,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1792:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC721_$1838_$",
                            "typeString": "type(contract super ERC721)"
                          }
                        },
                        "id": 1106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2703,
                        "src": "1792:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 1108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1792:36:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1672:156:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1091,
                  "id": 1110,
                  "nodeType": "Return",
                  "src": "1665:163:1"
                }
              ]
            },
            "documentation": {
              "id": 1082,
              "nodeType": "StructuredDocumentation",
              "src": "1486:56:1",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 1112,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1556:17:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1088,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 1086,
                  "name": "ERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2704,
                  "src": "1623:6:1"
                },
                {
                  "id": 1087,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2716,
                  "src": "1631:7:1"
                }
              ],
              "src": "1614:25:1"
            },
            "parameters": {
              "id": 1085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1084,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1581:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1112,
                  "src": "1574:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1083,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1574:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1573:20:1"
            },
            "returnParameters": {
              "id": 1091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1090,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1112,
                  "src": "1649:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1089,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1649:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1648:6:1"
            },
            "scope": 1838,
            "src": "1547:288:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2030
            ],
            "body": {
              "id": 1135,
              "nodeType": "Block",
              "src": "1975:124:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1122,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1115,
                          "src": "1993:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1125,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2010:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2002:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1123,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2002:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2002:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1993:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 1128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2014:44:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        },
                        "value": "ERC721: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        }
                      ],
                      "id": 1121,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1985:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1985:74:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1130,
                  "nodeType": "ExpressionStatement",
                  "src": "1985:74:1"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1131,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1054,
                      "src": "2076:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1133,
                    "indexExpression": {
                      "id": 1132,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1115,
                      "src": "2086:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2076:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1120,
                  "id": 1134,
                  "nodeType": "Return",
                  "src": "2069:23:1"
                }
              ]
            },
            "documentation": {
              "id": 1113,
              "nodeType": "StructuredDocumentation",
              "src": "1841:48:1",
              "text": " @dev See {IERC721-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 1136,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1903:9:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1117,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1948:8:1"
            },
            "parameters": {
              "id": 1116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1115,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1921:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1136,
                  "src": "1913:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1913:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1912:15:1"
            },
            "returnParameters": {
              "id": 1120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1119,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1136,
                  "src": "1966:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1118,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1966:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1965:9:1"
            },
            "scope": 1838,
            "src": "1894:205:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2038
            ],
            "body": {
              "id": 1163,
              "nodeType": "Block",
              "src": "2237:154:1",
              "statements": [
                {
                  "assignments": [
                    1146
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1146,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "2255:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1163,
                      "src": "2247:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1145,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2247:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1150,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1147,
                      "name": "_owners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1050,
                      "src": "2263:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 1149,
                    "indexExpression": {
                      "id": 1148,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1139,
                      "src": "2271:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2263:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2247:32:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1152,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1146,
                          "src": "2297:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1155,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2314:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2306:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1153,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2306:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2306:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2297:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 1158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2318:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        },
                        "value": "ERC721: owner query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        }
                      ],
                      "id": 1151,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2289:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2289:73:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1160,
                  "nodeType": "ExpressionStatement",
                  "src": "2289:73:1"
                },
                {
                  "expression": {
                    "id": 1161,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1146,
                    "src": "2379:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1144,
                  "id": 1162,
                  "nodeType": "Return",
                  "src": "2372:12:1"
                }
              ]
            },
            "documentation": {
              "id": 1137,
              "nodeType": "StructuredDocumentation",
              "src": "2105:46:1",
              "text": " @dev See {IERC721-ownerOf}."
            },
            "functionSelector": "6352211e",
            "id": 1164,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "2165:7:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1141,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2210:8:1"
            },
            "parameters": {
              "id": 1140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1139,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2181:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1164,
                  "src": "2173:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2173:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2172:17:1"
            },
            "returnParameters": {
              "id": 1144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1143,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1164,
                  "src": "2228:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2228:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2227:9:1"
            },
            "scope": 1838,
            "src": "2156:235:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2166
            ],
            "body": {
              "id": 1173,
              "nodeType": "Block",
              "src": "2522:29:1",
              "statements": [
                {
                  "expression": {
                    "id": 1171,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1044,
                    "src": "2539:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1170,
                  "id": 1172,
                  "nodeType": "Return",
                  "src": "2532:12:1"
                }
              ]
            },
            "documentation": {
              "id": 1165,
              "nodeType": "StructuredDocumentation",
              "src": "2397:51:1",
              "text": " @dev See {IERC721Metadata-name}."
            },
            "functionSelector": "06fdde03",
            "id": 1174,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2462:4:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1167,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2489:8:1"
            },
            "parameters": {
              "id": 1166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2466:2:1"
            },
            "returnParameters": {
              "id": 1170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1169,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1174,
                  "src": "2507:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1168,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2507:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2506:15:1"
            },
            "scope": 1838,
            "src": "2453:98:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2172
            ],
            "body": {
              "id": 1183,
              "nodeType": "Block",
              "src": "2686:31:1",
              "statements": [
                {
                  "expression": {
                    "id": 1181,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1046,
                    "src": "2703:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1180,
                  "id": 1182,
                  "nodeType": "Return",
                  "src": "2696:14:1"
                }
              ]
            },
            "documentation": {
              "id": 1175,
              "nodeType": "StructuredDocumentation",
              "src": "2557:53:1",
              "text": " @dev See {IERC721Metadata-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 1184,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2624:6:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1177,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2653:8:1"
            },
            "parameters": {
              "id": 1176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2630:2:1"
            },
            "returnParameters": {
              "id": 1180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1179,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1184,
                  "src": "2671:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1178,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2671:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2670:15:1"
            },
            "scope": 1838,
            "src": "2615:102:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2180
            ],
            "body": {
              "id": 1225,
              "nodeType": "Block",
              "src": "2871:265:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1195,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1187,
                            "src": "2897:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1194,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1475,
                          "src": "2889:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 1196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2889:16:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 1197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2907:49:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 1193,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2881:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2881:76:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1199,
                  "nodeType": "ExpressionStatement",
                  "src": "2881:76:1"
                },
                {
                  "assignments": [
                    1201
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1201,
                      "mutability": "mutable",
                      "name": "baseURI",
                      "nameLocation": "2982:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1225,
                      "src": "2968:21:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1200,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2968:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1204,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1202,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1235,
                      "src": "2992:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view returns (string memory)"
                      }
                    },
                    "id": 1203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2992:10:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2968:34:1"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1207,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1201,
                              "src": "3025:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1206,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3019:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 1205,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3019:5:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3019:14:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 1209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "3019:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3043:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3019:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 1222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3127:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 1223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3019:110:1",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 1216,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1201,
                              "src": "3083:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 1217,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1187,
                                  "src": "3092:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1218,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2562,
                                "src": "3092:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 1219,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3092:18:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 1214,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3066:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "3066:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 1220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3066:45:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 1213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3059:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 1212,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3059:6:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3059:53:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 1192,
                  "id": 1224,
                  "nodeType": "Return",
                  "src": "3012:117:1"
                }
              ]
            },
            "documentation": {
              "id": 1185,
              "nodeType": "StructuredDocumentation",
              "src": "2723:55:1",
              "text": " @dev See {IERC721Metadata-tokenURI}."
            },
            "functionSelector": "c87b56dd",
            "id": 1226,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "2792:8:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1189,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2838:8:1"
            },
            "parameters": {
              "id": 1188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1187,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2809:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1226,
                  "src": "2801:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1186,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2801:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2800:17:1"
            },
            "returnParameters": {
              "id": 1192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1191,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1226,
                  "src": "2856:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1190,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2856:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2855:15:1"
            },
            "scope": 1838,
            "src": "2783:353:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1234,
              "nodeType": "Block",
              "src": "3333:26:1",
              "statements": [
                {
                  "expression": {
                    "hexValue": "",
                    "id": 1232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3350:2:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 1231,
                  "id": 1233,
                  "nodeType": "Return",
                  "src": "3343:9:1"
                }
              ]
            },
            "documentation": {
              "id": 1227,
              "nodeType": "StructuredDocumentation",
              "src": "3142:120:1",
              "text": " @dev Base URI for computing {tokenURI}. Empty by default, can be overriden\n in child contracts."
            },
            "id": 1235,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "3276:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1228,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3284:2:1"
            },
            "returnParameters": {
              "id": 1231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1230,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1235,
                  "src": "3318:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1229,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3318:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3317:15:1"
            },
            "scope": 1838,
            "src": "3267:92:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              2066
            ],
            "body": {
              "id": 1278,
              "nodeType": "Block",
              "src": "3486:325:1",
              "statements": [
                {
                  "assignments": [
                    1245
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1245,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3504:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1278,
                      "src": "3496:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1244,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3496:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1250,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1248,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1240,
                        "src": "3527:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1246,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1838,
                        "src": "3512:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$1838_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 1247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1164,
                      "src": "3512:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 1249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3512:23:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3496:39:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1252,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1238,
                          "src": "3553:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1253,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1245,
                          "src": "3559:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3553:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
                        "id": 1255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3566:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        },
                        "value": "ERC721: approval to current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        }
                      ],
                      "id": 1251,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3545:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3545:57:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1257,
                  "nodeType": "ExpressionStatement",
                  "src": "3545:57:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1259,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1977,
                              "src": "3621:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3621:12:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1261,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1245,
                            "src": "3637:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3621:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1265,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1245,
                              "src": "3670:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1266,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1977,
                                "src": "3677:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1267,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3677:12:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1263,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1838,
                              "src": "3646:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$1838_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 1264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isApprovedForAll",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1352,
                            "src": "3646:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 1268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3646:44:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3621:69:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
                        "id": 1270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3704:58:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        },
                        "value": "ERC721: approve caller is not owner nor approved for all"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        }
                      ],
                      "id": 1258,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3613:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3613:159:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1272,
                  "nodeType": "ExpressionStatement",
                  "src": "3613:159:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1274,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1238,
                        "src": "3792:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1275,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1240,
                        "src": "3796:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1273,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1762,
                      "src": "3783:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3783:21:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1277,
                  "nodeType": "ExpressionStatement",
                  "src": "3783:21:1"
                }
              ]
            },
            "documentation": {
              "id": 1236,
              "nodeType": "StructuredDocumentation",
              "src": "3365:46:1",
              "text": " @dev See {IERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "id": 1279,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "3425:7:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1242,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3477:8:1"
            },
            "parameters": {
              "id": 1241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1238,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3441:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1279,
                  "src": "3433:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1237,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3433:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1240,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3453:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1279,
                  "src": "3445:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1239,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3445:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3432:29:1"
            },
            "returnParameters": {
              "id": 1243,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3486:0:1"
            },
            "scope": 1838,
            "src": "3416:395:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2074
            ],
            "body": {
              "id": 1299,
              "nodeType": "Block",
              "src": "3957:132:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1290,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1282,
                            "src": "3983:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1289,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1475,
                          "src": "3975:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 1291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3975:16:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 1292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3993:46:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        },
                        "value": "ERC721: approved query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        }
                      ],
                      "id": 1288,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3967:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3967:73:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1294,
                  "nodeType": "ExpressionStatement",
                  "src": "3967:73:1"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1295,
                      "name": "_tokenApprovals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1058,
                      "src": "4058:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 1297,
                    "indexExpression": {
                      "id": 1296,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1282,
                      "src": "4074:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4058:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1287,
                  "id": 1298,
                  "nodeType": "Return",
                  "src": "4051:31:1"
                }
              ]
            },
            "documentation": {
              "id": 1280,
              "nodeType": "StructuredDocumentation",
              "src": "3817:50:1",
              "text": " @dev See {IERC721-getApproved}."
            },
            "functionSelector": "081812fc",
            "id": 1300,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "3881:11:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1284,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3930:8:1"
            },
            "parameters": {
              "id": 1283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1282,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3901:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1300,
                  "src": "3893:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1281,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3893:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3892:17:1"
            },
            "returnParameters": {
              "id": 1287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1286,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1300,
                  "src": "3948:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1285,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3948:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3947:9:1"
            },
            "scope": 1838,
            "src": "3872:217:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2082
            ],
            "body": {
              "id": 1333,
              "nodeType": "Block",
              "src": "4240:206:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1310,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1303,
                          "src": "4258:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1311,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1977,
                            "src": "4270:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4270:12:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4258:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
                        "id": 1314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4284:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        },
                        "value": "ERC721: approve to caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        }
                      ],
                      "id": 1309,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4250:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4250:62:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1316,
                  "nodeType": "ExpressionStatement",
                  "src": "4250:62:1"
                },
                {
                  "expression": {
                    "id": 1324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1317,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1064,
                          "src": "4323:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 1321,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1318,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1977,
                            "src": "4342:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4342:12:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4323:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1322,
                      "indexExpression": {
                        "id": 1320,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1303,
                        "src": "4356:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4323:42:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1323,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1305,
                      "src": "4368:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4323:53:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1325,
                  "nodeType": "ExpressionStatement",
                  "src": "4323:53:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1327,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1977,
                          "src": "4406:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4406:12:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1329,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1303,
                        "src": "4420:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1330,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1305,
                        "src": "4430:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1326,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2022,
                      "src": "4391:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 1331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4391:48:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1332,
                  "nodeType": "EmitStatement",
                  "src": "4386:53:1"
                }
              ]
            },
            "documentation": {
              "id": 1301,
              "nodeType": "StructuredDocumentation",
              "src": "4095:56:1",
              "text": " @dev See {IERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 1334,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "4165:17:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1307,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4231:8:1"
            },
            "parameters": {
              "id": 1306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1303,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4191:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1334,
                  "src": "4183:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1302,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4183:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1305,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "4206:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1334,
                  "src": "4201:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1304,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4201:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4182:33:1"
            },
            "returnParameters": {
              "id": 1308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4240:0:1"
            },
            "scope": 1838,
            "src": "4156:290:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2092
            ],
            "body": {
              "id": 1351,
              "nodeType": "Block",
              "src": "4615:59:1",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1345,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1064,
                        "src": "4632:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 1347,
                      "indexExpression": {
                        "id": 1346,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1337,
                        "src": "4651:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4632:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 1349,
                    "indexExpression": {
                      "id": 1348,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1339,
                      "src": "4658:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4632:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1344,
                  "id": 1350,
                  "nodeType": "Return",
                  "src": "4625:42:1"
                }
              ]
            },
            "documentation": {
              "id": 1335,
              "nodeType": "StructuredDocumentation",
              "src": "4452:55:1",
              "text": " @dev See {IERC721-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 1352,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "4521:16:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1341,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4591:8:1"
            },
            "parameters": {
              "id": 1340,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1337,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4546:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1352,
                  "src": "4538:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1336,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4538:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1339,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4561:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1352,
                  "src": "4553:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1338,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4553:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4537:33:1"
            },
            "returnParameters": {
              "id": 1344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1343,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1352,
                  "src": "4609:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1342,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4609:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4608:6:1"
            },
            "scope": 1838,
            "src": "4512:162:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2058
            ],
            "body": {
              "id": 1378,
              "nodeType": "Block",
              "src": "4825:211:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1365,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1977,
                              "src": "4914:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4914:12:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1367,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1359,
                            "src": "4928:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1364,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1517,
                          "src": "4895:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 1368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4895:41:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 1369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4938:51:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 1363,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4887:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4887:103:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1371,
                  "nodeType": "ExpressionStatement",
                  "src": "4887:103:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1373,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1355,
                        "src": "5011:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1374,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1357,
                        "src": "5017:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1375,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1359,
                        "src": "5021:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1372,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1738,
                      "src": "5001:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5001:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1377,
                  "nodeType": "ExpressionStatement",
                  "src": "5001:28:1"
                }
              ]
            },
            "documentation": {
              "id": 1353,
              "nodeType": "StructuredDocumentation",
              "src": "4680:51:1",
              "text": " @dev See {IERC721-transferFrom}."
            },
            "functionSelector": "23b872dd",
            "id": 1379,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "4745:12:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1361,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4816:8:1"
            },
            "parameters": {
              "id": 1360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1355,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4766:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1379,
                  "src": "4758:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1354,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4758:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1357,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4780:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1379,
                  "src": "4772:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1356,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4772:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1359,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4792:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1379,
                  "src": "4784:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1358,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4784:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4757:43:1"
            },
            "returnParameters": {
              "id": 1362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4825:0:1"
            },
            "scope": 1838,
            "src": "4736:300:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2048
            ],
            "body": {
              "id": 1397,
              "nodeType": "Block",
              "src": "5195:56:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1391,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1382,
                        "src": "5222:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1392,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1384,
                        "src": "5228:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1393,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1386,
                        "src": "5232:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 1394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5241:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 1390,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1398,
                        1428
                      ],
                      "referencedDeclaration": 1428,
                      "src": "5205:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 1395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5205:39:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1396,
                  "nodeType": "ExpressionStatement",
                  "src": "5205:39:1"
                }
              ]
            },
            "documentation": {
              "id": 1380,
              "nodeType": "StructuredDocumentation",
              "src": "5042:55:1",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "id": 1398,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5111:16:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1388,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5186:8:1"
            },
            "parameters": {
              "id": 1387,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1382,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5136:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1398,
                  "src": "5128:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1381,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5128:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1384,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5150:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1398,
                  "src": "5142:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1383,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5142:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1386,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5162:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1398,
                  "src": "5154:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1385,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5154:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5127:43:1"
            },
            "returnParameters": {
              "id": 1389,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5195:0:1"
            },
            "scope": 1838,
            "src": "5102:149:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2104
            ],
            "body": {
              "id": 1427,
              "nodeType": "Block",
              "src": "5430:169:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1413,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1977,
                              "src": "5467:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1414,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5467:12:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1415,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1405,
                            "src": "5481:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1412,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1517,
                          "src": "5448:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 1416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5448:41:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 1417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5491:51:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 1411,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5440:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5440:103:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1419,
                  "nodeType": "ExpressionStatement",
                  "src": "5440:103:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1421,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1401,
                        "src": "5567:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1422,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1403,
                        "src": "5573:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1423,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1405,
                        "src": "5577:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1424,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1407,
                        "src": "5586:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1420,
                      "name": "_safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1457,
                      "src": "5553:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 1425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5553:39:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1426,
                  "nodeType": "ExpressionStatement",
                  "src": "5553:39:1"
                }
              ]
            },
            "documentation": {
              "id": 1399,
              "nodeType": "StructuredDocumentation",
              "src": "5257:55:1",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "id": 1428,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5326:16:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1409,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5421:8:1"
            },
            "parameters": {
              "id": 1408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1401,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5351:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1428,
                  "src": "5343:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1400,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5343:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1403,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5365:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1428,
                  "src": "5357:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1402,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5357:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1405,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5377:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1428,
                  "src": "5369:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1404,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5369:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1407,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "5399:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1428,
                  "src": "5386:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1406,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5386:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5342:63:1"
            },
            "returnParameters": {
              "id": 1410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5430:0:1"
            },
            "scope": 1838,
            "src": "5317:282:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1456,
              "nodeType": "Block",
              "src": "6564:166:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1441,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1431,
                        "src": "6584:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1442,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1433,
                        "src": "6590:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1443,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1435,
                        "src": "6594:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1440,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1738,
                      "src": "6574:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6574:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1445,
                  "nodeType": "ExpressionStatement",
                  "src": "6574:28:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1448,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1431,
                            "src": "6643:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1449,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1433,
                            "src": "6649:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1450,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1435,
                            "src": "6653:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1451,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1437,
                            "src": "6662:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 1447,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1826,
                          "src": "6620:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 1452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6620:48:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 1453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6670:52:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 1446,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6612:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6612:111:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1455,
                  "nodeType": "ExpressionStatement",
                  "src": "6612:111:1"
                }
              ]
            },
            "documentation": {
              "id": 1429,
              "nodeType": "StructuredDocumentation",
              "src": "5605:851:1",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 1457,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeTransfer",
            "nameLocation": "6470:13:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1431,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6492:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1457,
                  "src": "6484:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1430,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6484:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1433,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6506:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1457,
                  "src": "6498:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1432,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6498:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1435,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6518:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1457,
                  "src": "6510:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1434,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6510:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1437,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "6540:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1457,
                  "src": "6527:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1436,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6527:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6483:63:1"
            },
            "returnParameters": {
              "id": 1439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6564:0:1"
            },
            "scope": 1838,
            "src": "6461:269:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1474,
              "nodeType": "Block",
              "src": "7104:54:1",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 1465,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1050,
                        "src": "7121:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1467,
                      "indexExpression": {
                        "id": 1466,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1460,
                        "src": "7129:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7121:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7149:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7141:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1468,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7141:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7141:10:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7121:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1464,
                  "id": 1473,
                  "nodeType": "Return",
                  "src": "7114:37:1"
                }
              ]
            },
            "documentation": {
              "id": 1458,
              "nodeType": "StructuredDocumentation",
              "src": "6736:292:1",
              "text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
            },
            "id": 1475,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exists",
            "nameLocation": "7042:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1460,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7058:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1475,
                  "src": "7050:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1459,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7050:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7049:17:1"
            },
            "returnParameters": {
              "id": 1464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1463,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1475,
                  "src": "7098:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1462,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7098:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7097:6:1"
            },
            "scope": 1838,
            "src": "7033:125:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1516,
              "nodeType": "Block",
              "src": "7415:252:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1487,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1480,
                            "src": "7441:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1486,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1475,
                          "src": "7433:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 1488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7433:16:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 1489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7451:46:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        },
                        "value": "ERC721: operator query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        }
                      ],
                      "id": 1485,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7425:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7425:73:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1491,
                  "nodeType": "ExpressionStatement",
                  "src": "7425:73:1"
                },
                {
                  "assignments": [
                    1493
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1493,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "7516:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1516,
                      "src": "7508:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1492,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7508:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1498,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1496,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1480,
                        "src": "7539:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1494,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1838,
                        "src": "7524:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$1838_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 1495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1164,
                      "src": "7524:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 1497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7524:23:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7508:39:1"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1501,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1499,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1478,
                              "src": "7565:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 1500,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1493,
                              "src": "7576:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7565:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1506,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 1503,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1480,
                                  "src": "7597:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1502,
                                "name": "getApproved",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1300,
                                "src": "7585:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 1504,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7585:20:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 1505,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1478,
                              "src": "7609:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7585:31:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7565:51:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1510,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1493,
                              "src": "7644:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1511,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1478,
                              "src": "7651:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1508,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1838,
                              "src": "7620:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$1838_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 1509,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isApprovedForAll",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1352,
                            "src": "7620:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 1512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7620:39:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7565:94:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 1514,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7564:96:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1484,
                  "id": 1515,
                  "nodeType": "Return",
                  "src": "7557:103:1"
                }
              ]
            },
            "documentation": {
              "id": 1476,
              "nodeType": "StructuredDocumentation",
              "src": "7164:147:1",
              "text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
            },
            "id": 1517,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nameLocation": "7325:18:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1478,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "7352:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1517,
                  "src": "7344:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1477,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7344:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1480,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7369:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1517,
                  "src": "7361:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1479,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7361:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7343:34:1"
            },
            "returnParameters": {
              "id": 1484,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1483,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1517,
                  "src": "7409:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1482,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7409:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7408:6:1"
            },
            "scope": 1838,
            "src": "7316:351:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1531,
              "nodeType": "Block",
              "src": "8062:43:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1526,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1520,
                        "src": "8082:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1527,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1522,
                        "src": "8086:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 1528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8095:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 1525,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1532,
                        1561
                      ],
                      "referencedDeclaration": 1561,
                      "src": "8072:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 1529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8072:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1530,
                  "nodeType": "ExpressionStatement",
                  "src": "8072:26:1"
                }
              ]
            },
            "documentation": {
              "id": 1518,
              "nodeType": "StructuredDocumentation",
              "src": "7673:319:1",
              "text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 1532,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "8006:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1520,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8024:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1532,
                  "src": "8016:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1519,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8016:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1522,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8036:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1532,
                  "src": "8028:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1521,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8028:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8015:29:1"
            },
            "returnParameters": {
              "id": 1524,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8062:0:1"
            },
            "scope": 1838,
            "src": "7997:108:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1560,
              "nodeType": "Block",
              "src": "8411:162:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1543,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1535,
                        "src": "8427:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1544,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1537,
                        "src": "8431:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1542,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1618,
                      "src": "8421:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8421:18:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1546,
                  "nodeType": "ExpressionStatement",
                  "src": "8421:18:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1551,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8488:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1550,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8480:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1549,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8480:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1552,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8480:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1553,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1535,
                            "src": "8492:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1554,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1537,
                            "src": "8496:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1555,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1539,
                            "src": "8505:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 1548,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1826,
                          "src": "8457:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 1556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8457:54:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 1557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8513:52:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 1547,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8449:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8449:117:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1559,
                  "nodeType": "ExpressionStatement",
                  "src": "8449:117:1"
                }
              ]
            },
            "documentation": {
              "id": 1533,
              "nodeType": "StructuredDocumentation",
              "src": "8111:210:1",
              "text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
            },
            "id": 1561,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "8335:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1535,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8353:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1561,
                  "src": "8345:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1534,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8345:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1537,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8365:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1561,
                  "src": "8357:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1536,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8357:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1539,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "8387:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1561,
                  "src": "8374:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1538,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8374:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8344:49:1"
            },
            "returnParameters": {
              "id": 1541,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8411:0:1"
            },
            "scope": 1838,
            "src": "8326:247:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1617,
              "nodeType": "Block",
              "src": "8956:311:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1570,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1564,
                          "src": "8974:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1573,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8988:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8980:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1571,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8980:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8980:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8974:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 1576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8992:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        },
                        "value": "ERC721: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        }
                      ],
                      "id": 1569,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8966:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8966:61:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1578,
                  "nodeType": "ExpressionStatement",
                  "src": "8966:61:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9045:17:1",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 1581,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1566,
                              "src": "9054:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1580,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1475,
                            "src": "9046:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 1582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9046:16:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
                        "id": 1584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9064:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        },
                        "value": "ERC721: token already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        }
                      ],
                      "id": 1579,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9037:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9037:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1586,
                  "nodeType": "ExpressionStatement",
                  "src": "9037:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1590,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9135:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9127:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1588,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9127:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9127:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1592,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1564,
                        "src": "9139:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1593,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1566,
                        "src": "9143:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1587,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1837,
                      "src": "9106:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9106:45:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1595,
                  "nodeType": "ExpressionStatement",
                  "src": "9106:45:1"
                },
                {
                  "expression": {
                    "id": 1600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1596,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1054,
                        "src": "9162:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1598,
                      "indexExpression": {
                        "id": 1597,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1564,
                        "src": "9172:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9162:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9179:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9162:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1601,
                  "nodeType": "ExpressionStatement",
                  "src": "9162:18:1"
                },
                {
                  "expression": {
                    "id": 1606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1602,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1050,
                        "src": "9190:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1604,
                      "indexExpression": {
                        "id": 1603,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1566,
                        "src": "9198:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9190:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1605,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1564,
                      "src": "9209:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9190:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1607,
                  "nodeType": "ExpressionStatement",
                  "src": "9190:21:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1611,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9244:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9236:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1609,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9236:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9236:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1613,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1564,
                        "src": "9248:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1614,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1566,
                        "src": "9252:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1608,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2004,
                      "src": "9227:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9227:33:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1616,
                  "nodeType": "EmitStatement",
                  "src": "9222:38:1"
                }
              ]
            },
            "documentation": {
              "id": 1562,
              "nodeType": "StructuredDocumentation",
              "src": "8579:311:1",
              "text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
            },
            "id": 1618,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "8904:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1564,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8918:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1618,
                  "src": "8910:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1563,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8910:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1566,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8930:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1618,
                  "src": "8922:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1565,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8922:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8909:29:1"
            },
            "returnParameters": {
              "id": 1568,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8956:0:1"
            },
            "scope": 1838,
            "src": "8895:372:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1668,
              "nodeType": "Block",
              "src": "9533:299:1",
              "statements": [
                {
                  "assignments": [
                    1625
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1625,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "9551:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1668,
                      "src": "9543:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1624,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9543:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1630,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1628,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1621,
                        "src": "9574:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1626,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1838,
                        "src": "9559:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$1838_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 1627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1164,
                      "src": "9559:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 1629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9559:23:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9543:39:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1632,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1625,
                        "src": "9614:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1635,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9629:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9621:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1633,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9621:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9621:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1637,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1621,
                        "src": "9633:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1631,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1837,
                      "src": "9593:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9593:48:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1639,
                  "nodeType": "ExpressionStatement",
                  "src": "9593:48:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1643,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9696:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9688:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1641,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9688:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9688:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1645,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1621,
                        "src": "9700:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1640,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1762,
                      "src": "9679:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9679:29:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1647,
                  "nodeType": "ExpressionStatement",
                  "src": "9679:29:1"
                },
                {
                  "expression": {
                    "id": 1652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1648,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1054,
                        "src": "9719:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1650,
                      "indexExpression": {
                        "id": 1649,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1625,
                        "src": "9729:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9719:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9739:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9719:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1653,
                  "nodeType": "ExpressionStatement",
                  "src": "9719:21:1"
                },
                {
                  "expression": {
                    "id": 1657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "9750:23:1",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1654,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1050,
                        "src": "9757:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1656,
                      "indexExpression": {
                        "id": 1655,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1621,
                        "src": "9765:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9757:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1658,
                  "nodeType": "ExpressionStatement",
                  "src": "9750:23:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1660,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1625,
                        "src": "9798:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9813:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9805:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1661,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9805:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9805:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1665,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1621,
                        "src": "9817:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1659,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2004,
                      "src": "9789:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9789:36:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1667,
                  "nodeType": "EmitStatement",
                  "src": "9784:41:1"
                }
              ]
            },
            "documentation": {
              "id": 1619,
              "nodeType": "StructuredDocumentation",
              "src": "9273:206:1",
              "text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
            },
            "id": 1669,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "9493:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1621,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9507:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1669,
                  "src": "9499:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1620,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9499:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9498:17:1"
            },
            "returnParameters": {
              "id": 1623,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9533:0:1"
            },
            "scope": 1838,
            "src": "9484:348:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1737,
              "nodeType": "Block",
              "src": "10235:451:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1682,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1676,
                              "src": "10268:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1680,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1838,
                              "src": "10253:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$1838_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 1681,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1164,
                            "src": "10253:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 1683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10253:23:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1684,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1672,
                          "src": "10280:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10253:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e",
                        "id": 1686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10286:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        },
                        "value": "ERC721: transfer of token that is not own"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        }
                      ],
                      "id": 1679,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10245:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10245:85:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1688,
                  "nodeType": "ExpressionStatement",
                  "src": "10245:85:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1690,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1674,
                          "src": "10348:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1693,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10362:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1692,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10354:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1691,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10354:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10354:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10348:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 1696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10366:38:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        },
                        "value": "ERC721: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        }
                      ],
                      "id": 1689,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10340:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10340:65:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1698,
                  "nodeType": "ExpressionStatement",
                  "src": "10340:65:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1700,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1672,
                        "src": "10437:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1701,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1674,
                        "src": "10443:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1702,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1676,
                        "src": "10447:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1699,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1837,
                      "src": "10416:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10416:39:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1704,
                  "nodeType": "ExpressionStatement",
                  "src": "10416:39:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1708,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10534:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10526:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1706,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10526:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10526:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1710,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1676,
                        "src": "10538:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1705,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1762,
                      "src": "10517:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10517:29:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1712,
                  "nodeType": "ExpressionStatement",
                  "src": "10517:29:1"
                },
                {
                  "expression": {
                    "id": 1717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1713,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1054,
                        "src": "10557:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1715,
                      "indexExpression": {
                        "id": 1714,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1672,
                        "src": "10567:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10557:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10576:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10557:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1718,
                  "nodeType": "ExpressionStatement",
                  "src": "10557:20:1"
                },
                {
                  "expression": {
                    "id": 1723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1719,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1054,
                        "src": "10587:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1721,
                      "indexExpression": {
                        "id": 1720,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1674,
                        "src": "10597:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10587:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10604:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10587:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1724,
                  "nodeType": "ExpressionStatement",
                  "src": "10587:18:1"
                },
                {
                  "expression": {
                    "id": 1729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1725,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1050,
                        "src": "10615:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1727,
                      "indexExpression": {
                        "id": 1726,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1676,
                        "src": "10623:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10615:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1728,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1674,
                      "src": "10634:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10615:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1730,
                  "nodeType": "ExpressionStatement",
                  "src": "10615:21:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1732,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1672,
                        "src": "10661:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1733,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1674,
                        "src": "10667:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1734,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1676,
                        "src": "10671:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1731,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2004,
                      "src": "10652:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10652:27:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1736,
                  "nodeType": "EmitStatement",
                  "src": "10647:32:1"
                }
              ]
            },
            "documentation": {
              "id": 1670,
              "nodeType": "StructuredDocumentation",
              "src": "9838:313:1",
              "text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
            },
            "id": 1738,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "10165:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1677,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1672,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10183:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1738,
                  "src": "10175:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1671,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10175:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1674,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10197:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1738,
                  "src": "10189:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1673,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10189:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1676,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10209:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1738,
                  "src": "10201:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1675,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10201:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10174:43:1"
            },
            "returnParameters": {
              "id": 1678,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10235:0:1"
            },
            "scope": 1838,
            "src": "10156:530:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1761,
              "nodeType": "Block",
              "src": "10861:107:1",
              "statements": [
                {
                  "expression": {
                    "id": 1750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1746,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1058,
                        "src": "10871:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1748,
                      "indexExpression": {
                        "id": 1747,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1743,
                        "src": "10887:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10871:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1749,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1741,
                      "src": "10898:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10871:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1751,
                  "nodeType": "ExpressionStatement",
                  "src": "10871:29:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1755,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1743,
                            "src": "10939:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1753,
                            "name": "ERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1838,
                            "src": "10924:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721_$1838_$",
                              "typeString": "type(contract ERC721)"
                            }
                          },
                          "id": 1754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1164,
                          "src": "10924:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 1756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10924:23:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1757,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1741,
                        "src": "10949:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1758,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1743,
                        "src": "10953:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1752,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2013,
                      "src": "10915:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10915:46:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1760,
                  "nodeType": "EmitStatement",
                  "src": "10910:51:1"
                }
              ]
            },
            "documentation": {
              "id": 1739,
              "nodeType": "StructuredDocumentation",
              "src": "10692:100:1",
              "text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
            },
            "id": 1762,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "10806:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1741,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10823:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1762,
                  "src": "10815:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1740,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10815:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1743,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10835:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1762,
                  "src": "10827:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1742,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10827:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10814:29:1"
            },
            "returnParameters": {
              "id": 1745,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10861:0:1"
            },
            "scope": 1838,
            "src": "10797:171:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1825,
              "nodeType": "Block",
              "src": "11651:694:1",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1776,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1767,
                        "src": "11665:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1777,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2201,
                      "src": "11665:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 1778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11665:15:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1823,
                    "nodeType": "Block",
                    "src": "12303:36:1",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12324:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1775,
                        "id": 1822,
                        "nodeType": "Return",
                        "src": "12317:11:1"
                      }
                    ]
                  },
                  "id": 1824,
                  "nodeType": "IfStatement",
                  "src": "11661:678:1",
                  "trueBody": {
                    "id": 1820,
                    "nodeType": "Block",
                    "src": "11682:615:1",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 1800,
                              "nodeType": "Block",
                              "src": "11797:95:1",
                              "statements": [
                                {
                                  "expression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 1798,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1792,
                                      "name": "retval",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1790,
                                      "src": "11822:6:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 1794,
                                              "name": "to",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1767,
                                              "src": "11848:2:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 1793,
                                            "name": "IERC721Receiver",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2123,
                                            "src": "11832:15:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$2123_$",
                                              "typeString": "type(contract IERC721Receiver)"
                                            }
                                          },
                                          "id": 1795,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "11832:19:1",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC721Receiver_$2123",
                                            "typeString": "contract IERC721Receiver"
                                          }
                                        },
                                        "id": 1796,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "onERC721Received",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2122,
                                        "src": "11832:36:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                                        }
                                      },
                                      "id": 1797,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "11832:45:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "11822:55:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "functionReturnParameters": 1775,
                                  "id": 1799,
                                  "nodeType": "Return",
                                  "src": "11815:62:1"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 1801,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 1791,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 1790,
                                  "mutability": "mutable",
                                  "name": "retval",
                                  "nameLocation": "11789:6:1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1801,
                                  "src": "11782:13:1",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 1789,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11782:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "11781:15:1"
                            },
                            "src": "11773:119:1"
                          },
                          {
                            "block": {
                              "id": 1817,
                              "nodeType": "Block",
                              "src": "11921:366:1",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1808,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 1805,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1803,
                                        "src": "11943:6:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 1806,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "11943:13:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 1807,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "11960:1:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "11943:18:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "id": 1815,
                                    "nodeType": "Block",
                                    "src": "12070:203:1",
                                    "statements": [
                                      {
                                        "AST": {
                                          "nodeType": "YulBlock",
                                          "src": "12169:86:1",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "12206:2:1",
                                                        "type": "",
                                                        "value": "32"
                                                      },
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "12210:6:1"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "12202:3:1"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "12202:15:1"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "12225:6:1"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "12219:5:1"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "12219:13:1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "revert",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12195:6:1"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "12195:38:1"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "12195:38:1"
                                            }
                                          ]
                                        },
                                        "evmVersion": "istanbul",
                                        "externalReferences": [
                                          {
                                            "declaration": 1803,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "12210:6:1",
                                            "valueSize": 1
                                          },
                                          {
                                            "declaration": 1803,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "12225:6:1",
                                            "valueSize": 1
                                          }
                                        ],
                                        "id": 1814,
                                        "nodeType": "InlineAssembly",
                                        "src": "12160:95:1"
                                      }
                                    ]
                                  },
                                  "id": 1816,
                                  "nodeType": "IfStatement",
                                  "src": "11939:334:1",
                                  "trueBody": {
                                    "id": 1813,
                                    "nodeType": "Block",
                                    "src": "11963:101:1",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                                              "id": 1810,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "11992:52:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              },
                                              "value": "ERC721: transfer to non ERC721Receiver implementer"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              }
                                            ],
                                            "id": 1809,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "11985:6:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 1811,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "11985:60:1",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 1812,
                                        "nodeType": "ExpressionStatement",
                                        "src": "11985:60:1"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 1818,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 1804,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 1803,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "11913:6:1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1818,
                                  "src": "11900:19:1",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 1802,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11900:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "11899:21:1"
                            },
                            "src": "11893:394:1"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1783,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1977,
                                "src": "11737:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1784,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11737:12:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1785,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1765,
                              "src": "11751:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1786,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1769,
                              "src": "11757:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1787,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1771,
                              "src": "11766:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1780,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1767,
                                  "src": "11716:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1779,
                                "name": "IERC721Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2123,
                                "src": "11700:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$2123_$",
                                  "typeString": "type(contract IERC721Receiver)"
                                }
                              },
                              "id": 1781,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11700:19:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721Receiver_$2123",
                                "typeString": "contract IERC721Receiver"
                              }
                            },
                            "id": 1782,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC721Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2122,
                            "src": "11700:36:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 1788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11700:72:1",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 1819,
                        "nodeType": "TryStatement",
                        "src": "11696:591:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1763,
              "nodeType": "StructuredDocumentation",
              "src": "10974:542:1",
              "text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
            },
            "id": 1826,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkOnERC721Received",
            "nameLocation": "11530:22:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1772,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1765,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11561:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1826,
                  "src": "11553:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1764,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11553:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1767,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11575:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1826,
                  "src": "11567:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1766,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11567:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1769,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11587:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1826,
                  "src": "11579:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1768,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11579:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1771,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "11609:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1826,
                  "src": "11596:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1770,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11596:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11552:63:1"
            },
            "returnParameters": {
              "id": 1775,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1774,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1826,
                  "src": "11641:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1773,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11641:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11640:6:1"
            },
            "scope": 1838,
            "src": "11521:824:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1836,
              "nodeType": "Block",
              "src": "13031:3:1",
              "statements": []
            },
            "documentation": {
              "id": 1827,
              "nodeType": "StructuredDocumentation",
              "src": "12351:585:1",
              "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 1837,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "12950:20:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1829,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12979:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1837,
                  "src": "12971:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1828,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12971:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1831,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12993:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1837,
                  "src": "12985:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1830,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12985:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1833,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "13005:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1837,
                  "src": "12997:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1832,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12997:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12970:43:1"
            },
            "returnParameters": {
              "id": 1835,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13031:0:1"
            },
            "scope": 1838,
            "src": "12941:93:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 1839,
        "src": "599:12437:1",
        "usedErrors": []
      }
    ],
    "src": "33:13004:1"
  },
  "bytecode": "60806040523480156200001157600080fd5b50604051620014d8380380620014d88339810160408190526200003491620001c5565b81516200004990600090602085019062000068565b5080516200005f90600190602084019062000068565b50505062000282565b82805462000076906200022f565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200012057600080fd5b81516001600160401b03808211156200013d576200013d6200026c565b604051601f8301601f19908116603f011681019082821181831017156200016857620001686200026c565b816040528381526020925086838588010111156200018557600080fd5b600091505b83821015620001a957858201830151818301840152908201906200018a565b83821115620001bb5760008385830101525b9695505050505050565b60008060408385031215620001d957600080fd5b82516001600160401b0380821115620001f157600080fd5b620001ff868387016200010e565b935060208501519150808211156200021657600080fd5b5062000225858286016200010e565b9150509250929050565b600181811c908216806200024457607f821691505b602082108114156200026657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61124680620002926000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610f25565b610228565b60405190151581526020015b60405180910390f35b61010461027a565b6040516100f39190611010565b61012461011f366004610f5f565b61030c565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610efb565b6103a6565b005b61014f61015f366004610da7565b6104bc565b61014f610172366004610da7565b6104ed565b610124610185366004610f5f565b610508565b61019d610198366004610d59565b61057f565b6040519081526020016100f3565b610104610606565b61014f6101c1366004610ebf565b610615565b61014f6101d4366004610de3565b6106da565b6101046101e7366004610f5f565b610712565b6100e76101fa366004610d74565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061025957506001600160e01b03198216635b5e139f60e01b145b8061027457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461028990611135565b80601f01602080910402602001604051908101604052809291908181526020018280546102b590611135565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661038a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103b182610508565b9050806001600160a01b0316836001600160a01b0316141561041f5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610381565b336001600160a01b038216148061043b575061043b81336101fa565b6104ad5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610381565b6104b783836107fa565b505050565b6104c63382610868565b6104e25760405162461bcd60e51b815260040161038190611075565b6104b783838361095f565b6104b7838383604051806020016040528060008152506106da565b6000818152600260205260408120546001600160a01b0316806102745760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610381565b60006001600160a01b0382166105ea5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610381565b506001600160a01b031660009081526003602052604090205490565b60606001805461028990611135565b6001600160a01b03821633141561066e5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610381565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6106e43383610868565b6107005760405162461bcd60e51b815260040161038190611075565b61070c84848484610aff565b50505050565b6000818152600260205260409020546060906001600160a01b03166107915760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610381565b60006107a860408051602081019091526000815290565b905060008151116107c857604051806020016040528060008152506107f3565b806107d284610b32565b6040516020016107e3929190610fa4565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061082f82610508565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166108e15760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610381565b60006108ec83610508565b9050806001600160a01b0316846001600160a01b031614806109275750836001600160a01b031661091c8461030c565b6001600160a01b0316145b8061095757506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661097282610508565b6001600160a01b0316146109da5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610381565b6001600160a01b038216610a3c5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610381565b610a476000826107fa565b6001600160a01b0383166000908152600360205260408120805460019290610a709084906110f2565b90915550506001600160a01b0382166000908152600360205260408120805460019290610a9e9084906110c6565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610b0a84848461095f565b610b1684848484610c30565b61070c5760405162461bcd60e51b815260040161038190611023565b606081610b565750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b805780610b6a81611170565b9150610b799050600a836110de565b9150610b5a565b60008167ffffffffffffffff811115610b9b57610b9b6111e1565b6040519080825280601f01601f191660200182016040528015610bc5576020820181803683370190505b5090505b841561095757610bda6001836110f2565b9150610be7600a8661118b565b610bf29060306110c6565b60f81b818381518110610c0757610c076111cb565b60200101906001600160f81b031916908160001a905350610c29600a866110de565b9450610bc9565b60006001600160a01b0384163b15610d3257604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610c74903390899088908890600401610fd3565b602060405180830381600087803b158015610c8e57600080fd5b505af1925050508015610cbe575060408051601f3d908101601f19168201909252610cbb91810190610f42565b60015b610d18573d808015610cec576040519150601f19603f3d011682016040523d82523d6000602084013e610cf1565b606091505b508051610d105760405162461bcd60e51b815260040161038190611023565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610957565b506001949350505050565b80356001600160a01b0381168114610d5457600080fd5b919050565b600060208284031215610d6b57600080fd5b6107f382610d3d565b60008060408385031215610d8757600080fd5b610d9083610d3d565b9150610d9e60208401610d3d565b90509250929050565b600080600060608486031215610dbc57600080fd5b610dc584610d3d565b9250610dd360208501610d3d565b9150604084013590509250925092565b60008060008060808587031215610df957600080fd5b610e0285610d3d565b9350610e1060208601610d3d565b925060408501359150606085013567ffffffffffffffff80821115610e3457600080fd5b818701915087601f830112610e4857600080fd5b813581811115610e5a57610e5a6111e1565b604051601f8201601f19908116603f01168101908382118183101715610e8257610e826111e1565b816040528281528a6020848701011115610e9b57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610ed257600080fd5b610edb83610d3d565b915060208301358015158114610ef057600080fd5b809150509250929050565b60008060408385031215610f0e57600080fd5b610f1783610d3d565b946020939093013593505050565b600060208284031215610f3757600080fd5b81356107f3816111f7565b600060208284031215610f5457600080fd5b81516107f3816111f7565b600060208284031215610f7157600080fd5b5035919050565b60008151808452610f90816020860160208601611109565b601f01601f19169290920160200192915050565b60008351610fb6818460208801611109565b835190830190610fca818360208801611109565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061100690830184610f78565b9695505050505050565b6020815260006107f36020830184610f78565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600082198211156110d9576110d961119f565b500190565b6000826110ed576110ed6111b5565b500490565b6000828210156111045761110461119f565b500390565b60005b8381101561112457818101518382015260200161110c565b8381111561070c5750506000910152565b600181811c9082168061114957607f821691505b6020821081141561116a57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156111845761118461119f565b5060010190565b60008261119a5761119a6111b5565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461120d57600080fd5b5056fea2646970667358221220b31400a46ab30c35918e65b82e8aaa84de57c213429b2a7db1b44a2f1f0c4b6c64736f6c63430008070033",
  "bytecodeSha1": "07c8c3b2016cc2fe0fb709779ab1e6ea94265f5f",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.7+commit.e28d00a7"
  },
  "contractName": "ERC721",
  "coverageMap": {
    "branches": {
      "1": {
        "ERC721._safeTransfer": {
          "60": [
            6620,
            6668,
            true
          ]
        },
        "ERC721._transfer": {
          "58": [
            10253,
            10284,
            true
          ],
          "59": [
            10348,
            10364,
            true
          ]
        },
        "ERC721.approve": {
          "49": [
            3553,
            3564,
            true
          ],
          "50": [
            3621,
            3642,
            true
          ],
          "51": [
            3646,
            3690,
            true
          ]
        },
        "ERC721.balanceOf": {
          "54": [
            1993,
            2012,
            true
          ]
        },
        "ERC721.ownerOf": {
          "53": [
            2297,
            2316,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "56": [
            5448,
            5489,
            true
          ]
        },
        "ERC721.setApprovalForAll": {
          "55": [
            4258,
            4282,
            true
          ]
        },
        "ERC721.tokenURI": {
          "57": [
            3019,
            3044,
            true
          ]
        },
        "ERC721.transferFrom": {
          "52": [
            4895,
            4936,
            true
          ]
        }
      },
      "10": {},
      "11": {},
      "2": {},
      "3": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {
        "Strings.toString": {
          "61": [
            544,
            554,
            false
          ]
        }
      }
    },
    "statements": {
      "1": {
        "ERC721._approve": {
          "26": [
            10871,
            10900
          ],
          "27": [
            10910,
            10961
          ]
        },
        "ERC721._baseURI": {
          "24": [
            3343,
            3352
          ]
        },
        "ERC721._checkOnERC721Received": {
          "46": [
            11985,
            12045
          ],
          "47": [
            11815,
            11877
          ],
          "48": [
            12317,
            12328
          ]
        },
        "ERC721._exists": {
          "4": [
            7114,
            7151
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "28": [
            7425,
            7498
          ],
          "29": [
            7557,
            7660
          ]
        },
        "ERC721._safeTransfer": {
          "37": [
            6574,
            6602
          ],
          "38": [
            6612,
            6723
          ]
        },
        "ERC721._transfer": {
          "30": [
            10245,
            10330
          ],
          "31": [
            10340,
            10405
          ],
          "32": [
            10517,
            10546
          ],
          "33": [
            10557,
            10577
          ],
          "34": [
            10587,
            10605
          ],
          "35": [
            10615,
            10636
          ],
          "36": [
            10647,
            10679
          ]
        },
        "ERC721.approve": {
          "7": [
            3545,
            3602
          ],
          "9": [
            3613,
            3772
          ],
          "10": [
            3783,
            3804
          ]
        },
        "ERC721.balanceOf": {
          "15": [
            1985,
            2059
          ],
          "16": [
            2069,
            2092
          ]
        },
        "ERC721.getApproved": {
          "5": [
            3967,
            4040
          ],
          "6": [
            4051,
            4082
          ]
        },
        "ERC721.isApprovedForAll": {
          "0": [
            4625,
            4667
          ]
        },
        "ERC721.name": {
          "3": [
            2532,
            2544
          ]
        },
        "ERC721.ownerOf": {
          "14": [
            2289,
            2362
          ]
        },
        "ERC721.safeTransferFrom": {
          "13": [
            5205,
            5244
          ],
          "21": [
            5440,
            5543
          ],
          "22": [
            5553,
            5592
          ]
        },
        "ERC721.setApprovalForAll": {
          "18": [
            4250,
            4312
          ],
          "19": [
            4323,
            4376
          ],
          "20": [
            4386,
            4439
          ]
        },
        "ERC721.supportsInterface": {
          "1": [
            1665,
            1828
          ]
        },
        "ERC721.symbol": {
          "17": [
            2696,
            2710
          ]
        },
        "ERC721.tokenURI": {
          "23": [
            2881,
            2957
          ],
          "25": [
            3012,
            3129
          ]
        },
        "ERC721.transferFrom": {
          "11": [
            4887,
            4990
          ],
          "12": [
            5001,
            5029
          ]
        }
      },
      "10": {
        "ERC165.supportsInterface": {
          "2": [
            864,
            911
          ]
        }
      },
      "11": {},
      "2": {},
      "3": {},
      "6": {},
      "7": {
        "Address.isContract": {
          "45": [
            1109,
            1124
          ]
        }
      },
      "8": {
        "Context._msgSender": {
          "8": [
            658,
            675
          ]
        }
      },
      "9": {
        "Strings.toString": {
          "39": [
            570,
            580
          ],
          "40": [
            686,
            694
          ],
          "41": [
            708,
            718
          ],
          "42": [
            820,
            831
          ],
          "43": [
            845,
            901
          ],
          "44": [
            915,
            926
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.0.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/IERC721Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/Strings"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "599:12437:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1547:288;;;;;;:::i;:::-;;:::i;:::-;;;5027:14:14;;5020:22;5002:41;;4990:2;4975:18;1547:288:1;;;;;;;;2453:98;;;:::i;:::-;;;;;;;:::i;3872:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;4325:32:14;;;4307:51;;4295:2;4280:18;3872:217:1;4161:203:14;3416:395:1;;;;;;:::i;:::-;;:::i;:::-;;4736:300;;;;;;:::i;:::-;;:::i;5102:149::-;;;;;;:::i;:::-;;:::i;2156:235::-;;;;;;:::i;:::-;;:::i;1894:205::-;;;;;;:::i;:::-;;:::i;:::-;;;10320:25:14;;;10308:2;10293:18;1894:205:1;10174:177:14;2615:102:1;;;:::i;4156:290::-;;;;;;:::i;:::-;;:::i;5317:282::-;;;;;;:::i;:::-;;:::i;2783:353::-;;;;;;:::i;:::-;;:::i;4512:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4632:25:1;;;4609:4;4632:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4512:162;1547:288;1649:4;-1:-1:-1;;;;;;1672:40:1;;-1:-1:-1;;;1672:40:1;;:104;;-1:-1:-1;;;;;;;1728:48:1;;-1:-1:-1;;;1728:48:1;1672:104;:156;;;-1:-1:-1;;;;;;;;;;871:40:10;;;1792:36:1;1665:163;1547:288;-1:-1:-1;;1547:288:1:o;2453:98::-;2507:13;2539:5;2532:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2453:98;:::o;3872:217::-;3948:7;7121:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7121:16:1;3967:73;;;;-1:-1:-1;;;3967:73:1;;8317:2:14;3967:73:1;;;8299:21:14;8356:2;8336:18;;;8329:30;8395:34;8375:18;;;8368:62;-1:-1:-1;;;8446:18:14;;;8439:42;8498:19;;3967:73:1;;;;;;;;;-1:-1:-1;4058:24:1;;;;:15;:24;;;;;;-1:-1:-1;;;;;4058:24:1;;3872:217::o;3416:395::-;3496:13;3512:23;3527:7;3512:14;:23::i;:::-;3496:39;;3559:5;-1:-1:-1;;;;;3553:11:1;:2;-1:-1:-1;;;;;3553:11:1;;;3545:57;;;;-1:-1:-1;;;3545:57:1;;9556:2:14;3545:57:1;;;9538:21:14;9595:2;9575:18;;;9568:30;9634:34;9614:18;;;9607:62;-1:-1:-1;;;9685:18:14;;;9678:31;9726:19;;3545:57:1;9354:397:14;3545:57:1;665:10:8;-1:-1:-1;;;;;3621:21:1;;;;:69;;-1:-1:-1;3646:44:1;3670:5;665:10:8;4512:162:1;:::i;3646:44::-;3613:159;;;;-1:-1:-1;;;3613:159:1;;7071:2:14;3613:159:1;;;7053:21:14;7110:2;7090:18;;;7083:30;7149:34;7129:18;;;7122:62;7220:26;7200:18;;;7193:54;7264:19;;3613:159:1;6869:420:14;3613:159:1;3783:21;3792:2;3796:7;3783:8;:21::i;:::-;3486:325;3416:395;;:::o;4736:300::-;4895:41;665:10:8;4928:7:1;4895:18;:41::i;:::-;4887:103;;;;-1:-1:-1;;;4887:103:1;;;;;;;:::i;:::-;5001:28;5011:4;5017:2;5021:7;5001:9;:28::i;5102:149::-;5205:39;5222:4;5228:2;5232:7;5205:39;;;;;;;;;;;;:16;:39::i;2156:235::-;2228:7;2263:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2263:16:1;2297:19;2289:73;;;;-1:-1:-1;;;2289:73:1;;7907:2:14;2289:73:1;;;7889:21:14;7946:2;7926:18;;;7919:30;7985:34;7965:18;;;7958:62;-1:-1:-1;;;8036:18:14;;;8029:39;8085:19;;2289:73:1;7705:405:14;1894:205:1;1966:7;-1:-1:-1;;;;;1993:19:1;;1985:74;;;;-1:-1:-1;;;1985:74:1;;7496:2:14;1985:74:1;;;7478:21:14;7535:2;7515:18;;;7508:30;7574:34;7554:18;;;7547:62;-1:-1:-1;;;7625:18:14;;;7618:40;7675:19;;1985:74:1;7294:406:14;1985:74:1;-1:-1:-1;;;;;;2076:16:1;;;;;:9;:16;;;;;;;1894:205::o;2615:102::-;2671:13;2703:7;2696:14;;;;;:::i;4156:290::-;-1:-1:-1;;;;;4258:24:1;;665:10:8;4258:24:1;;4250:62;;;;-1:-1:-1;;;4250:62:1;;6304:2:14;4250:62:1;;;6286:21:14;6343:2;6323:18;;;6316:30;6382:27;6362:18;;;6355:55;6427:18;;4250:62:1;6102:349:14;4250:62:1;665:10:8;4323:32:1;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;4323:42:1;;;;;;;;;;;;:53;;-1:-1:-1;;4323:53:1;;;;;;;;;;4391:48;;5002:41:14;;;4323:42:1;;665:10:8;4391:48:1;;4975:18:14;4391:48:1;;;;;;;4156:290;;:::o;5317:282::-;5448:41;665:10:8;5481:7:1;5448:18;:41::i;:::-;5440:103;;;;-1:-1:-1;;;5440:103:1;;;;;;;:::i;:::-;5553:39;5567:4;5573:2;5577:7;5586:5;5553:13;:39::i;:::-;5317:282;;;;:::o;2783:353::-;7098:4;7121:16;;;:7;:16;;;;;;2856:13;;-1:-1:-1;;;;;7121:16:1;2881:76;;;;-1:-1:-1;;;2881:76:1;;9140:2:14;2881:76:1;;;9122:21:14;9179:2;9159:18;;;9152:30;9218:34;9198:18;;;9191:62;-1:-1:-1;;;9269:18:14;;;9262:45;9324:19;;2881:76:1;8938:411:14;2881:76:1;2968:21;2992:10;3343:9;;;;;;;;;-1:-1:-1;3343:9:1;;;3267:92;2992:10;2968:34;;3043:1;3025:7;3019:21;:25;:110;;;;;;;;;;;;;;;;;3083:7;3092:18;:7;:16;:18::i;:::-;3066:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3019:110;3012:117;2783:353;-1:-1:-1;;;2783:353:1:o;10797:171::-;10871:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;10871:29:1;-1:-1:-1;;;;;10871:29:1;;;;;;;;:24;;10924:23;10871:24;10924:14;:23::i;:::-;-1:-1:-1;;;;;10915:46:1;;;;;;;;;;;10797:171;;:::o;7316:351::-;7409:4;7121:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7121:16:1;7425:73;;;;-1:-1:-1;;;7425:73:1;;6658:2:14;7425:73:1;;;6640:21:14;6697:2;6677:18;;;6670:30;6736:34;6716:18;;;6709:62;-1:-1:-1;;;6787:18:14;;;6780:42;6839:19;;7425:73:1;6456:408:14;7425:73:1;7508:13;7524:23;7539:7;7524:14;:23::i;:::-;7508:39;;7576:5;-1:-1:-1;;;;;7565:16:1;:7;-1:-1:-1;;;;;7565:16:1;;:51;;;;7609:7;-1:-1:-1;;;;;7585:31:1;:20;7597:7;7585:11;:20::i;:::-;-1:-1:-1;;;;;7585:31:1;;7565:51;:94;;;-1:-1:-1;;;;;;4632:25:1;;;4609:4;4632:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7620:39;7557:103;7316:351;-1:-1:-1;;;;7316:351:1:o;10156:530::-;10280:4;-1:-1:-1;;;;;10253:31:1;:23;10268:7;10253:14;:23::i;:::-;-1:-1:-1;;;;;10253:31:1;;10245:85;;;;-1:-1:-1;;;10245:85:1;;8730:2:14;10245:85:1;;;8712:21:14;8769:2;8749:18;;;8742:30;8808:34;8788:18;;;8781:62;-1:-1:-1;;;8859:18:14;;;8852:39;8908:19;;10245:85:1;8528:405:14;10245:85:1;-1:-1:-1;;;;;10348:16:1;;10340:65;;;;-1:-1:-1;;;10340:65:1;;5899:2:14;10340:65:1;;;5881:21:14;5938:2;5918:18;;;5911:30;5977:34;5957:18;;;5950:62;-1:-1:-1;;;6028:18:14;;;6021:34;6072:19;;10340:65:1;5697:400:14;10340:65:1;10517:29;10534:1;10538:7;10517:8;:29::i;:::-;-1:-1:-1;;;;;10557:15:1;;;;;;:9;:15;;;;;:20;;10576:1;;10557:15;:20;;10576:1;;10557:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10587:13:1;;;;;;:9;:13;;;;;:18;;10604:1;;10587:13;:18;;10604:1;;10587:18;:::i;:::-;;;;-1:-1:-1;;10615:16:1;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10615:21:1;-1:-1:-1;;;;;10615:21:1;;;;;;;;;10652:27;;10615:16;;10652:27;;;;;;;10156:530;;;:::o;6461:269::-;6574:28;6584:4;6590:2;6594:7;6574:9;:28::i;:::-;6620:48;6643:4;6649:2;6653:7;6662:5;6620:22;:48::i;:::-;6612:111;;;;-1:-1:-1;;;6612:111:1;;;;;;;:::i;271:703:9:-;327:13;544:10;540:51;;-1:-1:-1;;570:10:9;;;;;;;;;;;;-1:-1:-1;;;570:10:9;;;;;271:703::o;540:51::-;615:5;600:12;654:75;661:9;;654:75;;686:8;;;;:::i;:::-;;-1:-1:-1;708:10:9;;-1:-1:-1;716:2:9;708:10;;:::i;:::-;;;654:75;;;738:19;770:6;760:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;760:17:9;;738:39;;787:150;794:10;;787:150;;820:11;830:1;820:11;;:::i;:::-;;-1:-1:-1;888:10:9;896:2;888:5;:10;:::i;:::-;875:24;;:2;:24;:::i;:::-;862:39;;845:6;852;845:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;845:56:9;;;;;;;;-1:-1:-1;915:11:9;924:2;915:11;;:::i;:::-;;;787:150;;11521:824:1;11641:4;-1:-1:-1;;;;;11665:13:1;;1078:20:7;1116:8;11661:678:1;;11700:72;;-1:-1:-1;;;11700:72:1;;-1:-1:-1;;;;;11700:36:1;;;;;:72;;665:10:8;;11751:4:1;;11757:7;;11766:5;;11700:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11700:72:1;;;;;;;;-1:-1:-1;;11700:72:1;;;;;;;;;;;;:::i;:::-;;;11696:591;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11943:13:1;;11939:334;;11985:60;;-1:-1:-1;;;11985:60:1;;;;;;;:::i;11939:334::-;12225:6;12219:13;12210:6;12206:2;12202:15;12195:38;11696:591;-1:-1:-1;;;;;;11822:55:1;-1:-1:-1;;;11822:55:1;;-1:-1:-1;11815:62:1;;11661:678;-1:-1:-1;12324:4:1;11521:824;;;;;;:::o;14:173:14:-;82:20;;-1:-1:-1;;;;;131:31:14;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:1138::-;1076:6;1084;1092;1100;1153:3;1141:9;1132:7;1128:23;1124:33;1121:53;;;1170:1;1167;1160:12;1121:53;1193:29;1212:9;1193:29;:::i;:::-;1183:39;;1241:38;1275:2;1264:9;1260:18;1241:38;:::i;:::-;1231:48;;1326:2;1315:9;1311:18;1298:32;1288:42;;1381:2;1370:9;1366:18;1353:32;1404:18;1445:2;1437:6;1434:14;1431:34;;;1461:1;1458;1451:12;1431:34;1499:6;1488:9;1484:22;1474:32;;1544:7;1537:4;1533:2;1529:13;1525:27;1515:55;;1566:1;1563;1556:12;1515:55;1602:2;1589:16;1624:2;1620;1617:10;1614:36;;;1630:18;;:::i;:::-;1705:2;1699:9;1673:2;1759:13;;-1:-1:-1;;1755:22:14;;;1779:2;1751:31;1747:40;1735:53;;;1803:18;;;1823:22;;;1800:46;1797:72;;;1849:18;;:::i;:::-;1889:10;1885:2;1878:22;1924:2;1916:6;1909:18;1964:7;1959:2;1954;1950;1946:11;1942:20;1939:33;1936:53;;;1985:1;1982;1975:12;1936:53;2041:2;2036;2032;2028:11;2023:2;2015:6;2011:15;1998:46;2086:1;2081:2;2076;2068:6;2064:15;2060:24;2053:35;2107:6;2097:16;;;;;;;981:1138;;;;;;;:::o;2124:347::-;2189:6;2197;2250:2;2238:9;2229:7;2225:23;2221:32;2218:52;;;2266:1;2263;2256:12;2218:52;2289:29;2308:9;2289:29;:::i;:::-;2279:39;;2368:2;2357:9;2353:18;2340:32;2415:5;2408:13;2401:21;2394:5;2391:32;2381:60;;2437:1;2434;2427:12;2381:60;2460:5;2450:15;;;2124:347;;;;;:::o;2476:254::-;2544:6;2552;2605:2;2593:9;2584:7;2580:23;2576:32;2573:52;;;2621:1;2618;2611:12;2573:52;2644:29;2663:9;2644:29;:::i;:::-;2634:39;2720:2;2705:18;;;;2692:32;;-1:-1:-1;;;2476:254:14:o;2735:245::-;2793:6;2846:2;2834:9;2825:7;2821:23;2817:32;2814:52;;;2862:1;2859;2852:12;2814:52;2901:9;2888:23;2920:30;2944:5;2920:30;:::i;2985:249::-;3054:6;3107:2;3095:9;3086:7;3082:23;3078:32;3075:52;;;3123:1;3120;3113:12;3075:52;3155:9;3149:16;3174:30;3198:5;3174:30;:::i;3239:180::-;3298:6;3351:2;3339:9;3330:7;3326:23;3322:32;3319:52;;;3367:1;3364;3357:12;3319:52;-1:-1:-1;3390:23:14;;3239:180;-1:-1:-1;3239:180:14:o;3424:257::-;3465:3;3503:5;3497:12;3530:6;3525:3;3518:19;3546:63;3602:6;3595:4;3590:3;3586:14;3579:4;3572:5;3568:16;3546:63;:::i;:::-;3663:2;3642:15;-1:-1:-1;;3638:29:14;3629:39;;;;3670:4;3625:50;;3424:257;-1:-1:-1;;3424:257:14:o;3686:470::-;3865:3;3903:6;3897:13;3919:53;3965:6;3960:3;3953:4;3945:6;3941:17;3919:53;:::i;:::-;4035:13;;3994:16;;;;4057:57;4035:13;3994:16;4091:4;4079:17;;4057:57;:::i;:::-;4130:20;;3686:470;-1:-1:-1;;;;3686:470:14:o;4369:488::-;-1:-1:-1;;;;;4638:15:14;;;4620:34;;4690:15;;4685:2;4670:18;;4663:43;4737:2;4722:18;;4715:34;;;4785:3;4780:2;4765:18;;4758:31;;;4563:4;;4806:45;;4831:19;;4823:6;4806:45;:::i;:::-;4798:53;4369:488;-1:-1:-1;;;;;;4369:488:14:o;5054:219::-;5203:2;5192:9;5185:21;5166:4;5223:44;5263:2;5252:9;5248:18;5240:6;5223:44;:::i;5278:414::-;5480:2;5462:21;;;5519:2;5499:18;;;5492:30;5558:34;5553:2;5538:18;;5531:62;-1:-1:-1;;;5624:2:14;5609:18;;5602:48;5682:3;5667:19;;5278:414::o;9756:413::-;9958:2;9940:21;;;9997:2;9977:18;;;9970:30;10036:34;10031:2;10016:18;;10009:62;-1:-1:-1;;;10102:2:14;10087:18;;10080:47;10159:3;10144:19;;9756:413::o;10356:128::-;10396:3;10427:1;10423:6;10420:1;10417:13;10414:39;;;10433:18;;:::i;:::-;-1:-1:-1;10469:9:14;;10356:128::o;10489:120::-;10529:1;10555;10545:35;;10560:18;;:::i;:::-;-1:-1:-1;10594:9:14;;10489:120::o;10614:125::-;10654:4;10682:1;10679;10676:8;10673:34;;;10687:18;;:::i;:::-;-1:-1:-1;10724:9:14;;10614:125::o;10744:258::-;10816:1;10826:113;10840:6;10837:1;10834:13;10826:113;;;10916:11;;;10910:18;10897:11;;;10890:39;10862:2;10855:10;10826:113;;;10957:6;10954:1;10951:13;10948:48;;;-1:-1:-1;;10992:1:14;10974:16;;10967:27;10744:258::o;11007:380::-;11086:1;11082:12;;;;11129;;;11150:61;;11204:4;11196:6;11192:17;11182:27;;11150:61;11257:2;11249:6;11246:14;11226:18;11223:38;11220:161;;;11303:10;11298:3;11294:20;11291:1;11284:31;11338:4;11335:1;11328:15;11366:4;11363:1;11356:15;11220:161;;11007:380;;;:::o;11392:135::-;11431:3;-1:-1:-1;;11452:17:14;;11449:43;;;11472:18;;:::i;:::-;-1:-1:-1;11519:1:14;11508:13;;11392:135::o;11532:112::-;11564:1;11590;11580:35;;11595:18;;:::i;:::-;-1:-1:-1;11629:9:14;;11532:112::o;11649:127::-;11710:10;11705:3;11701:20;11698:1;11691:31;11741:4;11738:1;11731:15;11765:4;11762:1;11755:15;11781:127;11842:10;11837:3;11833:20;11830:1;11823:31;11873:4;11870:1;11863:15;11897:4;11894:1;11887:15;11913:127;11974:10;11969:3;11965:20;11962:1;11955:31;12005:4;12002:1;11995:15;12029:4;12026:1;12019:15;12045:127;12106:10;12101:3;12097:20;12094:1;12087:31;12137:4;12134:1;12127:15;12161:4;12158:1;12151:15;12177:131;-1:-1:-1;;;;;;12251:32:14;;12241:43;;12231:71;;12298:1;12295;12288:12;12231:71;12177:131;:::o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "constructor": {
        "details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "offset": [
    599,
    13036
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xF25 JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xF5F JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xEFB JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xDA7 JUMP JUMPDEST PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xDA7 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xF5F JUMP JUMPDEST PUSH2 0x508 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xD59 JUMP JUMPDEST PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x606 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xEBF JUMP JUMPDEST PUSH2 0x615 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE3 JUMP JUMPDEST PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xF5F JUMP JUMPDEST PUSH2 0x712 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xD74 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x259 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0x1135 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0x1135 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x38A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B1 DUP3 PUSH2 0x508 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x41F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x43B JUMPI POP PUSH2 0x43B DUP2 CALLER PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x4AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x4B7 DUP4 DUP4 PUSH2 0x7FA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4C6 CALLER DUP3 PUSH2 0x868 JUMP JUMPDEST PUSH2 0x4E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x1075 JUMP JUMPDEST PUSH2 0x4B7 DUP4 DUP4 DUP4 PUSH2 0x95F JUMP JUMPDEST PUSH2 0x4B7 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x6DA JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0x1135 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ ISZERO PUSH2 0x66E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x6E4 CALLER DUP4 PUSH2 0x868 JUMP JUMPDEST PUSH2 0x700 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x1075 JUMP JUMPDEST PUSH2 0x70C DUP5 DUP5 DUP5 DUP5 PUSH2 0xAFF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x791 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A8 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x7C8 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F3 JUMP JUMPDEST DUP1 PUSH2 0x7D2 DUP5 PUSH2 0xB32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7E3 SWAP3 SWAP2 SWAP1 PUSH2 0xFA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x82F DUP3 PUSH2 0x508 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EC DUP4 PUSH2 0x508 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x927 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x91C DUP5 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x957 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x972 DUP3 PUSH2 0x508 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x9DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA3C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0xA47 PUSH1 0x0 DUP3 PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xA70 SWAP1 DUP5 SWAP1 PUSH2 0x10F2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xA9E SWAP1 DUP5 SWAP1 PUSH2 0x10C6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0xB0A DUP5 DUP5 DUP5 PUSH2 0x95F JUMP JUMPDEST PUSH2 0xB16 DUP5 DUP5 DUP5 DUP5 PUSH2 0xC30 JUMP JUMPDEST PUSH2 0x70C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0xB56 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xB80 JUMPI DUP1 PUSH2 0xB6A DUP2 PUSH2 0x1170 JUMP JUMPDEST SWAP2 POP PUSH2 0xB79 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x10DE JUMP JUMPDEST SWAP2 POP PUSH2 0xB5A JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB9B JUMPI PUSH2 0xB9B PUSH2 0x11E1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBC5 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x957 JUMPI PUSH2 0xBDA PUSH1 0x1 DUP4 PUSH2 0x10F2 JUMP JUMPDEST SWAP2 POP PUSH2 0xBE7 PUSH1 0xA DUP7 PUSH2 0x118B JUMP JUMPDEST PUSH2 0xBF2 SWAP1 PUSH1 0x30 PUSH2 0x10C6 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC07 JUMPI PUSH2 0xC07 PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xC29 PUSH1 0xA DUP7 PUSH2 0x10DE JUMP JUMPDEST SWAP5 POP PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xD32 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC74 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xFD3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xCBE JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCBB SWAP2 DUP2 ADD SWAP1 PUSH2 0xF42 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD18 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xCEC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCF1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0xD10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x1023 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x957 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F3 DUP3 PUSH2 0xD3D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD90 DUP4 PUSH2 0xD3D JUMP JUMPDEST SWAP2 POP PUSH2 0xD9E PUSH1 0x20 DUP5 ADD PUSH2 0xD3D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC5 DUP5 PUSH2 0xD3D JUMP JUMPDEST SWAP3 POP PUSH2 0xDD3 PUSH1 0x20 DUP6 ADD PUSH2 0xD3D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xDF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE02 DUP6 PUSH2 0xD3D JUMP JUMPDEST SWAP4 POP PUSH2 0xE10 PUSH1 0x20 DUP7 ADD PUSH2 0xD3D JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xE5A JUMPI PUSH2 0xE5A PUSH2 0x11E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xE82 JUMPI PUSH2 0xE82 PUSH2 0x11E1 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xE9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xED2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEDB DUP4 PUSH2 0xD3D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xEF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF17 DUP4 PUSH2 0xD3D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7F3 DUP2 PUSH2 0x11F7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x7F3 DUP2 PUSH2 0x11F7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xF90 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1109 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xFB6 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1109 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xFCA DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1109 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1006 SWAP1 DUP4 ADD DUP5 PUSH2 0xF78 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x7F3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF78 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x10D9 JUMPI PUSH2 0x10D9 PUSH2 0x119F JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x10ED JUMPI PUSH2 0x10ED PUSH2 0x11B5 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1104 JUMPI PUSH2 0x1104 PUSH2 0x119F JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1124 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x110C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x70C JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1149 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x116A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1184 JUMPI PUSH2 0x1184 PUSH2 0x119F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x119A JUMPI PUSH2 0x119A PUSH2 0x11B5 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x120D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 EQ STOP LOG4 PUSH11 0xB30C35918E65B82E8AAA84 0xDE JUMPI 0xC2 SGT TIMESTAMP SWAP12 0x2A PUSH30 0xB1B44A2F1F0C4B6C64736F6C634300080700330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        599,
        13036
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "6": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "DUP1",
      "path": "1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "REVERT",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "17": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "POP",
      "path": "1"
    },
    "18": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "21": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "LT",
      "path": "1"
    },
    "22": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCF"
    },
    "25": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "29": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "SHR",
      "path": "1"
    },
    "32": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "DUP1",
      "path": "1"
    },
    "33": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6352211E"
    },
    "38": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "GT",
      "path": "1"
    },
    "39": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "43": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "DUP1",
      "path": "1"
    },
    "44": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA22CB465"
    },
    "49": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "GT",
      "path": "1"
    },
    "50": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "54": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "DUP1",
      "path": "1"
    },
    "55": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA22CB465"
    },
    "60": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "EQ",
      "path": "1"
    },
    "61": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B3"
    },
    "64": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "65": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "DUP1",
      "path": "1"
    },
    "66": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xB88D4FDE"
    },
    "71": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "EQ",
      "path": "1"
    },
    "72": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C6"
    },
    "75": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "76": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "DUP1",
      "path": "1"
    },
    "77": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xC87B56DD"
    },
    "82": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "EQ",
      "path": "1"
    },
    "83": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D9"
    },
    "86": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "87": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "DUP1",
      "path": "1"
    },
    "88": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xE985E9C5"
    },
    "93": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "EQ",
      "path": "1"
    },
    "94": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1EC"
    },
    "97": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "98": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "DUP1",
      "path": "1"
    },
    "101": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "REVERT",
      "path": "1"
    },
    "102": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "103": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "DUP1",
      "path": "1"
    },
    "104": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6352211E"
    },
    "109": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "EQ",
      "path": "1"
    },
    "110": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x177"
    },
    "113": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "114": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "DUP1",
      "path": "1"
    },
    "115": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x70A08231"
    },
    "120": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "EQ",
      "path": "1"
    },
    "121": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x18A"
    },
    "124": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "125": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "DUP1",
      "path": "1"
    },
    "126": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95D89B41"
    },
    "131": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "EQ",
      "path": "1"
    },
    "132": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1AB"
    },
    "135": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "136": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "DUP1",
      "path": "1"
    },
    "139": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "REVERT",
      "path": "1"
    },
    "140": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "141": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "DUP1",
      "path": "1"
    },
    "142": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x1FFC9A7"
    },
    "147": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "EQ",
      "path": "1"
    },
    "148": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD4"
    },
    "151": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "152": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "DUP1",
      "path": "1"
    },
    "153": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6FDDE03"
    },
    "158": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "EQ",
      "path": "1"
    },
    "159": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFC"
    },
    "162": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "163": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "DUP1",
      "path": "1"
    },
    "164": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x81812FC"
    },
    "169": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "EQ",
      "path": "1"
    },
    "170": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x111"
    },
    "173": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "174": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "DUP1",
      "path": "1"
    },
    "175": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95EA7B3"
    },
    "180": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "EQ",
      "path": "1"
    },
    "181": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13C"
    },
    "184": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "185": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "DUP1",
      "path": "1"
    },
    "186": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "191": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "EQ",
      "path": "1"
    },
    "192": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x151"
    },
    "195": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "196": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "DUP1",
      "path": "1"
    },
    "197": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x42842E0E"
    },
    "202": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "EQ",
      "path": "1"
    },
    "203": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x164"
    },
    "206": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "207": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "208": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "210": {
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "DUP1",
      "path": "1"
    },
    "211": {
      "first_revert": true,
      "fn": null,
      "offset": [
        599,
        13036
      ],
      "op": "REVERT",
      "path": "1"
    },
    "212": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1547,
        1835
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "213": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1547,
        1835
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE7"
    },
    "216": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1547,
        1835
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE2"
    },
    "219": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1547,
        1835
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "220": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1547,
        1835
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "222": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1547,
        1835
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF25"
    },
    "225": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1547,
        1835
      ],
      "op": "JUMP",
      "path": "1"
    },
    "226": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1547,
        1835
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "227": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1547,
        1835
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x228"
    },
    "230": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1547,
        1835
      ],
      "op": "JUMP",
      "path": "1"
    },
    "231": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1547,
        1835
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "232": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1547,
        1835
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "234": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1547,
        1835
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "235": {
      "op": "SWAP1"
    },
    "236": {
      "op": "ISZERO"
    },
    "237": {
      "op": "ISZERO"
    },
    "238": {
      "op": "DUP2"
    },
    "239": {
      "op": "MSTORE"
    },
    "240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "242": {
      "op": "ADD"
    },
    "243": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1547,
        1835
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "244": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1547,
        1835
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "246": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1547,
        1835
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "247": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1547,
        1835
      ],
      "op": "DUP1",
      "path": "1"
    },
    "248": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1547,
        1835
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "249": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1547,
        1835
      ],
      "op": "SUB",
      "path": "1"
    },
    "250": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1547,
        1835
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "251": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1547,
        1835
      ],
      "op": "RETURN",
      "path": "1"
    },
    "252": {
      "fn": "ERC721.name",
      "offset": [
        2453,
        2551
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "253": {
      "fn": "ERC721.name",
      "offset": [
        2453,
        2551
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x104"
    },
    "256": {
      "fn": "ERC721.name",
      "offset": [
        2453,
        2551
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x27A"
    },
    "259": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2453,
        2551
      ],
      "op": "JUMP",
      "path": "1"
    },
    "260": {
      "fn": "ERC721.name",
      "offset": [
        2453,
        2551
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "261": {
      "fn": "ERC721.name",
      "offset": [
        2453,
        2551
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "263": {
      "fn": "ERC721.name",
      "offset": [
        2453,
        2551
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "264": {
      "fn": "ERC721.name",
      "offset": [
        2453,
        2551
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF3"
    },
    "267": {
      "fn": "ERC721.name",
      "offset": [
        2453,
        2551
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "268": {
      "fn": "ERC721.name",
      "offset": [
        2453,
        2551
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "269": {
      "fn": "ERC721.name",
      "offset": [
        2453,
        2551
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1010"
    },
    "272": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2453,
        2551
      ],
      "op": "JUMP",
      "path": "1"
    },
    "273": {
      "fn": "ERC721.getApproved",
      "offset": [
        3872,
        4089
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "274": {
      "fn": "ERC721.getApproved",
      "offset": [
        3872,
        4089
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x124"
    },
    "277": {
      "fn": "ERC721.getApproved",
      "offset": [
        3872,
        4089
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11F"
    },
    "280": {
      "fn": "ERC721.getApproved",
      "offset": [
        3872,
        4089
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "281": {
      "fn": "ERC721.getApproved",
      "offset": [
        3872,
        4089
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "283": {
      "fn": "ERC721.getApproved",
      "offset": [
        3872,
        4089
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF5F"
    },
    "286": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3872,
        4089
      ],
      "op": "JUMP",
      "path": "1"
    },
    "287": {
      "fn": "ERC721.getApproved",
      "offset": [
        3872,
        4089
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "288": {
      "fn": "ERC721.getApproved",
      "offset": [
        3872,
        4089
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30C"
    },
    "291": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3872,
        4089
      ],
      "op": "JUMP",
      "path": "1"
    },
    "292": {
      "fn": "ERC721.getApproved",
      "offset": [
        3872,
        4089
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "293": {
      "fn": "ERC721.getApproved",
      "offset": [
        3872,
        4089
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "295": {
      "fn": "ERC721.getApproved",
      "offset": [
        3872,
        4089
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "302": {
      "op": "SHL"
    },
    "303": {
      "op": "SUB"
    },
    "304": {
      "op": "SWAP1"
    },
    "305": {
      "op": "SWAP2"
    },
    "306": {
      "op": "AND"
    },
    "307": {
      "op": "DUP2"
    },
    "308": {
      "op": "MSTORE"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "311": {
      "op": "ADD"
    },
    "312": {
      "fn": "ERC721.getApproved",
      "offset": [
        3872,
        4089
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF3"
    },
    "315": {
      "op": "JUMP"
    },
    "316": {
      "fn": "ERC721.approve",
      "offset": [
        3416,
        3811
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "317": {
      "fn": "ERC721.approve",
      "offset": [
        3416,
        3811
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14F"
    },
    "320": {
      "fn": "ERC721.approve",
      "offset": [
        3416,
        3811
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14A"
    },
    "323": {
      "fn": "ERC721.approve",
      "offset": [
        3416,
        3811
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "324": {
      "fn": "ERC721.approve",
      "offset": [
        3416,
        3811
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "326": {
      "fn": "ERC721.approve",
      "offset": [
        3416,
        3811
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEFB"
    },
    "329": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3416,
        3811
      ],
      "op": "JUMP",
      "path": "1"
    },
    "330": {
      "fn": "ERC721.approve",
      "offset": [
        3416,
        3811
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "331": {
      "fn": "ERC721.approve",
      "offset": [
        3416,
        3811
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3A6"
    },
    "334": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3416,
        3811
      ],
      "op": "JUMP",
      "path": "1"
    },
    "335": {
      "fn": "ERC721.approve",
      "offset": [
        3416,
        3811
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "336": {
      "fn": "ERC721.approve",
      "offset": [
        3416,
        3811
      ],
      "op": "STOP",
      "path": "1"
    },
    "337": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4736,
        5036
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "338": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4736,
        5036
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14F"
    },
    "341": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4736,
        5036
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15F"
    },
    "344": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4736,
        5036
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "345": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4736,
        5036
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "347": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4736,
        5036
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDA7"
    },
    "350": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4736,
        5036
      ],
      "op": "JUMP",
      "path": "1"
    },
    "351": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4736,
        5036
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "352": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4736,
        5036
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4BC"
    },
    "355": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4736,
        5036
      ],
      "op": "JUMP",
      "path": "1"
    },
    "356": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5102,
        5251
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "357": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5102,
        5251
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14F"
    },
    "360": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5102,
        5251
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x172"
    },
    "363": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5102,
        5251
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "364": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5102,
        5251
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "366": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5102,
        5251
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDA7"
    },
    "369": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5102,
        5251
      ],
      "op": "JUMP",
      "path": "1"
    },
    "370": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5102,
        5251
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "371": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5102,
        5251
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4ED"
    },
    "374": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5102,
        5251
      ],
      "op": "JUMP",
      "path": "1"
    },
    "375": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2156,
        2391
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "376": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2156,
        2391
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x124"
    },
    "379": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2156,
        2391
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x185"
    },
    "382": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2156,
        2391
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "383": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2156,
        2391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "385": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2156,
        2391
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF5F"
    },
    "388": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2156,
        2391
      ],
      "op": "JUMP",
      "path": "1"
    },
    "389": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2156,
        2391
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "390": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2156,
        2391
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x508"
    },
    "393": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2156,
        2391
      ],
      "op": "JUMP",
      "path": "1"
    },
    "394": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1894,
        2099
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "395": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1894,
        2099
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x19D"
    },
    "398": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1894,
        2099
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x198"
    },
    "401": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1894,
        2099
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "402": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1894,
        2099
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "404": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1894,
        2099
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD59"
    },
    "407": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1894,
        2099
      ],
      "op": "JUMP",
      "path": "1"
    },
    "408": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1894,
        2099
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "409": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1894,
        2099
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x57F"
    },
    "412": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1894,
        2099
      ],
      "op": "JUMP",
      "path": "1"
    },
    "413": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1894,
        2099
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "414": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1894,
        2099
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "416": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1894,
        2099
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "417": {
      "op": "SWAP1"
    },
    "418": {
      "op": "DUP2"
    },
    "419": {
      "op": "MSTORE"
    },
    "420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "422": {
      "op": "ADD"
    },
    "423": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1894,
        2099
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF3"
    },
    "426": {
      "op": "JUMP"
    },
    "427": {
      "fn": "ERC721.symbol",
      "offset": [
        2615,
        2717
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "428": {
      "fn": "ERC721.symbol",
      "offset": [
        2615,
        2717
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x104"
    },
    "431": {
      "fn": "ERC721.symbol",
      "offset": [
        2615,
        2717
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x606"
    },
    "434": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2615,
        2717
      ],
      "op": "JUMP",
      "path": "1"
    },
    "435": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4156,
        4446
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "436": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4156,
        4446
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14F"
    },
    "439": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4156,
        4446
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C1"
    },
    "442": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4156,
        4446
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "443": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4156,
        4446
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "445": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4156,
        4446
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEBF"
    },
    "448": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4156,
        4446
      ],
      "op": "JUMP",
      "path": "1"
    },
    "449": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4156,
        4446
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "450": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4156,
        4446
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x615"
    },
    "453": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4156,
        4446
      ],
      "op": "JUMP",
      "path": "1"
    },
    "454": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5317,
        5599
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "455": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5317,
        5599
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14F"
    },
    "458": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5317,
        5599
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D4"
    },
    "461": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5317,
        5599
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "462": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5317,
        5599
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "464": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5317,
        5599
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDE3"
    },
    "467": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5317,
        5599
      ],
      "op": "JUMP",
      "path": "1"
    },
    "468": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5317,
        5599
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "469": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5317,
        5599
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6DA"
    },
    "472": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5317,
        5599
      ],
      "op": "JUMP",
      "path": "1"
    },
    "473": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2783,
        3136
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "474": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2783,
        3136
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x104"
    },
    "477": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2783,
        3136
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E7"
    },
    "480": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2783,
        3136
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "481": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2783,
        3136
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "483": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2783,
        3136
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF5F"
    },
    "486": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2783,
        3136
      ],
      "op": "JUMP",
      "path": "1"
    },
    "487": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2783,
        3136
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "488": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2783,
        3136
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x712"
    },
    "491": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2783,
        3136
      ],
      "op": "JUMP",
      "path": "1"
    },
    "492": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4512,
        4674
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "493": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4512,
        4674
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE7"
    },
    "496": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4512,
        4674
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FA"
    },
    "499": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4512,
        4674
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "500": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4512,
        4674
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "502": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4512,
        4674
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD74"
    },
    "505": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4512,
        4674
      ],
      "op": "JUMP",
      "path": "1"
    },
    "506": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4512,
        4674
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "511": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "513": {
      "op": "SHL"
    },
    "514": {
      "op": "SUB"
    },
    "515": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4657
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 0
    },
    "516": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4657
      ],
      "op": "DUP3",
      "path": "1"
    },
    "517": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4657
      ],
      "op": "AND",
      "path": "1"
    },
    "518": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4609,
        4613
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "520": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4657
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "521": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4657
      ],
      "op": "DUP2",
      "path": "1"
    },
    "522": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4657
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "523": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4650
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "525": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4657
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "527": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4657
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "528": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4657
      ],
      "op": "DUP2",
      "path": "1"
    },
    "529": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4657
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "530": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4657
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "532": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4657
      ],
      "op": "DUP1",
      "path": "1"
    },
    "533": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4657
      ],
      "op": "DUP4",
      "path": "1"
    },
    "534": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4657
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "535": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4667
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "536": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4667
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "537": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4667
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "538": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4667
      ],
      "op": "AND",
      "path": "1"
    },
    "539": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4667
      ],
      "op": "DUP3",
      "path": "1"
    },
    "540": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4667
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "541": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4667
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "542": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4667
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "543": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4667
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "544": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4667
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "545": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4667
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "546": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4667
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "547": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4667
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "549": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4667
      ],
      "op": "AND",
      "path": "1"
    },
    "550": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4667
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "551": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4512,
        4674
      ],
      "op": "JUMP",
      "path": "1"
    },
    "552": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1547,
        1835
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "553": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1649,
        1653
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "559": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "561": {
      "op": "SHL"
    },
    "562": {
      "op": "SUB"
    },
    "563": {
      "op": "NOT"
    },
    "564": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1672,
        1712
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 1
    },
    "565": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1672,
        1712
      ],
      "op": "AND",
      "path": "1"
    },
    "566": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "571": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "573": {
      "op": "SHL"
    },
    "574": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1672,
        1712
      ],
      "op": "EQ",
      "path": "1"
    },
    "575": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1672,
        1712
      ],
      "op": "DUP1",
      "path": "1"
    },
    "576": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1672,
        1776
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x259"
    },
    "579": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1672,
        1776
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "580": {
      "op": "POP"
    },
    "581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "585": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "587": {
      "op": "SHL"
    },
    "588": {
      "op": "SUB"
    },
    "589": {
      "op": "NOT"
    },
    "590": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1728,
        1776
      ],
      "op": "DUP3",
      "path": "1"
    },
    "591": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1728,
        1776
      ],
      "op": "AND",
      "path": "1"
    },
    "592": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "597": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "599": {
      "op": "SHL"
    },
    "600": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1728,
        1776
      ],
      "op": "EQ",
      "path": "1"
    },
    "601": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1672,
        1776
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "602": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1672,
        1828
      ],
      "op": "DUP1",
      "path": "1"
    },
    "603": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1672,
        1828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x274"
    },
    "606": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1672,
        1828
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "607": {
      "op": "POP"
    },
    "608": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "613": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "615": {
      "op": "SHL"
    },
    "616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "620": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "622": {
      "op": "SHL"
    },
    "623": {
      "op": "SUB"
    },
    "624": {
      "op": "NOT"
    },
    "625": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "DUP4",
      "path": "10",
      "statement": 2
    },
    "626": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "AND",
      "path": "10"
    },
    "627": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "EQ",
      "path": "10"
    },
    "628": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1792,
        1828
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "629": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1665,
        1828
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "630": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1547,
        1835
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "631": {
      "op": "POP"
    },
    "632": {
      "op": "POP"
    },
    "633": {
      "fn": "ERC721.supportsInterface",
      "jump": "o",
      "offset": [
        1547,
        1835
      ],
      "op": "JUMP",
      "path": "1"
    },
    "634": {
      "fn": "ERC721.name",
      "offset": [
        2453,
        2551
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "635": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2520
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "637": {
      "fn": "ERC721.name",
      "offset": [
        2539,
        2544
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 3,
      "value": "0x0"
    },
    "639": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "DUP1",
      "path": "1"
    },
    "640": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "641": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x289"
    },
    "644": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "645": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1135"
    },
    "648": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2532,
        2544
      ],
      "op": "JUMP",
      "path": "1"
    },
    "649": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "650": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "DUP1",
      "path": "1"
    },
    "651": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "653": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "ADD",
      "path": "1"
    },
    "654": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "656": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "DUP1",
      "path": "1"
    },
    "657": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "658": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "DIV",
      "path": "1"
    },
    "659": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "MUL",
      "path": "1"
    },
    "660": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "662": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "ADD",
      "path": "1"
    },
    "663": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "665": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "666": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "667": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "DUP2",
      "path": "1"
    },
    "668": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "ADD",
      "path": "1"
    },
    "669": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "671": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "672": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "DUP1",
      "path": "1"
    },
    "673": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "674": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "675": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "676": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "DUP2",
      "path": "1"
    },
    "677": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "DUP2",
      "path": "1"
    },
    "678": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "679": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "681": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "ADD",
      "path": "1"
    },
    "682": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "DUP3",
      "path": "1"
    },
    "683": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "DUP1",
      "path": "1"
    },
    "684": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "685": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B5"
    },
    "688": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "689": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1135"
    },
    "692": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2532,
        2544
      ],
      "op": "JUMP",
      "path": "1"
    },
    "693": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "694": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "DUP1",
      "path": "1"
    },
    "695": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "696": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x302"
    },
    "699": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "700": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "DUP1",
      "path": "1"
    },
    "701": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "703": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "LT",
      "path": "1"
    },
    "704": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D7"
    },
    "707": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "708": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "711": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "DUP1",
      "path": "1"
    },
    "712": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "DUP4",
      "path": "1"
    },
    "713": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "714": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "DIV",
      "path": "1"
    },
    "715": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "MUL",
      "path": "1"
    },
    "716": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "DUP4",
      "path": "1"
    },
    "717": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "718": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "719": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "721": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "ADD",
      "path": "1"
    },
    "722": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "723": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x302"
    },
    "726": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "JUMP",
      "path": "1"
    },
    "727": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "728": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "DUP3",
      "path": "1"
    },
    "729": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "ADD",
      "path": "1"
    },
    "730": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "731": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "732": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "734": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "735": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "737": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "739": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "740": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "741": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "742": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "DUP2",
      "path": "1"
    },
    "743": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "744": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "DUP2",
      "path": "1"
    },
    "745": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "746": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "747": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "749": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "ADD",
      "path": "1"
    },
    "750": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "751": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "753": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "ADD",
      "path": "1"
    },
    "754": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "DUP1",
      "path": "1"
    },
    "755": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "DUP4",
      "path": "1"
    },
    "756": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "GT",
      "path": "1"
    },
    "757": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2E5"
    },
    "760": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "761": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "DUP3",
      "path": "1"
    },
    "762": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "763": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "SUB",
      "path": "1"
    },
    "764": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "766": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "AND",
      "path": "1"
    },
    "767": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "DUP3",
      "path": "1"
    },
    "768": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "ADD",
      "path": "1"
    },
    "769": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "770": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "771": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "POP",
      "path": "1"
    },
    "772": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "POP",
      "path": "1"
    },
    "773": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "POP",
      "path": "1"
    },
    "774": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "POP",
      "path": "1"
    },
    "775": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "POP",
      "path": "1"
    },
    "776": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "777": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2544
      ],
      "op": "POP",
      "path": "1"
    },
    "778": {
      "fn": "ERC721.name",
      "offset": [
        2453,
        2551
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "779": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2453,
        2551
      ],
      "op": "JUMP",
      "path": "1"
    },
    "780": {
      "fn": "ERC721.getApproved",
      "offset": [
        3872,
        4089
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "781": {
      "fn": "ERC721.getApproved",
      "offset": [
        3948,
        3955
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "783": {
      "fn": "ERC721._exists",
      "offset": [
        7121,
        7137
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 4
    },
    "784": {
      "fn": "ERC721._exists",
      "offset": [
        7121,
        7137
      ],
      "op": "DUP2",
      "path": "1"
    },
    "785": {
      "fn": "ERC721._exists",
      "offset": [
        7121,
        7137
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "786": {
      "fn": "ERC721._exists",
      "offset": [
        7121,
        7128
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "788": {
      "fn": "ERC721._exists",
      "offset": [
        7121,
        7137
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "790": {
      "fn": "ERC721._exists",
      "offset": [
        7121,
        7137
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "791": {
      "fn": "ERC721._exists",
      "offset": [
        7121,
        7137
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "793": {
      "fn": "ERC721._exists",
      "offset": [
        7121,
        7137
      ],
      "op": "DUP2",
      "path": "1"
    },
    "794": {
      "fn": "ERC721._exists",
      "offset": [
        7121,
        7137
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "795": {
      "fn": "ERC721._exists",
      "offset": [
        7121,
        7137
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "800": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "802": {
      "op": "SHL"
    },
    "803": {
      "op": "SUB"
    },
    "804": {
      "fn": "ERC721._exists",
      "offset": [
        7121,
        7137
      ],
      "op": "AND",
      "path": "1"
    },
    "805": {
      "fn": "ERC721.getApproved",
      "offset": [
        3967,
        4040
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 5,
      "value": "0x38A"
    },
    "808": {
      "fn": "ERC721.getApproved",
      "offset": [
        3967,
        4040
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "809": {
      "fn": "ERC721.getApproved",
      "offset": [
        3967,
        4040
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "811": {
      "fn": "ERC721.getApproved",
      "offset": [
        3967,
        4040
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "812": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "816": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "818": {
      "op": "SHL"
    },
    "819": {
      "fn": "ERC721.getApproved",
      "offset": [
        3967,
        4040
      ],
      "op": "DUP2",
      "path": "1"
    },
    "820": {
      "fn": "ERC721.getApproved",
      "offset": [
        3967,
        4040
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "821": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "823": {
      "fn": "ERC721.getApproved",
      "offset": [
        3967,
        4040
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "825": {
      "fn": "ERC721.getApproved",
      "offset": [
        3967,
        4040
      ],
      "op": "DUP3",
      "path": "1"
    },
    "826": {
      "fn": "ERC721.getApproved",
      "offset": [
        3967,
        4040
      ],
      "op": "ADD",
      "path": "1"
    },
    "827": {
      "op": "MSTORE"
    },
    "828": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "832": {
      "op": "DUP3"
    },
    "833": {
      "op": "ADD"
    },
    "834": {
      "op": "MSTORE"
    },
    "835": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "868": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "870": {
      "op": "DUP3"
    },
    "871": {
      "op": "ADD"
    },
    "872": {
      "op": "MSTORE"
    },
    "873": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "886": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "888": {
      "op": "SHL"
    },
    "889": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "891": {
      "op": "DUP3"
    },
    "892": {
      "op": "ADD"
    },
    "893": {
      "op": "MSTORE"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "896": {
      "op": "ADD"
    },
    "897": {
      "fn": "ERC721.getApproved",
      "offset": [
        3967,
        4040
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "898": {
      "fn": "ERC721.getApproved",
      "offset": [
        3967,
        4040
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "900": {
      "fn": "ERC721.getApproved",
      "offset": [
        3967,
        4040
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "901": {
      "fn": "ERC721.getApproved",
      "offset": [
        3967,
        4040
      ],
      "op": "DUP1",
      "path": "1"
    },
    "902": {
      "fn": "ERC721.getApproved",
      "offset": [
        3967,
        4040
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "903": {
      "fn": "ERC721.getApproved",
      "offset": [
        3967,
        4040
      ],
      "op": "SUB",
      "path": "1"
    },
    "904": {
      "fn": "ERC721.getApproved",
      "offset": [
        3967,
        4040
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "905": {
      "fn": "ERC721.getApproved",
      "offset": [
        3967,
        4040
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "906": {
      "fn": "ERC721.getApproved",
      "offset": [
        3967,
        4040
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "907": {
      "op": "POP"
    },
    "908": {
      "fn": "ERC721.getApproved",
      "offset": [
        4058,
        4082
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 6,
      "value": "0x0"
    },
    "910": {
      "fn": "ERC721.getApproved",
      "offset": [
        4058,
        4082
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "911": {
      "fn": "ERC721.getApproved",
      "offset": [
        4058,
        4082
      ],
      "op": "DUP2",
      "path": "1"
    },
    "912": {
      "fn": "ERC721.getApproved",
      "offset": [
        4058,
        4082
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "913": {
      "fn": "ERC721.getApproved",
      "offset": [
        4058,
        4073
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "915": {
      "fn": "ERC721.getApproved",
      "offset": [
        4058,
        4082
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "917": {
      "fn": "ERC721.getApproved",
      "offset": [
        4058,
        4082
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "918": {
      "fn": "ERC721.getApproved",
      "offset": [
        4058,
        4082
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "920": {
      "fn": "ERC721.getApproved",
      "offset": [
        4058,
        4082
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "921": {
      "fn": "ERC721.getApproved",
      "offset": [
        4058,
        4082
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "922": {
      "fn": "ERC721.getApproved",
      "offset": [
        4058,
        4082
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "929": {
      "op": "SHL"
    },
    "930": {
      "op": "SUB"
    },
    "931": {
      "fn": "ERC721.getApproved",
      "offset": [
        4058,
        4082
      ],
      "op": "AND",
      "path": "1"
    },
    "932": {
      "fn": "ERC721.getApproved",
      "offset": [
        4058,
        4082
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "933": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        3872,
        4089
      ],
      "op": "JUMP",
      "path": "1"
    },
    "934": {
      "fn": "ERC721.approve",
      "offset": [
        3416,
        3811
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "935": {
      "fn": "ERC721.approve",
      "offset": [
        3496,
        3509
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "937": {
      "fn": "ERC721.approve",
      "offset": [
        3512,
        3535
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3B1"
    },
    "940": {
      "fn": "ERC721.approve",
      "offset": [
        3527,
        3534
      ],
      "op": "DUP3",
      "path": "1"
    },
    "941": {
      "fn": "ERC721.approve",
      "offset": [
        3512,
        3526
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x508"
    },
    "944": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3512,
        3535
      ],
      "op": "JUMP",
      "path": "1"
    },
    "945": {
      "fn": "ERC721.approve",
      "offset": [
        3512,
        3535
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "946": {
      "fn": "ERC721.approve",
      "offset": [
        3496,
        3535
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "947": {
      "fn": "ERC721.approve",
      "offset": [
        3496,
        3535
      ],
      "op": "POP",
      "path": "1"
    },
    "948": {
      "fn": "ERC721.approve",
      "offset": [
        3559,
        3564
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 7
    },
    "949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "953": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "955": {
      "op": "SHL"
    },
    "956": {
      "op": "SUB"
    },
    "957": {
      "fn": "ERC721.approve",
      "offset": [
        3553,
        3564
      ],
      "op": "AND",
      "path": "1"
    },
    "958": {
      "fn": "ERC721.approve",
      "offset": [
        3553,
        3555
      ],
      "op": "DUP4",
      "path": "1"
    },
    "959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "963": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "965": {
      "op": "SHL"
    },
    "966": {
      "op": "SUB"
    },
    "967": {
      "fn": "ERC721.approve",
      "offset": [
        3553,
        3564
      ],
      "op": "AND",
      "path": "1"
    },
    "968": {
      "fn": "ERC721.approve",
      "offset": [
        3553,
        3564
      ],
      "op": "EQ",
      "path": "1"
    },
    "969": {
      "branch": 49,
      "fn": "ERC721.approve",
      "offset": [
        3553,
        3564
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "970": {
      "fn": "ERC721.approve",
      "offset": [
        3545,
        3602
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x41F"
    },
    "973": {
      "branch": 49,
      "fn": "ERC721.approve",
      "offset": [
        3545,
        3602
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "974": {
      "fn": "ERC721.approve",
      "offset": [
        3545,
        3602
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "976": {
      "fn": "ERC721.approve",
      "offset": [
        3545,
        3602
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "977": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "981": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "983": {
      "op": "SHL"
    },
    "984": {
      "fn": "ERC721.approve",
      "offset": [
        3545,
        3602
      ],
      "op": "DUP2",
      "path": "1"
    },
    "985": {
      "fn": "ERC721.approve",
      "offset": [
        3545,
        3602
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "986": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "988": {
      "fn": "ERC721.approve",
      "offset": [
        3545,
        3602
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "990": {
      "fn": "ERC721.approve",
      "offset": [
        3545,
        3602
      ],
      "op": "DUP3",
      "path": "1"
    },
    "991": {
      "fn": "ERC721.approve",
      "offset": [
        3545,
        3602
      ],
      "op": "ADD",
      "path": "1"
    },
    "992": {
      "op": "MSTORE"
    },
    "993": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "995": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "997": {
      "op": "DUP3"
    },
    "998": {
      "op": "ADD"
    },
    "999": {
      "op": "MSTORE"
    },
    "1000": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "1033": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1035": {
      "op": "DUP3"
    },
    "1036": {
      "op": "ADD"
    },
    "1037": {
      "op": "MSTORE"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "1042": {
      "op": "SHL"
    },
    "1043": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1045": {
      "op": "DUP3"
    },
    "1046": {
      "op": "ADD"
    },
    "1047": {
      "op": "MSTORE"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1050": {
      "op": "ADD"
    },
    "1051": {
      "fn": "ERC721.approve",
      "offset": [
        3545,
        3602
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "1054": {
      "op": "JUMP"
    },
    "1055": {
      "fn": "ERC721.approve",
      "offset": [
        3545,
        3602
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1056": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 8
    },
    "1057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1063": {
      "op": "SHL"
    },
    "1064": {
      "op": "SUB"
    },
    "1065": {
      "fn": "ERC721.approve",
      "offset": [
        3621,
        3642
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 9
    },
    "1066": {
      "fn": "ERC721.approve",
      "offset": [
        3621,
        3642
      ],
      "op": "AND",
      "path": "1"
    },
    "1067": {
      "fn": "ERC721.approve",
      "offset": [
        3621,
        3642
      ],
      "op": "EQ",
      "path": "1"
    },
    "1068": {
      "branch": 50,
      "fn": "ERC721.approve",
      "offset": [
        3621,
        3642
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1069": {
      "fn": "ERC721.approve",
      "offset": [
        3621,
        3690
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x43B"
    },
    "1072": {
      "branch": 50,
      "fn": "ERC721.approve",
      "offset": [
        3621,
        3690
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1073": {
      "op": "POP"
    },
    "1074": {
      "fn": "ERC721.approve",
      "offset": [
        3646,
        3690
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x43B"
    },
    "1077": {
      "fn": "ERC721.approve",
      "offset": [
        3670,
        3675
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1078": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1079": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4512,
        4674
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FA"
    },
    "1082": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4512,
        4674
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1083": {
      "branch": 51,
      "fn": "ERC721.approve",
      "offset": [
        3646,
        3690
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1084": {
      "fn": "ERC721.approve",
      "offset": [
        3613,
        3772
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4AD"
    },
    "1087": {
      "branch": 51,
      "fn": "ERC721.approve",
      "offset": [
        3613,
        3772
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1088": {
      "fn": "ERC721.approve",
      "offset": [
        3613,
        3772
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1090": {
      "fn": "ERC721.approve",
      "offset": [
        3613,
        3772
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1091": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1097": {
      "op": "SHL"
    },
    "1098": {
      "fn": "ERC721.approve",
      "offset": [
        3613,
        3772
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1099": {
      "fn": "ERC721.approve",
      "offset": [
        3613,
        3772
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1102": {
      "fn": "ERC721.approve",
      "offset": [
        3613,
        3772
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1104": {
      "fn": "ERC721.approve",
      "offset": [
        3613,
        3772
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1105": {
      "fn": "ERC721.approve",
      "offset": [
        3613,
        3772
      ],
      "op": "ADD",
      "path": "1"
    },
    "1106": {
      "op": "MSTORE"
    },
    "1107": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1111": {
      "op": "DUP3"
    },
    "1112": {
      "op": "ADD"
    },
    "1113": {
      "op": "MSTORE"
    },
    "1114": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "1147": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1149": {
      "op": "DUP3"
    },
    "1150": {
      "op": "ADD"
    },
    "1151": {
      "op": "MSTORE"
    },
    "1152": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "1185": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1187": {
      "op": "DUP3"
    },
    "1188": {
      "op": "ADD"
    },
    "1189": {
      "op": "MSTORE"
    },
    "1190": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1192": {
      "op": "ADD"
    },
    "1193": {
      "fn": "ERC721.approve",
      "offset": [
        3613,
        3772
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "1196": {
      "op": "JUMP"
    },
    "1197": {
      "fn": "ERC721.approve",
      "offset": [
        3613,
        3772
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1198": {
      "fn": "ERC721.approve",
      "offset": [
        3783,
        3804
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 10,
      "value": "0x4B7"
    },
    "1201": {
      "fn": "ERC721.approve",
      "offset": [
        3792,
        3794
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1202": {
      "fn": "ERC721.approve",
      "offset": [
        3796,
        3803
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1203": {
      "fn": "ERC721.approve",
      "offset": [
        3783,
        3791
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7FA"
    },
    "1206": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3783,
        3804
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1207": {
      "fn": "ERC721.approve",
      "offset": [
        3783,
        3804
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1208": {
      "fn": "ERC721.approve",
      "offset": [
        3486,
        3811
      ],
      "op": "POP",
      "path": "1"
    },
    "1209": {
      "fn": "ERC721.approve",
      "offset": [
        3416,
        3811
      ],
      "op": "POP",
      "path": "1"
    },
    "1210": {
      "fn": "ERC721.approve",
      "offset": [
        3416,
        3811
      ],
      "op": "POP",
      "path": "1"
    },
    "1211": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3416,
        3811
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1212": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4736,
        5036
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1213": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4895,
        4936
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 11,
      "value": "0x4C6"
    },
    "1216": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1217": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4928,
        4935
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1218": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4895,
        4913
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x868"
    },
    "1221": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4895,
        4936
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1222": {
      "branch": 52,
      "fn": "ERC721.transferFrom",
      "offset": [
        4895,
        4936
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1223": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4887,
        4990
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4E2"
    },
    "1226": {
      "branch": 52,
      "fn": "ERC721.transferFrom",
      "offset": [
        4887,
        4990
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1227": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4887,
        4990
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1229": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4887,
        4990
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1230": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1236": {
      "op": "SHL"
    },
    "1237": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4887,
        4990
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1238": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4887,
        4990
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1239": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4887,
        4990
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1241": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4887,
        4990
      ],
      "op": "ADD",
      "path": "1"
    },
    "1242": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4887,
        4990
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "1245": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4887,
        4990
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1246": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4887,
        4990
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1075"
    },
    "1249": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4887,
        4990
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1250": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4887,
        4990
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1251": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5001,
        5029
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 12,
      "value": "0x4B7"
    },
    "1254": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5011,
        5015
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1255": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5017,
        5019
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1256": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5021,
        5028
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1257": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5001,
        5010
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x95F"
    },
    "1260": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5001,
        5029
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1261": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5102,
        5251
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1262": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5205,
        5244
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 13,
      "value": "0x4B7"
    },
    "1265": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5222,
        5226
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1266": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5228,
        5230
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1267": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5232,
        5239
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1268": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5205,
        5244
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1270": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5205,
        5244
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1271": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5205,
        5244
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1272": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5205,
        5244
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1274": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5205,
        5244
      ],
      "op": "ADD",
      "path": "1"
    },
    "1275": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5205,
        5244
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1277": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5205,
        5244
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1278": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5205,
        5244
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1279": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5205,
        5244
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1281": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5205,
        5244
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1282": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5205,
        5244
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1283": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5205,
        5244
      ],
      "op": "POP",
      "path": "1"
    },
    "1284": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5205,
        5221
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6DA"
    },
    "1287": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5205,
        5244
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1288": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2156,
        2391
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1289": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2228,
        2235
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1291": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2263,
        2279
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1292": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2263,
        2279
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1293": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2263,
        2279
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1294": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2263,
        2270
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1296": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2263,
        2279
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1298": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2263,
        2279
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1299": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2263,
        2279
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1301": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2263,
        2279
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1302": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2263,
        2279
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1303": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2263,
        2279
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1308": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1310": {
      "op": "SHL"
    },
    "1311": {
      "op": "SUB"
    },
    "1312": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2263,
        2279
      ],
      "op": "AND",
      "path": "1"
    },
    "1313": {
      "branch": 53,
      "fn": "ERC721.ownerOf",
      "offset": [
        2297,
        2316
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 14
    },
    "1314": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2289,
        2362
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x274"
    },
    "1317": {
      "branch": 53,
      "fn": "ERC721.ownerOf",
      "offset": [
        2289,
        2362
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1318": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2289,
        2362
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1320": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2289,
        2362
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1321": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1327": {
      "op": "SHL"
    },
    "1328": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2289,
        2362
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1329": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2289,
        2362
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1330": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1332": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2289,
        2362
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1334": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2289,
        2362
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1335": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2289,
        2362
      ],
      "op": "ADD",
      "path": "1"
    },
    "1336": {
      "op": "MSTORE"
    },
    "1337": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1341": {
      "op": "DUP3"
    },
    "1342": {
      "op": "ADD"
    },
    "1343": {
      "op": "MSTORE"
    },
    "1344": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "1377": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1379": {
      "op": "DUP3"
    },
    "1380": {
      "op": "ADD"
    },
    "1381": {
      "op": "MSTORE"
    },
    "1382": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "1394": {
      "op": "SHL"
    },
    "1395": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1397": {
      "op": "DUP3"
    },
    "1398": {
      "op": "ADD"
    },
    "1399": {
      "op": "MSTORE"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1402": {
      "op": "ADD"
    },
    "1403": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2289,
        2362
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "1406": {
      "op": "JUMP"
    },
    "1407": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1894,
        2099
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1408": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1966,
        1973
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1416": {
      "op": "SHL"
    },
    "1417": {
      "op": "SUB"
    },
    "1418": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1993,
        2012
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 15
    },
    "1419": {
      "branch": 54,
      "fn": "ERC721.balanceOf",
      "offset": [
        1993,
        2012
      ],
      "op": "AND",
      "path": "1"
    },
    "1420": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1985,
        2059
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5EA"
    },
    "1423": {
      "branch": 54,
      "fn": "ERC721.balanceOf",
      "offset": [
        1985,
        2059
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1424": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1985,
        2059
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1426": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1985,
        2059
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1427": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1431": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1433": {
      "op": "SHL"
    },
    "1434": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1985,
        2059
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1435": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1985,
        2059
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1436": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1438": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1985,
        2059
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1440": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1985,
        2059
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1441": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1985,
        2059
      ],
      "op": "ADD",
      "path": "1"
    },
    "1442": {
      "op": "MSTORE"
    },
    "1443": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "1445": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1447": {
      "op": "DUP3"
    },
    "1448": {
      "op": "ADD"
    },
    "1449": {
      "op": "MSTORE"
    },
    "1450": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "1483": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1485": {
      "op": "DUP3"
    },
    "1486": {
      "op": "ADD"
    },
    "1487": {
      "op": "MSTORE"
    },
    "1488": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "1499": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "1501": {
      "op": "SHL"
    },
    "1502": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1504": {
      "op": "DUP3"
    },
    "1505": {
      "op": "ADD"
    },
    "1506": {
      "op": "MSTORE"
    },
    "1507": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1509": {
      "op": "ADD"
    },
    "1510": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1985,
        2059
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "1513": {
      "op": "JUMP"
    },
    "1514": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1985,
        2059
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1515": {
      "op": "POP"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1522": {
      "op": "SHL"
    },
    "1523": {
      "op": "SUB"
    },
    "1524": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2076,
        2092
      ],
      "op": "AND",
      "path": "1",
      "statement": 16
    },
    "1525": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2076,
        2092
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1527": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2076,
        2092
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1528": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2076,
        2092
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1529": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2076,
        2092
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1530": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2076,
        2085
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "1532": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2076,
        2092
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1534": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2076,
        2092
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1535": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2076,
        2092
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1537": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2076,
        2092
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1538": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2076,
        2092
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1539": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2076,
        2092
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1540": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2076,
        2092
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1541": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1894,
        2099
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1542": {
      "fn": "ERC721.symbol",
      "offset": [
        2615,
        2717
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1543": {
      "fn": "ERC721.symbol",
      "offset": [
        2671,
        2684
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1545": {
      "fn": "ERC721.symbol",
      "offset": [
        2703,
        2710
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 17,
      "value": "0x1"
    },
    "1547": {
      "fn": "ERC721.symbol",
      "offset": [
        2696,
        2710
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1548": {
      "fn": "ERC721.symbol",
      "offset": [
        2696,
        2710
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1549": {
      "fn": "ERC721.symbol",
      "offset": [
        2696,
        2710
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x289"
    },
    "1552": {
      "fn": "ERC721.symbol",
      "offset": [
        2696,
        2710
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1553": {
      "fn": "ERC721.symbol",
      "offset": [
        2696,
        2710
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1135"
    },
    "1556": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2696,
        2710
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1557": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4156,
        4446
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1562": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1564": {
      "op": "SHL"
    },
    "1565": {
      "op": "SUB"
    },
    "1566": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4258,
        4282
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 18
    },
    "1567": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4258,
        4282
      ],
      "op": "AND",
      "path": "1"
    },
    "1568": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1569": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4258,
        4282
      ],
      "op": "EQ",
      "path": "1"
    },
    "1570": {
      "branch": 55,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4258,
        4282
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1571": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4250,
        4312
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x66E"
    },
    "1574": {
      "branch": 55,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4250,
        4312
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1575": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4250,
        4312
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1577": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4250,
        4312
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1578": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1582": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1584": {
      "op": "SHL"
    },
    "1585": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4250,
        4312
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1586": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4250,
        4312
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1587": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1589": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4250,
        4312
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1591": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4250,
        4312
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1592": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4250,
        4312
      ],
      "op": "ADD",
      "path": "1"
    },
    "1593": {
      "op": "MSTORE"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "1596": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1598": {
      "op": "DUP3"
    },
    "1599": {
      "op": "ADD"
    },
    "1600": {
      "op": "MSTORE"
    },
    "1601": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "1634": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1636": {
      "op": "DUP3"
    },
    "1637": {
      "op": "ADD"
    },
    "1638": {
      "op": "MSTORE"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1641": {
      "op": "ADD"
    },
    "1642": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4250,
        4312
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "1645": {
      "op": "JUMP"
    },
    "1646": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4250,
        4312
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1647": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1648": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4323,
        4355
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 19,
      "value": "0x0"
    },
    "1650": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4323,
        4355
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1651": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4323,
        4355
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1652": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4323,
        4355
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1653": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4323,
        4341
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "1655": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4323,
        4355
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1657": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4323,
        4355
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1658": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4323,
        4355
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1659": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4323,
        4355
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1660": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4323,
        4355
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1662": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4323,
        4355
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1663": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4323,
        4355
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1664": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4323,
        4355
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1671": {
      "op": "SHL"
    },
    "1672": {
      "op": "SUB"
    },
    "1673": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4323,
        4365
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1674": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4323,
        4365
      ],
      "op": "AND",
      "path": "1"
    },
    "1675": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4323,
        4365
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1676": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4323,
        4365
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1677": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4323,
        4365
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1678": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4323,
        4365
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1679": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4323,
        4365
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1680": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4323,
        4365
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1681": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4323,
        4365
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1682": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4323,
        4365
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1683": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4323,
        4365
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1684": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4323,
        4365
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1685": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4323,
        4376
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1686": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4323,
        4376
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1687": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1689": {
      "op": "NOT"
    },
    "1690": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4323,
        4376
      ],
      "op": "AND",
      "path": "1"
    },
    "1691": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4323,
        4376
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1692": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4323,
        4376
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1693": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4323,
        4376
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1694": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4323,
        4376
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1695": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4323,
        4376
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1696": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4323,
        4376
      ],
      "op": "OR",
      "path": "1"
    },
    "1697": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4323,
        4376
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1698": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4323,
        4376
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1699": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4323,
        4376
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1700": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4391,
        4439
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 20
    },
    "1701": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4391,
        4439
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1702": {
      "op": "SWAP1"
    },
    "1703": {
      "op": "DUP2"
    },
    "1704": {
      "op": "MSTORE"
    },
    "1705": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4323,
        4365
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1706": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4323,
        4365
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1707": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1708": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4391,
        4439
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "1741": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4391,
        4439
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1742": {
      "op": "ADD"
    },
    "1743": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4391,
        4439
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1745": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4391,
        4439
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1746": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4391,
        4439
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1747": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4391,
        4439
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1748": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4391,
        4439
      ],
      "op": "SUB",
      "path": "1"
    },
    "1749": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4391,
        4439
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1750": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4391,
        4439
      ],
      "op": "LOG3",
      "path": "1"
    },
    "1751": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4156,
        4446
      ],
      "op": "POP",
      "path": "1"
    },
    "1752": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4156,
        4446
      ],
      "op": "POP",
      "path": "1"
    },
    "1753": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        4156,
        4446
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1754": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5317,
        5599
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1755": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5448,
        5489
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 21,
      "value": "0x6E4"
    },
    "1758": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1759": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5481,
        5488
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1760": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5448,
        5466
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x868"
    },
    "1763": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5448,
        5489
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1764": {
      "branch": 56,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5448,
        5489
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1765": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5440,
        5543
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x700"
    },
    "1768": {
      "branch": 56,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5440,
        5543
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1769": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5440,
        5543
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1771": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5440,
        5543
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1772": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1776": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1778": {
      "op": "SHL"
    },
    "1779": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5440,
        5543
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1780": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5440,
        5543
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1781": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5440,
        5543
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1783": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5440,
        5543
      ],
      "op": "ADD",
      "path": "1"
    },
    "1784": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5440,
        5543
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "1787": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5440,
        5543
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1788": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5440,
        5543
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1075"
    },
    "1791": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5440,
        5543
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1792": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5440,
        5543
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1793": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5553,
        5592
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 22,
      "value": "0x70C"
    },
    "1796": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5567,
        5571
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1797": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5573,
        5575
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1798": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5577,
        5584
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1799": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5586,
        5591
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1800": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5553,
        5566
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAFF"
    },
    "1803": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5553,
        5592
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1804": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5553,
        5592
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1805": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5317,
        5599
      ],
      "op": "POP",
      "path": "1"
    },
    "1806": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5317,
        5599
      ],
      "op": "POP",
      "path": "1"
    },
    "1807": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5317,
        5599
      ],
      "op": "POP",
      "path": "1"
    },
    "1808": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5317,
        5599
      ],
      "op": "POP",
      "path": "1"
    },
    "1809": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5317,
        5599
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1810": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2783,
        3136
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1811": {
      "fn": "ERC721._exists",
      "offset": [
        7098,
        7102
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1813": {
      "fn": "ERC721._exists",
      "offset": [
        7121,
        7137
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1814": {
      "fn": "ERC721._exists",
      "offset": [
        7121,
        7137
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1815": {
      "fn": "ERC721._exists",
      "offset": [
        7121,
        7137
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1816": {
      "fn": "ERC721._exists",
      "offset": [
        7121,
        7128
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1818": {
      "fn": "ERC721._exists",
      "offset": [
        7121,
        7137
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1820": {
      "fn": "ERC721._exists",
      "offset": [
        7121,
        7137
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1821": {
      "fn": "ERC721._exists",
      "offset": [
        7121,
        7137
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1823": {
      "fn": "ERC721._exists",
      "offset": [
        7121,
        7137
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1824": {
      "fn": "ERC721._exists",
      "offset": [
        7121,
        7137
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1825": {
      "fn": "ERC721._exists",
      "offset": [
        7121,
        7137
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1826": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2856,
        2869
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1828": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2856,
        2869
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1833": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1835": {
      "op": "SHL"
    },
    "1836": {
      "op": "SUB"
    },
    "1837": {
      "fn": "ERC721._exists",
      "offset": [
        7121,
        7137
      ],
      "op": "AND",
      "path": "1"
    },
    "1838": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2881,
        2957
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 23,
      "value": "0x791"
    },
    "1841": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2881,
        2957
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1842": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2881,
        2957
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1844": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2881,
        2957
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1845": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1849": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1851": {
      "op": "SHL"
    },
    "1852": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2881,
        2957
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1853": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2881,
        2957
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1854": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1856": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2881,
        2957
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1858": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2881,
        2957
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1859": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2881,
        2957
      ],
      "op": "ADD",
      "path": "1"
    },
    "1860": {
      "op": "MSTORE"
    },
    "1861": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "1863": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1865": {
      "op": "DUP3"
    },
    "1866": {
      "op": "ADD"
    },
    "1867": {
      "op": "MSTORE"
    },
    "1868": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "1901": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1903": {
      "op": "DUP3"
    },
    "1904": {
      "op": "ADD"
    },
    "1905": {
      "op": "MSTORE"
    },
    "1906": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "1924": {
      "op": "SHL"
    },
    "1925": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1927": {
      "op": "DUP3"
    },
    "1928": {
      "op": "ADD"
    },
    "1929": {
      "op": "MSTORE"
    },
    "1930": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1932": {
      "op": "ADD"
    },
    "1933": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2881,
        2957
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "1936": {
      "op": "JUMP"
    },
    "1937": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2881,
        2957
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1938": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2968,
        2989
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1940": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2992,
        3002
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7A8"
    },
    "1943": {
      "fn": "ERC721._baseURI",
      "offset": [
        3343,
        3352
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 24,
      "value": "0x40"
    },
    "1945": {
      "fn": "ERC721._baseURI",
      "offset": [
        3343,
        3352
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1946": {
      "fn": "ERC721._baseURI",
      "offset": [
        3343,
        3352
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1947": {
      "fn": "ERC721._baseURI",
      "offset": [
        3343,
        3352
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1949": {
      "fn": "ERC721._baseURI",
      "offset": [
        3343,
        3352
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1950": {
      "fn": "ERC721._baseURI",
      "offset": [
        3343,
        3352
      ],
      "op": "ADD",
      "path": "1"
    },
    "1951": {
      "fn": "ERC721._baseURI",
      "offset": [
        3343,
        3352
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1952": {
      "fn": "ERC721._baseURI",
      "offset": [
        3343,
        3352
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1953": {
      "fn": "ERC721._baseURI",
      "offset": [
        3343,
        3352
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1954": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1956": {
      "fn": "ERC721._baseURI",
      "offset": [
        3343,
        3352
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1957": {
      "fn": "ERC721._baseURI",
      "offset": [
        3343,
        3352
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1958": {
      "fn": "ERC721._baseURI",
      "offset": [
        3343,
        3352
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1959": {
      "fn": "ERC721._baseURI",
      "offset": [
        3267,
        3359
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1960": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2992,
        3002
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1961": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2968,
        3002
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1962": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2968,
        3002
      ],
      "op": "POP",
      "path": "1"
    },
    "1963": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3043,
        3044
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 25,
      "value": "0x0"
    },
    "1965": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3025,
        3032
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1966": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3040
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1967": {
      "branch": 57,
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3044
      ],
      "op": "GT",
      "path": "1"
    },
    "1968": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3129
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7C8"
    },
    "1971": {
      "branch": 57,
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3129
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1972": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3129
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1974": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3129
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1975": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3129
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1976": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3129
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1978": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3129
      ],
      "op": "ADD",
      "path": "1"
    },
    "1979": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3129
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1981": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3129
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1982": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3129
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1983": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3129
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1985": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3129
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1986": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3129
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1987": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3129
      ],
      "op": "POP",
      "path": "1"
    },
    "1988": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3129
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7F3"
    },
    "1991": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3129
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1992": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3129
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1993": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3083,
        3090
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1994": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3092,
        3110
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7D2"
    },
    "1997": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3092,
        3099
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1998": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3092,
        3108
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB32"
    },
    "2001": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3092,
        3110
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2002": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3092,
        3110
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2003": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3066,
        3111
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2005": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3066,
        3111
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2006": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3066,
        3111
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2008": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3066,
        3111
      ],
      "op": "ADD",
      "path": "1"
    },
    "2009": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3066,
        3111
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7E3"
    },
    "2012": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3066,
        3111
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2013": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3066,
        3111
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2014": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3066,
        3111
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2015": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3066,
        3111
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFA4"
    },
    "2018": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3066,
        3111
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2019": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3066,
        3111
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2020": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3066,
        3111
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2022": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3066,
        3111
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2023": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3066,
        3111
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2025": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3066,
        3111
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2026": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3066,
        3111
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2027": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3066,
        3111
      ],
      "op": "SUB",
      "path": "1"
    },
    "2028": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3066,
        3111
      ],
      "op": "SUB",
      "path": "1"
    },
    "2029": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3066,
        3111
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2030": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3066,
        3111
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2031": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3066,
        3111
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2032": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3066,
        3111
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2034": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3066,
        3111
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2035": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3129
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2036": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3012,
        3129
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2037": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2783,
        3136
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2038": {
      "op": "POP"
    },
    "2039": {
      "op": "POP"
    },
    "2040": {
      "op": "POP"
    },
    "2041": {
      "fn": "ERC721.tokenURI",
      "jump": "o",
      "offset": [
        2783,
        3136
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2042": {
      "fn": "ERC721._approve",
      "offset": [
        10797,
        10968
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2043": {
      "fn": "ERC721._approve",
      "offset": [
        10871,
        10895
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 26,
      "value": "0x0"
    },
    "2045": {
      "fn": "ERC721._approve",
      "offset": [
        10871,
        10895
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2046": {
      "fn": "ERC721._approve",
      "offset": [
        10871,
        10895
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2047": {
      "fn": "ERC721._approve",
      "offset": [
        10871,
        10895
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2048": {
      "fn": "ERC721._approve",
      "offset": [
        10871,
        10886
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2050": {
      "fn": "ERC721._approve",
      "offset": [
        10871,
        10895
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2052": {
      "fn": "ERC721._approve",
      "offset": [
        10871,
        10895
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2053": {
      "fn": "ERC721._approve",
      "offset": [
        10871,
        10895
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2055": {
      "fn": "ERC721._approve",
      "offset": [
        10871,
        10895
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2056": {
      "fn": "ERC721._approve",
      "offset": [
        10871,
        10895
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2057": {
      "fn": "ERC721._approve",
      "offset": [
        10871,
        10900
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2058": {
      "fn": "ERC721._approve",
      "offset": [
        10871,
        10900
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2063": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2065": {
      "op": "SHL"
    },
    "2066": {
      "op": "SUB"
    },
    "2067": {
      "op": "NOT"
    },
    "2068": {
      "fn": "ERC721._approve",
      "offset": [
        10871,
        10900
      ],
      "op": "AND",
      "path": "1"
    },
    "2069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2073": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2075": {
      "op": "SHL"
    },
    "2076": {
      "op": "SUB"
    },
    "2077": {
      "fn": "ERC721._approve",
      "offset": [
        10871,
        10900
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2078": {
      "fn": "ERC721._approve",
      "offset": [
        10871,
        10900
      ],
      "op": "AND",
      "path": "1"
    },
    "2079": {
      "fn": "ERC721._approve",
      "offset": [
        10871,
        10900
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2080": {
      "fn": "ERC721._approve",
      "offset": [
        10871,
        10900
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2081": {
      "fn": "ERC721._approve",
      "offset": [
        10871,
        10900
      ],
      "op": "OR",
      "path": "1"
    },
    "2082": {
      "fn": "ERC721._approve",
      "offset": [
        10871,
        10900
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2083": {
      "fn": "ERC721._approve",
      "offset": [
        10871,
        10900
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2084": {
      "fn": "ERC721._approve",
      "offset": [
        10871,
        10900
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2085": {
      "fn": "ERC721._approve",
      "offset": [
        10871,
        10895
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2086": {
      "fn": "ERC721._approve",
      "offset": [
        10871,
        10895
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2087": {
      "fn": "ERC721._approve",
      "offset": [
        10924,
        10947
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 27,
      "value": "0x82F"
    },
    "2090": {
      "fn": "ERC721._approve",
      "offset": [
        10871,
        10895
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2091": {
      "fn": "ERC721._approve",
      "offset": [
        10924,
        10938
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x508"
    },
    "2094": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        10924,
        10947
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2095": {
      "fn": "ERC721._approve",
      "offset": [
        10924,
        10947
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2100": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2102": {
      "op": "SHL"
    },
    "2103": {
      "op": "SUB"
    },
    "2104": {
      "fn": "ERC721._approve",
      "offset": [
        10915,
        10961
      ],
      "op": "AND",
      "path": "1"
    },
    "2105": {
      "fn": "ERC721._approve",
      "offset": [
        10915,
        10961
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "2138": {
      "fn": "ERC721._approve",
      "offset": [
        10915,
        10961
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2140": {
      "fn": "ERC721._approve",
      "offset": [
        10915,
        10961
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2141": {
      "fn": "ERC721._approve",
      "offset": [
        10915,
        10961
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2143": {
      "fn": "ERC721._approve",
      "offset": [
        10915,
        10961
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2144": {
      "fn": "ERC721._approve",
      "offset": [
        10915,
        10961
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2145": {
      "fn": "ERC721._approve",
      "offset": [
        10915,
        10961
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2146": {
      "fn": "ERC721._approve",
      "offset": [
        10915,
        10961
      ],
      "op": "SUB",
      "path": "1"
    },
    "2147": {
      "fn": "ERC721._approve",
      "offset": [
        10915,
        10961
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2148": {
      "fn": "ERC721._approve",
      "offset": [
        10915,
        10961
      ],
      "op": "LOG4",
      "path": "1"
    },
    "2149": {
      "fn": "ERC721._approve",
      "offset": [
        10797,
        10968
      ],
      "op": "POP",
      "path": "1"
    },
    "2150": {
      "fn": "ERC721._approve",
      "offset": [
        10797,
        10968
      ],
      "op": "POP",
      "path": "1"
    },
    "2151": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        10797,
        10968
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2152": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7316,
        7667
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2153": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7409,
        7413
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2155": {
      "fn": "ERC721._exists",
      "offset": [
        7121,
        7137
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2156": {
      "fn": "ERC721._exists",
      "offset": [
        7121,
        7137
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2157": {
      "fn": "ERC721._exists",
      "offset": [
        7121,
        7137
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2158": {
      "fn": "ERC721._exists",
      "offset": [
        7121,
        7128
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "2160": {
      "fn": "ERC721._exists",
      "offset": [
        7121,
        7137
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2162": {
      "fn": "ERC721._exists",
      "offset": [
        7121,
        7137
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2163": {
      "fn": "ERC721._exists",
      "offset": [
        7121,
        7137
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2165": {
      "fn": "ERC721._exists",
      "offset": [
        7121,
        7137
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2166": {
      "fn": "ERC721._exists",
      "offset": [
        7121,
        7137
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2167": {
      "fn": "ERC721._exists",
      "offset": [
        7121,
        7137
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2172": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2174": {
      "op": "SHL"
    },
    "2175": {
      "op": "SUB"
    },
    "2176": {
      "fn": "ERC721._exists",
      "offset": [
        7121,
        7137
      ],
      "op": "AND",
      "path": "1"
    },
    "2177": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7425,
        7498
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 28,
      "value": "0x8E1"
    },
    "2180": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7425,
        7498
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2181": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7425,
        7498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2183": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7425,
        7498
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2184": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2188": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2190": {
      "op": "SHL"
    },
    "2191": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7425,
        7498
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2192": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7425,
        7498
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2193": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2195": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7425,
        7498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2197": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7425,
        7498
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2198": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7425,
        7498
      ],
      "op": "ADD",
      "path": "1"
    },
    "2199": {
      "op": "MSTORE"
    },
    "2200": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2202": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2204": {
      "op": "DUP3"
    },
    "2205": {
      "op": "ADD"
    },
    "2206": {
      "op": "MSTORE"
    },
    "2207": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "2240": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2242": {
      "op": "DUP3"
    },
    "2243": {
      "op": "ADD"
    },
    "2244": {
      "op": "MSTORE"
    },
    "2245": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "2258": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2260": {
      "op": "SHL"
    },
    "2261": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2263": {
      "op": "DUP3"
    },
    "2264": {
      "op": "ADD"
    },
    "2265": {
      "op": "MSTORE"
    },
    "2266": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2268": {
      "op": "ADD"
    },
    "2269": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7425,
        7498
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "2272": {
      "op": "JUMP"
    },
    "2273": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7425,
        7498
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2274": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7508,
        7521
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2276": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7524,
        7547
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8EC"
    },
    "2279": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7539,
        7546
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2280": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7524,
        7538
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x508"
    },
    "2283": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7524,
        7547
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2284": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7524,
        7547
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2285": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7508,
        7547
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2286": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7508,
        7547
      ],
      "op": "POP",
      "path": "1"
    },
    "2287": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7576,
        7581
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 29
    },
    "2288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2292": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2294": {
      "op": "SHL"
    },
    "2295": {
      "op": "SUB"
    },
    "2296": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7565,
        7581
      ],
      "op": "AND",
      "path": "1"
    },
    "2297": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7565,
        7572
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2302": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2304": {
      "op": "SHL"
    },
    "2305": {
      "op": "SUB"
    },
    "2306": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7565,
        7581
      ],
      "op": "AND",
      "path": "1"
    },
    "2307": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7565,
        7581
      ],
      "op": "EQ",
      "path": "1"
    },
    "2308": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7565,
        7616
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2309": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7565,
        7616
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x927"
    },
    "2312": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7565,
        7616
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2313": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7565,
        7616
      ],
      "op": "POP",
      "path": "1"
    },
    "2314": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7609,
        7616
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2319": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2321": {
      "op": "SHL"
    },
    "2322": {
      "op": "SUB"
    },
    "2323": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7585,
        7616
      ],
      "op": "AND",
      "path": "1"
    },
    "2324": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7585,
        7605
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x91C"
    },
    "2327": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7597,
        7604
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2328": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7585,
        7596
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30C"
    },
    "2331": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7585,
        7605
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2332": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7585,
        7605
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2337": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2339": {
      "op": "SHL"
    },
    "2340": {
      "op": "SUB"
    },
    "2341": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7585,
        7616
      ],
      "op": "AND",
      "path": "1"
    },
    "2342": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7585,
        7616
      ],
      "op": "EQ",
      "path": "1"
    },
    "2343": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7565,
        7616
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2344": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7565,
        7659
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2345": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7565,
        7659
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x957"
    },
    "2348": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7565,
        7659
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2349": {
      "op": "POP"
    },
    "2350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2354": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2356": {
      "op": "SHL"
    },
    "2357": {
      "op": "SUB"
    },
    "2358": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4657
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2359": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4657
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2360": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4657
      ],
      "op": "AND",
      "path": "1"
    },
    "2361": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4609,
        4613
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2363": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4657
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2364": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4657
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2365": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4657
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2366": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4650
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "2368": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4657
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2370": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4657
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2371": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4657
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2372": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4657
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2373": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4657
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2375": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4657
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2376": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4657
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2377": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4657
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2378": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4667
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2379": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4667
      ],
      "op": "DUP9",
      "path": "1"
    },
    "2380": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4667
      ],
      "op": "AND",
      "path": "1"
    },
    "2381": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4667
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2382": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4667
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2383": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4667
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2384": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4667
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2385": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4667
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2386": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4667
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2387": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4667
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2388": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4667
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "2390": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4632,
        4667
      ],
      "op": "AND",
      "path": "1"
    },
    "2391": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7620,
        7659
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2392": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7557,
        7660
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "2393": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7316,
        7667
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2394": {
      "op": "POP"
    },
    "2395": {
      "op": "POP"
    },
    "2396": {
      "op": "POP"
    },
    "2397": {
      "op": "POP"
    },
    "2398": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        7316,
        7667
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2399": {
      "fn": "ERC721._transfer",
      "offset": [
        10156,
        10686
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2400": {
      "fn": "ERC721._transfer",
      "offset": [
        10280,
        10284
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 30
    },
    "2401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2405": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2407": {
      "op": "SHL"
    },
    "2408": {
      "op": "SUB"
    },
    "2409": {
      "fn": "ERC721._transfer",
      "offset": [
        10253,
        10284
      ],
      "op": "AND",
      "path": "1"
    },
    "2410": {
      "fn": "ERC721._transfer",
      "offset": [
        10253,
        10276
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x972"
    },
    "2413": {
      "fn": "ERC721._transfer",
      "offset": [
        10268,
        10275
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2414": {
      "fn": "ERC721._transfer",
      "offset": [
        10253,
        10267
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x508"
    },
    "2417": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10253,
        10276
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2418": {
      "fn": "ERC721._transfer",
      "offset": [
        10253,
        10276
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2423": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2425": {
      "op": "SHL"
    },
    "2426": {
      "op": "SUB"
    },
    "2427": {
      "fn": "ERC721._transfer",
      "offset": [
        10253,
        10284
      ],
      "op": "AND",
      "path": "1"
    },
    "2428": {
      "branch": 58,
      "fn": "ERC721._transfer",
      "offset": [
        10253,
        10284
      ],
      "op": "EQ",
      "path": "1"
    },
    "2429": {
      "fn": "ERC721._transfer",
      "offset": [
        10245,
        10330
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9DA"
    },
    "2432": {
      "branch": 58,
      "fn": "ERC721._transfer",
      "offset": [
        10245,
        10330
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2433": {
      "fn": "ERC721._transfer",
      "offset": [
        10245,
        10330
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2435": {
      "fn": "ERC721._transfer",
      "offset": [
        10245,
        10330
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2436": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2440": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2442": {
      "op": "SHL"
    },
    "2443": {
      "fn": "ERC721._transfer",
      "offset": [
        10245,
        10330
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2444": {
      "fn": "ERC721._transfer",
      "offset": [
        10245,
        10330
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2445": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2447": {
      "fn": "ERC721._transfer",
      "offset": [
        10245,
        10330
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2449": {
      "fn": "ERC721._transfer",
      "offset": [
        10245,
        10330
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2450": {
      "fn": "ERC721._transfer",
      "offset": [
        10245,
        10330
      ],
      "op": "ADD",
      "path": "1"
    },
    "2451": {
      "op": "MSTORE"
    },
    "2452": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "2454": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2456": {
      "op": "DUP3"
    },
    "2457": {
      "op": "ADD"
    },
    "2458": {
      "op": "MSTORE"
    },
    "2459": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
    },
    "2492": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2494": {
      "op": "DUP3"
    },
    "2495": {
      "op": "ADD"
    },
    "2496": {
      "op": "MSTORE"
    },
    "2497": {
      "op": "PUSH9",
      "value": "0x39903737BA1037BBB7"
    },
    "2507": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "2509": {
      "op": "SHL"
    },
    "2510": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2512": {
      "op": "DUP3"
    },
    "2513": {
      "op": "ADD"
    },
    "2514": {
      "op": "MSTORE"
    },
    "2515": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2517": {
      "op": "ADD"
    },
    "2518": {
      "fn": "ERC721._transfer",
      "offset": [
        10245,
        10330
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "2521": {
      "op": "JUMP"
    },
    "2522": {
      "fn": "ERC721._transfer",
      "offset": [
        10245,
        10330
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2527": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2529": {
      "op": "SHL"
    },
    "2530": {
      "op": "SUB"
    },
    "2531": {
      "fn": "ERC721._transfer",
      "offset": [
        10348,
        10364
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 31
    },
    "2532": {
      "branch": 59,
      "fn": "ERC721._transfer",
      "offset": [
        10348,
        10364
      ],
      "op": "AND",
      "path": "1"
    },
    "2533": {
      "fn": "ERC721._transfer",
      "offset": [
        10340,
        10405
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA3C"
    },
    "2536": {
      "branch": 59,
      "fn": "ERC721._transfer",
      "offset": [
        10340,
        10405
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2537": {
      "fn": "ERC721._transfer",
      "offset": [
        10340,
        10405
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2539": {
      "fn": "ERC721._transfer",
      "offset": [
        10340,
        10405
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2540": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2544": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2546": {
      "op": "SHL"
    },
    "2547": {
      "fn": "ERC721._transfer",
      "offset": [
        10340,
        10405
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2548": {
      "fn": "ERC721._transfer",
      "offset": [
        10340,
        10405
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2549": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2551": {
      "fn": "ERC721._transfer",
      "offset": [
        10340,
        10405
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2553": {
      "fn": "ERC721._transfer",
      "offset": [
        10340,
        10405
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2554": {
      "fn": "ERC721._transfer",
      "offset": [
        10340,
        10405
      ],
      "op": "ADD",
      "path": "1"
    },
    "2555": {
      "op": "MSTORE"
    },
    "2556": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2558": {
      "op": "DUP1"
    },
    "2559": {
      "op": "DUP3"
    },
    "2560": {
      "op": "ADD"
    },
    "2561": {
      "op": "MSTORE"
    },
    "2562": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "2595": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2597": {
      "op": "DUP3"
    },
    "2598": {
      "op": "ADD"
    },
    "2599": {
      "op": "MSTORE"
    },
    "2600": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "2605": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2607": {
      "op": "SHL"
    },
    "2608": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2610": {
      "op": "DUP3"
    },
    "2611": {
      "op": "ADD"
    },
    "2612": {
      "op": "MSTORE"
    },
    "2613": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2615": {
      "op": "ADD"
    },
    "2616": {
      "fn": "ERC721._transfer",
      "offset": [
        10340,
        10405
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "2619": {
      "op": "JUMP"
    },
    "2620": {
      "fn": "ERC721._transfer",
      "offset": [
        10340,
        10405
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2621": {
      "fn": "ERC721._transfer",
      "offset": [
        10517,
        10546
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 32,
      "value": "0xA47"
    },
    "2624": {
      "fn": "ERC721._transfer",
      "offset": [
        10534,
        10535
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2626": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10545
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2627": {
      "fn": "ERC721._transfer",
      "offset": [
        10517,
        10525
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7FA"
    },
    "2630": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10517,
        10546
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2631": {
      "fn": "ERC721._transfer",
      "offset": [
        10517,
        10546
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2636": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2638": {
      "op": "SHL"
    },
    "2639": {
      "op": "SUB"
    },
    "2640": {
      "fn": "ERC721._transfer",
      "offset": [
        10557,
        10572
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 33
    },
    "2641": {
      "fn": "ERC721._transfer",
      "offset": [
        10557,
        10572
      ],
      "op": "AND",
      "path": "1"
    },
    "2642": {
      "fn": "ERC721._transfer",
      "offset": [
        10557,
        10572
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2644": {
      "fn": "ERC721._transfer",
      "offset": [
        10557,
        10572
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2645": {
      "fn": "ERC721._transfer",
      "offset": [
        10557,
        10572
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2646": {
      "fn": "ERC721._transfer",
      "offset": [
        10557,
        10572
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2647": {
      "fn": "ERC721._transfer",
      "offset": [
        10557,
        10566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "2649": {
      "fn": "ERC721._transfer",
      "offset": [
        10557,
        10572
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2651": {
      "fn": "ERC721._transfer",
      "offset": [
        10557,
        10572
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2652": {
      "fn": "ERC721._transfer",
      "offset": [
        10557,
        10572
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2654": {
      "fn": "ERC721._transfer",
      "offset": [
        10557,
        10572
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2655": {
      "fn": "ERC721._transfer",
      "offset": [
        10557,
        10572
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2656": {
      "fn": "ERC721._transfer",
      "offset": [
        10557,
        10577
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2657": {
      "fn": "ERC721._transfer",
      "offset": [
        10557,
        10577
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2658": {
      "fn": "ERC721._transfer",
      "offset": [
        10576,
        10577
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2660": {
      "fn": "ERC721._transfer",
      "offset": [
        10576,
        10577
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2661": {
      "fn": "ERC721._transfer",
      "offset": [
        10557,
        10572
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2662": {
      "fn": "ERC721._transfer",
      "offset": [
        10557,
        10577
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA70"
    },
    "2665": {
      "fn": "ERC721._transfer",
      "offset": [
        10557,
        10577
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2666": {
      "fn": "ERC721._transfer",
      "offset": [
        10576,
        10577
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2667": {
      "fn": "ERC721._transfer",
      "offset": [
        10576,
        10577
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2668": {
      "fn": "ERC721._transfer",
      "offset": [
        10557,
        10577
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10F2"
    },
    "2671": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10557,
        10577
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2672": {
      "fn": "ERC721._transfer",
      "offset": [
        10557,
        10577
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2673": {
      "fn": "ERC721._transfer",
      "offset": [
        10557,
        10577
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2674": {
      "fn": "ERC721._transfer",
      "offset": [
        10557,
        10577
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2675": {
      "fn": "ERC721._transfer",
      "offset": [
        10557,
        10577
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2676": {
      "op": "POP"
    },
    "2677": {
      "op": "POP"
    },
    "2678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2682": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2684": {
      "op": "SHL"
    },
    "2685": {
      "op": "SUB"
    },
    "2686": {
      "fn": "ERC721._transfer",
      "offset": [
        10587,
        10600
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 34
    },
    "2687": {
      "fn": "ERC721._transfer",
      "offset": [
        10587,
        10600
      ],
      "op": "AND",
      "path": "1"
    },
    "2688": {
      "fn": "ERC721._transfer",
      "offset": [
        10587,
        10600
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2690": {
      "fn": "ERC721._transfer",
      "offset": [
        10587,
        10600
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2691": {
      "fn": "ERC721._transfer",
      "offset": [
        10587,
        10600
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2692": {
      "fn": "ERC721._transfer",
      "offset": [
        10587,
        10600
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2693": {
      "fn": "ERC721._transfer",
      "offset": [
        10587,
        10596
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "2695": {
      "fn": "ERC721._transfer",
      "offset": [
        10587,
        10600
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2697": {
      "fn": "ERC721._transfer",
      "offset": [
        10587,
        10600
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2698": {
      "fn": "ERC721._transfer",
      "offset": [
        10587,
        10600
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2700": {
      "fn": "ERC721._transfer",
      "offset": [
        10587,
        10600
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2701": {
      "fn": "ERC721._transfer",
      "offset": [
        10587,
        10600
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2702": {
      "fn": "ERC721._transfer",
      "offset": [
        10587,
        10605
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2703": {
      "fn": "ERC721._transfer",
      "offset": [
        10587,
        10605
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2704": {
      "fn": "ERC721._transfer",
      "offset": [
        10604,
        10605
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2706": {
      "fn": "ERC721._transfer",
      "offset": [
        10604,
        10605
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2707": {
      "fn": "ERC721._transfer",
      "offset": [
        10587,
        10600
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2708": {
      "fn": "ERC721._transfer",
      "offset": [
        10587,
        10605
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA9E"
    },
    "2711": {
      "fn": "ERC721._transfer",
      "offset": [
        10587,
        10605
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2712": {
      "fn": "ERC721._transfer",
      "offset": [
        10604,
        10605
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2713": {
      "fn": "ERC721._transfer",
      "offset": [
        10604,
        10605
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2714": {
      "fn": "ERC721._transfer",
      "offset": [
        10587,
        10605
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10C6"
    },
    "2717": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10587,
        10605
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2718": {
      "fn": "ERC721._transfer",
      "offset": [
        10587,
        10605
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2719": {
      "fn": "ERC721._transfer",
      "offset": [
        10587,
        10605
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2720": {
      "fn": "ERC721._transfer",
      "offset": [
        10587,
        10605
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2721": {
      "fn": "ERC721._transfer",
      "offset": [
        10587,
        10605
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2722": {
      "op": "POP"
    },
    "2723": {
      "op": "POP"
    },
    "2724": {
      "fn": "ERC721._transfer",
      "offset": [
        10615,
        10631
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 35,
      "value": "0x0"
    },
    "2726": {
      "fn": "ERC721._transfer",
      "offset": [
        10615,
        10631
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2727": {
      "fn": "ERC721._transfer",
      "offset": [
        10615,
        10631
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2728": {
      "fn": "ERC721._transfer",
      "offset": [
        10615,
        10631
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2729": {
      "fn": "ERC721._transfer",
      "offset": [
        10615,
        10622
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "2731": {
      "fn": "ERC721._transfer",
      "offset": [
        10615,
        10631
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2733": {
      "fn": "ERC721._transfer",
      "offset": [
        10615,
        10631
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2734": {
      "fn": "ERC721._transfer",
      "offset": [
        10615,
        10631
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2736": {
      "fn": "ERC721._transfer",
      "offset": [
        10615,
        10631
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2737": {
      "fn": "ERC721._transfer",
      "offset": [
        10615,
        10631
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2738": {
      "fn": "ERC721._transfer",
      "offset": [
        10615,
        10631
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2739": {
      "fn": "ERC721._transfer",
      "offset": [
        10615,
        10636
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2740": {
      "fn": "ERC721._transfer",
      "offset": [
        10615,
        10636
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2745": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2747": {
      "op": "SHL"
    },
    "2748": {
      "op": "SUB"
    },
    "2749": {
      "op": "NOT"
    },
    "2750": {
      "fn": "ERC721._transfer",
      "offset": [
        10615,
        10636
      ],
      "op": "AND",
      "path": "1"
    },
    "2751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2755": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2757": {
      "op": "SHL"
    },
    "2758": {
      "op": "SUB"
    },
    "2759": {
      "fn": "ERC721._transfer",
      "offset": [
        10615,
        10636
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2760": {
      "fn": "ERC721._transfer",
      "offset": [
        10615,
        10636
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2761": {
      "fn": "ERC721._transfer",
      "offset": [
        10615,
        10636
      ],
      "op": "AND",
      "path": "1"
    },
    "2762": {
      "fn": "ERC721._transfer",
      "offset": [
        10615,
        10636
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2763": {
      "fn": "ERC721._transfer",
      "offset": [
        10615,
        10636
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2764": {
      "fn": "ERC721._transfer",
      "offset": [
        10615,
        10636
      ],
      "op": "OR",
      "path": "1"
    },
    "2765": {
      "fn": "ERC721._transfer",
      "offset": [
        10615,
        10636
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2766": {
      "fn": "ERC721._transfer",
      "offset": [
        10615,
        10636
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2767": {
      "fn": "ERC721._transfer",
      "offset": [
        10615,
        10636
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2768": {
      "fn": "ERC721._transfer",
      "offset": [
        10652,
        10679
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 36
    },
    "2769": {
      "fn": "ERC721._transfer",
      "offset": [
        10652,
        10679
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2770": {
      "fn": "ERC721._transfer",
      "offset": [
        10615,
        10631
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2771": {
      "fn": "ERC721._transfer",
      "offset": [
        10615,
        10631
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2772": {
      "fn": "ERC721._transfer",
      "offset": [
        10652,
        10679
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2773": {
      "fn": "ERC721._transfer",
      "offset": [
        10652,
        10679
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2774": {
      "fn": "ERC721._transfer",
      "offset": [
        10652,
        10679
      ],
      "op": "AND",
      "path": "1"
    },
    "2775": {
      "fn": "ERC721._transfer",
      "offset": [
        10652,
        10679
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2776": {
      "fn": "ERC721._transfer",
      "offset": [
        10652,
        10679
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2809": {
      "fn": "ERC721._transfer",
      "offset": [
        10652,
        10679
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2810": {
      "fn": "ERC721._transfer",
      "offset": [
        10652,
        10679
      ],
      "op": "LOG4",
      "path": "1"
    },
    "2811": {
      "fn": "ERC721._transfer",
      "offset": [
        10156,
        10686
      ],
      "op": "POP",
      "path": "1"
    },
    "2812": {
      "fn": "ERC721._transfer",
      "offset": [
        10156,
        10686
      ],
      "op": "POP",
      "path": "1"
    },
    "2813": {
      "fn": "ERC721._transfer",
      "offset": [
        10156,
        10686
      ],
      "op": "POP",
      "path": "1"
    },
    "2814": {
      "fn": "ERC721._transfer",
      "jump": "o",
      "offset": [
        10156,
        10686
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2815": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6461,
        6730
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2816": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6574,
        6602
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 37,
      "value": "0xB0A"
    },
    "2819": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6584,
        6588
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2820": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6590,
        6592
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2821": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6594,
        6601
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2822": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6574,
        6583
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x95F"
    },
    "2825": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6574,
        6602
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2826": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6574,
        6602
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2827": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6620,
        6668
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 38,
      "value": "0xB16"
    },
    "2830": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6643,
        6647
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2831": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6649,
        6651
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2832": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6653,
        6660
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2833": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6662,
        6667
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2834": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6620,
        6642
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC30"
    },
    "2837": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6620,
        6668
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2838": {
      "branch": 60,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6620,
        6668
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2839": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6612,
        6723
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x70C"
    },
    "2842": {
      "branch": 60,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6612,
        6723
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2843": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6612,
        6723
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2845": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6612,
        6723
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2846": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2850": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2852": {
      "op": "SHL"
    },
    "2853": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6612,
        6723
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2854": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6612,
        6723
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2855": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6612,
        6723
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2857": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6612,
        6723
      ],
      "op": "ADD",
      "path": "1"
    },
    "2858": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6612,
        6723
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "2861": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6612,
        6723
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2862": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6612,
        6723
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1023"
    },
    "2865": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6612,
        6723
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2866": {
      "fn": "Strings.toString",
      "offset": [
        271,
        974
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2867": {
      "fn": "Strings.toString",
      "offset": [
        327,
        340
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x60"
    },
    "2869": {
      "branch": 61,
      "fn": "Strings.toString",
      "offset": [
        544,
        554
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2870": {
      "fn": "Strings.toString",
      "offset": [
        540,
        591
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB56"
    },
    "2873": {
      "branch": 61,
      "fn": "Strings.toString",
      "offset": [
        540,
        591
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2874": {
      "op": "POP"
    },
    "2875": {
      "op": "POP"
    },
    "2876": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 39,
      "value": "0x40"
    },
    "2878": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2879": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2880": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2881": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2882": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "ADD",
      "path": "9"
    },
    "2883": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2884": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2885": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2886": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2888": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2889": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2890": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "2892": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "2894": {
      "op": "SHL"
    },
    "2895": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2897": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2898": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "ADD",
      "path": "9"
    },
    "2899": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2900": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2901": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        271,
        974
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2902": {
      "fn": "Strings.toString",
      "offset": [
        540,
        591
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2903": {
      "fn": "Strings.toString",
      "offset": [
        615,
        620
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2904": {
      "fn": "Strings.toString",
      "offset": [
        600,
        612
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2906": {
      "fn": "Strings.toString",
      "offset": [
        654,
        729
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2907": {
      "fn": "Strings.toString",
      "offset": [
        661,
        670
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2908": {
      "fn": "Strings.toString",
      "offset": [
        661,
        670
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2909": {
      "fn": "Strings.toString",
      "offset": [
        654,
        729
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB80"
    },
    "2912": {
      "fn": "Strings.toString",
      "offset": [
        654,
        729
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2913": {
      "fn": "Strings.toString",
      "offset": [
        686,
        694
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 40
    },
    "2914": {
      "fn": "Strings.toString",
      "offset": [
        686,
        694
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB6A"
    },
    "2917": {
      "fn": "Strings.toString",
      "offset": [
        686,
        694
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2918": {
      "fn": "Strings.toString",
      "offset": [
        686,
        694
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1170"
    },
    "2921": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        686,
        694
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2922": {
      "fn": "Strings.toString",
      "offset": [
        686,
        694
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2923": {
      "fn": "Strings.toString",
      "offset": [
        686,
        694
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2924": {
      "op": "POP"
    },
    "2925": {
      "fn": "Strings.toString",
      "offset": [
        708,
        718
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 41,
      "value": "0xB79"
    },
    "2928": {
      "fn": "Strings.toString",
      "offset": [
        708,
        718
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2929": {
      "op": "POP"
    },
    "2930": {
      "fn": "Strings.toString",
      "offset": [
        716,
        718
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA"
    },
    "2932": {
      "fn": "Strings.toString",
      "offset": [
        708,
        718
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2933": {
      "fn": "Strings.toString",
      "offset": [
        708,
        718
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x10DE"
    },
    "2936": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        708,
        718
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2937": {
      "fn": "Strings.toString",
      "offset": [
        708,
        718
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2938": {
      "fn": "Strings.toString",
      "offset": [
        708,
        718
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2939": {
      "fn": "Strings.toString",
      "offset": [
        708,
        718
      ],
      "op": "POP",
      "path": "9"
    },
    "2940": {
      "fn": "Strings.toString",
      "offset": [
        654,
        729
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB5A"
    },
    "2943": {
      "fn": "Strings.toString",
      "offset": [
        654,
        729
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2944": {
      "fn": "Strings.toString",
      "offset": [
        654,
        729
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2945": {
      "fn": "Strings.toString",
      "offset": [
        738,
        757
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2947": {
      "fn": "Strings.toString",
      "offset": [
        770,
        776
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2948": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH8",
      "path": "9",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2957": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2958": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "GT",
      "path": "9"
    },
    "2959": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2960": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB9B"
    },
    "2963": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2964": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB9B"
    },
    "2967": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x11E1"
    },
    "2970": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        760,
        777
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2971": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2972": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2974": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2975": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2976": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2977": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2978": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2979": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2980": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "2982": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "ADD",
      "path": "9"
    },
    "2983": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "2985": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "NOT",
      "path": "9"
    },
    "2986": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "AND",
      "path": "9"
    },
    "2987": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2989": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "ADD",
      "path": "9"
    },
    "2990": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2991": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "ADD",
      "path": "9"
    },
    "2992": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2994": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2995": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2996": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2997": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xBC5"
    },
    "3000": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3001": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3003": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3004": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "ADD",
      "path": "9"
    },
    "3005": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3006": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3007": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "3008": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3009": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "CALLDATACOPY",
      "path": "9"
    },
    "3010": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "ADD",
      "path": "9"
    },
    "3011": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3012": {
      "op": "POP"
    },
    "3013": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3014": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "POP",
      "path": "9"
    },
    "3015": {
      "fn": "Strings.toString",
      "offset": [
        738,
        777
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3016": {
      "fn": "Strings.toString",
      "offset": [
        738,
        777
      ],
      "op": "POP",
      "path": "9"
    },
    "3017": {
      "fn": "Strings.toString",
      "offset": [
        787,
        937
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3018": {
      "fn": "Strings.toString",
      "offset": [
        794,
        804
      ],
      "op": "DUP5",
      "path": "9"
    },
    "3019": {
      "fn": "Strings.toString",
      "offset": [
        794,
        804
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3020": {
      "fn": "Strings.toString",
      "offset": [
        787,
        937
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x957"
    },
    "3023": {
      "fn": "Strings.toString",
      "offset": [
        787,
        937
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3024": {
      "fn": "Strings.toString",
      "offset": [
        820,
        831
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 42,
      "value": "0xBDA"
    },
    "3027": {
      "fn": "Strings.toString",
      "offset": [
        830,
        831
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "3029": {
      "fn": "Strings.toString",
      "offset": [
        820,
        831
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3030": {
      "fn": "Strings.toString",
      "offset": [
        820,
        831
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x10F2"
    },
    "3033": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        820,
        831
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3034": {
      "fn": "Strings.toString",
      "offset": [
        820,
        831
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3035": {
      "fn": "Strings.toString",
      "offset": [
        820,
        831
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3036": {
      "op": "POP"
    },
    "3037": {
      "fn": "Strings.toString",
      "offset": [
        888,
        898
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 43,
      "value": "0xBE7"
    },
    "3040": {
      "fn": "Strings.toString",
      "offset": [
        896,
        898
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA"
    },
    "3042": {
      "fn": "Strings.toString",
      "offset": [
        888,
        893
      ],
      "op": "DUP7",
      "path": "9"
    },
    "3043": {
      "fn": "Strings.toString",
      "offset": [
        888,
        898
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x118B"
    },
    "3046": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        888,
        898
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3047": {
      "fn": "Strings.toString",
      "offset": [
        888,
        898
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3048": {
      "fn": "Strings.toString",
      "offset": [
        875,
        899
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xBF2"
    },
    "3051": {
      "fn": "Strings.toString",
      "offset": [
        875,
        899
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3052": {
      "fn": "Strings.toString",
      "offset": [
        875,
        877
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x30"
    },
    "3054": {
      "fn": "Strings.toString",
      "offset": [
        875,
        899
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x10C6"
    },
    "3057": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        875,
        899
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3058": {
      "fn": "Strings.toString",
      "offset": [
        875,
        899
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3059": {
      "fn": "Strings.toString",
      "offset": [
        862,
        901
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xF8"
    },
    "3061": {
      "fn": "Strings.toString",
      "offset": [
        862,
        901
      ],
      "op": "SHL",
      "path": "9"
    },
    "3062": {
      "fn": "Strings.toString",
      "offset": [
        845,
        851
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3063": {
      "fn": "Strings.toString",
      "offset": [
        852,
        858
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3064": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3065": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3066": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3067": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "LT",
      "path": "9"
    },
    "3068": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC07"
    },
    "3071": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3072": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC07"
    },
    "3075": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x11CB"
    },
    "3078": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        845,
        859
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3079": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3080": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3082": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "ADD",
      "path": "9"
    },
    "3083": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "ADD",
      "path": "9"
    },
    "3084": {
      "fn": "Strings.toString",
      "offset": [
        845,
        901
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3089": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3091": {
      "op": "SHL"
    },
    "3092": {
      "op": "SUB"
    },
    "3093": {
      "fn": "Strings.toString",
      "offset": [
        845,
        901
      ],
      "op": "NOT",
      "path": "9"
    },
    "3094": {
      "fn": "Strings.toString",
      "offset": [
        845,
        901
      ],
      "op": "AND",
      "path": "9"
    },
    "3095": {
      "fn": "Strings.toString",
      "offset": [
        845,
        901
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3096": {
      "fn": "Strings.toString",
      "offset": [
        845,
        901
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3097": {
      "fn": "Strings.toString",
      "offset": [
        845,
        901
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3099": {
      "fn": "Strings.toString",
      "offset": [
        845,
        901
      ],
      "op": "BYTE",
      "path": "9"
    },
    "3100": {
      "fn": "Strings.toString",
      "offset": [
        845,
        901
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3101": {
      "fn": "Strings.toString",
      "offset": [
        845,
        901
      ],
      "op": "MSTORE8",
      "path": "9"
    },
    "3102": {
      "op": "POP"
    },
    "3103": {
      "fn": "Strings.toString",
      "offset": [
        915,
        926
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 44,
      "value": "0xC29"
    },
    "3106": {
      "fn": "Strings.toString",
      "offset": [
        924,
        926
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA"
    },
    "3108": {
      "fn": "Strings.toString",
      "offset": [
        915,
        926
      ],
      "op": "DUP7",
      "path": "9"
    },
    "3109": {
      "fn": "Strings.toString",
      "offset": [
        915,
        926
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x10DE"
    },
    "3112": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        915,
        926
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3113": {
      "fn": "Strings.toString",
      "offset": [
        915,
        926
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3114": {
      "fn": "Strings.toString",
      "offset": [
        915,
        926
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "3115": {
      "fn": "Strings.toString",
      "offset": [
        915,
        926
      ],
      "op": "POP",
      "path": "9"
    },
    "3116": {
      "fn": "Strings.toString",
      "offset": [
        787,
        937
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xBC9"
    },
    "3119": {
      "fn": "Strings.toString",
      "offset": [
        787,
        937
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3120": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11521,
        12345
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3121": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3127": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3129": {
      "op": "SHL"
    },
    "3130": {
      "op": "SUB"
    },
    "3131": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11665,
        11678
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3132": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11665,
        11678
      ],
      "op": "AND",
      "path": "1"
    },
    "3133": {
      "fn": "Address.isContract",
      "offset": [
        1078,
        1098
      ],
      "op": "EXTCODESIZE",
      "path": "7"
    },
    "3134": {
      "fn": "Address.isContract",
      "offset": [
        1116,
        1124
      ],
      "op": "ISZERO",
      "path": "7",
      "statement": 45
    },
    "3135": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11661,
        12339
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD32"
    },
    "3138": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11661,
        12339
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3139": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3141": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3142": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "3147": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3149": {
      "op": "SHL"
    },
    "3150": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3151": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3156": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3158": {
      "op": "SHL"
    },
    "3159": {
      "op": "SUB"
    },
    "3160": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11736
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3161": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11736
      ],
      "op": "AND",
      "path": "1"
    },
    "3162": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11736
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3163": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11736
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x150B7A02"
    },
    "3168": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11736
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3169": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC74"
    },
    "3172": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3173": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3174": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3175": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11751,
        11755
      ],
      "op": "DUP10",
      "path": "1"
    },
    "3176": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11751,
        11755
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3177": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11757,
        11764
      ],
      "op": "DUP9",
      "path": "1"
    },
    "3178": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11757,
        11764
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3179": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11766,
        11771
      ],
      "op": "DUP9",
      "path": "1"
    },
    "3180": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11766,
        11771
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3181": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3183": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "ADD",
      "path": "1"
    },
    "3184": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFD3"
    },
    "3187": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        11700,
        11772
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3188": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3189": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3191": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3193": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3194": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3195": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3196": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "SUB",
      "path": "1"
    },
    "3197": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3198": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3200": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "DUP8",
      "path": "1"
    },
    "3201": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3202": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "3203": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3204": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3205": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3206": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC8E"
    },
    "3209": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3210": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3212": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3213": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3214": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3215": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "POP",
      "path": "1"
    },
    "3216": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "GAS",
      "path": "1"
    },
    "3217": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "CALL",
      "path": "1"
    },
    "3218": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3219": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "POP",
      "path": "1"
    },
    "3220": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "POP",
      "path": "1"
    },
    "3221": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "POP",
      "path": "1"
    },
    "3222": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3223": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3224": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCBE"
    },
    "3227": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3228": {
      "op": "POP"
    },
    "3229": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3231": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3232": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3233": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "3235": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3236": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3237": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3238": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "ADD",
      "path": "1"
    },
    "3239": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3241": {
      "op": "NOT"
    },
    "3242": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "AND",
      "path": "1"
    },
    "3243": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3244": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "ADD",
      "path": "1"
    },
    "3245": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3246": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3247": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3248": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCBB"
    },
    "3251": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3252": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3253": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "ADD",
      "path": "1"
    },
    "3254": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3255": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF42"
    },
    "3258": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        11700,
        11772
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3259": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3260": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3262": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11700,
        11772
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3263": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11696,
        12287
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD18"
    },
    "3266": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11696,
        12287
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3267": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11696,
        12287
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3268": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11696,
        12287
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3269": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11696,
        12287
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3270": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11696,
        12287
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3271": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11696,
        12287
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCEC"
    },
    "3274": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11696,
        12287
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3275": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11696,
        12287
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3277": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11696,
        12287
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3278": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11696,
        12287
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3279": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11696,
        12287
      ],
      "op": "POP",
      "path": "1"
    },
    "3280": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11696,
        12287
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "3282": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11696,
        12287
      ],
      "op": "NOT",
      "path": "1"
    },
    "3283": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11696,
        12287
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3F"
    },
    "3285": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11696,
        12287
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3286": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11696,
        12287
      ],
      "op": "ADD",
      "path": "1"
    },
    "3287": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11696,
        12287
      ],
      "op": "AND",
      "path": "1"
    },
    "3288": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11696,
        12287
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3289": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11696,
        12287
      ],
      "op": "ADD",
      "path": "1"
    },
    "3290": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11696,
        12287
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3292": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11696,
        12287
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3293": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11696,
        12287
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3294": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11696,
        12287
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3295": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11696,
        12287
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3296": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11696,
        12287
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3297": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11696,
        12287
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3299": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11696,
        12287
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3301": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11696,
        12287
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3302": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11696,
        12287
      ],
      "op": "ADD",
      "path": "1"
    },
    "3303": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11696,
        12287
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "3304": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11696,
        12287
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCF1"
    },
    "3307": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11696,
        12287
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3308": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11696,
        12287
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3309": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11696,
        12287
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "3311": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11696,
        12287
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3312": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11696,
        12287
      ],
      "op": "POP",
      "path": "1"
    },
    "3313": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11696,
        12287
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3314": {
      "op": "POP"
    },
    "3315": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11943,
        11956
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3316": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11943,
        11956
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3317": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11939,
        12273
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD10"
    },
    "3320": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11939,
        12273
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3321": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11985,
        12045
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 46,
      "value": "0x40"
    },
    "3323": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11985,
        12045
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3324": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3328": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3330": {
      "op": "SHL"
    },
    "3331": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11985,
        12045
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3332": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11985,
        12045
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3333": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11985,
        12045
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3335": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11985,
        12045
      ],
      "op": "ADD",
      "path": "1"
    },
    "3336": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11985,
        12045
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "3339": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11985,
        12045
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3340": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11985,
        12045
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1023"
    },
    "3343": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        11985,
        12045
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3344": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11939,
        12273
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3345": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12225,
        12231
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3346": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12219,
        12232
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3347": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12210,
        12216
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3348": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12206,
        12208
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3350": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12202,
        12217
      ],
      "op": "ADD",
      "path": "1"
    },
    "3351": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12195,
        12233
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3352": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11696,
        12287
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3357": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3359": {
      "op": "SHL"
    },
    "3360": {
      "op": "SUB"
    },
    "3361": {
      "op": "NOT"
    },
    "3362": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11822,
        11877
      ],
      "op": "AND",
      "path": "1",
      "statement": 47
    },
    "3363": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "3368": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3370": {
      "op": "SHL"
    },
    "3371": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11822,
        11877
      ],
      "op": "EQ",
      "path": "1"
    },
    "3372": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11822,
        11877
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3373": {
      "op": "POP"
    },
    "3374": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11815,
        11877
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x957"
    },
    "3377": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11815,
        11877
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3378": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11661,
        12339
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3379": {
      "op": "POP"
    },
    "3380": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12324,
        12328
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 48,
      "value": "0x1"
    },
    "3382": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11521,
        12345
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "3383": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11521,
        12345
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3384": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11521,
        12345
      ],
      "op": "POP",
      "path": "1"
    },
    "3385": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11521,
        12345
      ],
      "op": "POP",
      "path": "1"
    },
    "3386": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11521,
        12345
      ],
      "op": "POP",
      "path": "1"
    },
    "3387": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11521,
        12345
      ],
      "op": "POP",
      "path": "1"
    },
    "3388": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        11521,
        12345
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3389": {
      "op": "JUMPDEST"
    },
    "3390": {
      "op": "DUP1"
    },
    "3391": {
      "op": "CALLDATALOAD"
    },
    "3392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3396": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3398": {
      "op": "SHL"
    },
    "3399": {
      "op": "SUB"
    },
    "3400": {
      "op": "DUP2"
    },
    "3401": {
      "op": "AND"
    },
    "3402": {
      "op": "DUP2"
    },
    "3403": {
      "op": "EQ"
    },
    "3404": {
      "op": "PUSH2",
      "value": "0xD54"
    },
    "3407": {
      "op": "JUMPI"
    },
    "3408": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3410": {
      "op": "DUP1"
    },
    "3411": {
      "op": "REVERT"
    },
    "3412": {
      "op": "JUMPDEST"
    },
    "3413": {
      "op": "SWAP2"
    },
    "3414": {
      "op": "SWAP1"
    },
    "3415": {
      "op": "POP"
    },
    "3416": {
      "jump": "o",
      "op": "JUMP"
    },
    "3417": {
      "op": "JUMPDEST"
    },
    "3418": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3422": {
      "op": "DUP3"
    },
    "3423": {
      "op": "DUP5"
    },
    "3424": {
      "op": "SUB"
    },
    "3425": {
      "op": "SLT"
    },
    "3426": {
      "op": "ISZERO"
    },
    "3427": {
      "op": "PUSH2",
      "value": "0xD6B"
    },
    "3430": {
      "op": "JUMPI"
    },
    "3431": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3433": {
      "op": "DUP1"
    },
    "3434": {
      "op": "REVERT"
    },
    "3435": {
      "op": "JUMPDEST"
    },
    "3436": {
      "op": "PUSH2",
      "value": "0x7F3"
    },
    "3439": {
      "op": "DUP3"
    },
    "3440": {
      "op": "PUSH2",
      "value": "0xD3D"
    },
    "3443": {
      "jump": "i",
      "op": "JUMP"
    },
    "3444": {
      "op": "JUMPDEST"
    },
    "3445": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3447": {
      "op": "DUP1"
    },
    "3448": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3450": {
      "op": "DUP4"
    },
    "3451": {
      "op": "DUP6"
    },
    "3452": {
      "op": "SUB"
    },
    "3453": {
      "op": "SLT"
    },
    "3454": {
      "op": "ISZERO"
    },
    "3455": {
      "op": "PUSH2",
      "value": "0xD87"
    },
    "3458": {
      "op": "JUMPI"
    },
    "3459": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3461": {
      "op": "DUP1"
    },
    "3462": {
      "op": "REVERT"
    },
    "3463": {
      "op": "JUMPDEST"
    },
    "3464": {
      "op": "PUSH2",
      "value": "0xD90"
    },
    "3467": {
      "op": "DUP4"
    },
    "3468": {
      "op": "PUSH2",
      "value": "0xD3D"
    },
    "3471": {
      "jump": "i",
      "op": "JUMP"
    },
    "3472": {
      "op": "JUMPDEST"
    },
    "3473": {
      "op": "SWAP2"
    },
    "3474": {
      "op": "POP"
    },
    "3475": {
      "op": "PUSH2",
      "value": "0xD9E"
    },
    "3478": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3480": {
      "op": "DUP5"
    },
    "3481": {
      "op": "ADD"
    },
    "3482": {
      "op": "PUSH2",
      "value": "0xD3D"
    },
    "3485": {
      "jump": "i",
      "op": "JUMP"
    },
    "3486": {
      "op": "JUMPDEST"
    },
    "3487": {
      "op": "SWAP1"
    },
    "3488": {
      "op": "POP"
    },
    "3489": {
      "op": "SWAP3"
    },
    "3490": {
      "op": "POP"
    },
    "3491": {
      "op": "SWAP3"
    },
    "3492": {
      "op": "SWAP1"
    },
    "3493": {
      "op": "POP"
    },
    "3494": {
      "jump": "o",
      "op": "JUMP"
    },
    "3495": {
      "op": "JUMPDEST"
    },
    "3496": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3498": {
      "op": "DUP1"
    },
    "3499": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3501": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3503": {
      "op": "DUP5"
    },
    "3504": {
      "op": "DUP7"
    },
    "3505": {
      "op": "SUB"
    },
    "3506": {
      "op": "SLT"
    },
    "3507": {
      "op": "ISZERO"
    },
    "3508": {
      "op": "PUSH2",
      "value": "0xDBC"
    },
    "3511": {
      "op": "JUMPI"
    },
    "3512": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3514": {
      "op": "DUP1"
    },
    "3515": {
      "op": "REVERT"
    },
    "3516": {
      "op": "JUMPDEST"
    },
    "3517": {
      "op": "PUSH2",
      "value": "0xDC5"
    },
    "3520": {
      "op": "DUP5"
    },
    "3521": {
      "op": "PUSH2",
      "value": "0xD3D"
    },
    "3524": {
      "jump": "i",
      "op": "JUMP"
    },
    "3525": {
      "op": "JUMPDEST"
    },
    "3526": {
      "op": "SWAP3"
    },
    "3527": {
      "op": "POP"
    },
    "3528": {
      "op": "PUSH2",
      "value": "0xDD3"
    },
    "3531": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3533": {
      "op": "DUP6"
    },
    "3534": {
      "op": "ADD"
    },
    "3535": {
      "op": "PUSH2",
      "value": "0xD3D"
    },
    "3538": {
      "jump": "i",
      "op": "JUMP"
    },
    "3539": {
      "op": "JUMPDEST"
    },
    "3540": {
      "op": "SWAP2"
    },
    "3541": {
      "op": "POP"
    },
    "3542": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3544": {
      "op": "DUP5"
    },
    "3545": {
      "op": "ADD"
    },
    "3546": {
      "op": "CALLDATALOAD"
    },
    "3547": {
      "op": "SWAP1"
    },
    "3548": {
      "op": "POP"
    },
    "3549": {
      "op": "SWAP3"
    },
    "3550": {
      "op": "POP"
    },
    "3551": {
      "op": "SWAP3"
    },
    "3552": {
      "op": "POP"
    },
    "3553": {
      "op": "SWAP3"
    },
    "3554": {
      "jump": "o",
      "op": "JUMP"
    },
    "3555": {
      "op": "JUMPDEST"
    },
    "3556": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3558": {
      "op": "DUP1"
    },
    "3559": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3561": {
      "op": "DUP1"
    },
    "3562": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3564": {
      "op": "DUP6"
    },
    "3565": {
      "op": "DUP8"
    },
    "3566": {
      "op": "SUB"
    },
    "3567": {
      "op": "SLT"
    },
    "3568": {
      "op": "ISZERO"
    },
    "3569": {
      "op": "PUSH2",
      "value": "0xDF9"
    },
    "3572": {
      "op": "JUMPI"
    },
    "3573": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3575": {
      "op": "DUP1"
    },
    "3576": {
      "op": "REVERT"
    },
    "3577": {
      "op": "JUMPDEST"
    },
    "3578": {
      "op": "PUSH2",
      "value": "0xE02"
    },
    "3581": {
      "op": "DUP6"
    },
    "3582": {
      "op": "PUSH2",
      "value": "0xD3D"
    },
    "3585": {
      "jump": "i",
      "op": "JUMP"
    },
    "3586": {
      "op": "JUMPDEST"
    },
    "3587": {
      "op": "SWAP4"
    },
    "3588": {
      "op": "POP"
    },
    "3589": {
      "op": "PUSH2",
      "value": "0xE10"
    },
    "3592": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3594": {
      "op": "DUP7"
    },
    "3595": {
      "op": "ADD"
    },
    "3596": {
      "op": "PUSH2",
      "value": "0xD3D"
    },
    "3599": {
      "jump": "i",
      "op": "JUMP"
    },
    "3600": {
      "op": "JUMPDEST"
    },
    "3601": {
      "op": "SWAP3"
    },
    "3602": {
      "op": "POP"
    },
    "3603": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3605": {
      "op": "DUP6"
    },
    "3606": {
      "op": "ADD"
    },
    "3607": {
      "op": "CALLDATALOAD"
    },
    "3608": {
      "op": "SWAP2"
    },
    "3609": {
      "op": "POP"
    },
    "3610": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3612": {
      "op": "DUP6"
    },
    "3613": {
      "op": "ADD"
    },
    "3614": {
      "op": "CALLDATALOAD"
    },
    "3615": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3624": {
      "op": "DUP1"
    },
    "3625": {
      "op": "DUP3"
    },
    "3626": {
      "op": "GT"
    },
    "3627": {
      "op": "ISZERO"
    },
    "3628": {
      "op": "PUSH2",
      "value": "0xE34"
    },
    "3631": {
      "op": "JUMPI"
    },
    "3632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3634": {
      "op": "DUP1"
    },
    "3635": {
      "op": "REVERT"
    },
    "3636": {
      "op": "JUMPDEST"
    },
    "3637": {
      "op": "DUP2"
    },
    "3638": {
      "op": "DUP8"
    },
    "3639": {
      "op": "ADD"
    },
    "3640": {
      "op": "SWAP2"
    },
    "3641": {
      "op": "POP"
    },
    "3642": {
      "op": "DUP8"
    },
    "3643": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3645": {
      "op": "DUP4"
    },
    "3646": {
      "op": "ADD"
    },
    "3647": {
      "op": "SLT"
    },
    "3648": {
      "op": "PUSH2",
      "value": "0xE48"
    },
    "3651": {
      "op": "JUMPI"
    },
    "3652": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3654": {
      "op": "DUP1"
    },
    "3655": {
      "op": "REVERT"
    },
    "3656": {
      "op": "JUMPDEST"
    },
    "3657": {
      "op": "DUP2"
    },
    "3658": {
      "op": "CALLDATALOAD"
    },
    "3659": {
      "op": "DUP2"
    },
    "3660": {
      "op": "DUP2"
    },
    "3661": {
      "op": "GT"
    },
    "3662": {
      "op": "ISZERO"
    },
    "3663": {
      "op": "PUSH2",
      "value": "0xE5A"
    },
    "3666": {
      "op": "JUMPI"
    },
    "3667": {
      "op": "PUSH2",
      "value": "0xE5A"
    },
    "3670": {
      "op": "PUSH2",
      "value": "0x11E1"
    },
    "3673": {
      "jump": "i",
      "op": "JUMP"
    },
    "3674": {
      "op": "JUMPDEST"
    },
    "3675": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3677": {
      "op": "MLOAD"
    },
    "3678": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3680": {
      "op": "DUP3"
    },
    "3681": {
      "op": "ADD"
    },
    "3682": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3684": {
      "op": "NOT"
    },
    "3685": {
      "op": "SWAP1"
    },
    "3686": {
      "op": "DUP2"
    },
    "3687": {
      "op": "AND"
    },
    "3688": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3690": {
      "op": "ADD"
    },
    "3691": {
      "op": "AND"
    },
    "3692": {
      "op": "DUP2"
    },
    "3693": {
      "op": "ADD"
    },
    "3694": {
      "op": "SWAP1"
    },
    "3695": {
      "op": "DUP4"
    },
    "3696": {
      "op": "DUP3"
    },
    "3697": {
      "op": "GT"
    },
    "3698": {
      "op": "DUP2"
    },
    "3699": {
      "op": "DUP4"
    },
    "3700": {
      "op": "LT"
    },
    "3701": {
      "op": "OR"
    },
    "3702": {
      "op": "ISZERO"
    },
    "3703": {
      "op": "PUSH2",
      "value": "0xE82"
    },
    "3706": {
      "op": "JUMPI"
    },
    "3707": {
      "op": "PUSH2",
      "value": "0xE82"
    },
    "3710": {
      "op": "PUSH2",
      "value": "0x11E1"
    },
    "3713": {
      "jump": "i",
      "op": "JUMP"
    },
    "3714": {
      "op": "JUMPDEST"
    },
    "3715": {
      "op": "DUP2"
    },
    "3716": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3718": {
      "op": "MSTORE"
    },
    "3719": {
      "op": "DUP3"
    },
    "3720": {
      "op": "DUP2"
    },
    "3721": {
      "op": "MSTORE"
    },
    "3722": {
      "op": "DUP11"
    },
    "3723": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3725": {
      "op": "DUP5"
    },
    "3726": {
      "op": "DUP8"
    },
    "3727": {
      "op": "ADD"
    },
    "3728": {
      "op": "ADD"
    },
    "3729": {
      "op": "GT"
    },
    "3730": {
      "op": "ISZERO"
    },
    "3731": {
      "op": "PUSH2",
      "value": "0xE9B"
    },
    "3734": {
      "op": "JUMPI"
    },
    "3735": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3737": {
      "op": "DUP1"
    },
    "3738": {
      "op": "REVERT"
    },
    "3739": {
      "op": "JUMPDEST"
    },
    "3740": {
      "op": "DUP3"
    },
    "3741": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3743": {
      "op": "DUP7"
    },
    "3744": {
      "op": "ADD"
    },
    "3745": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3747": {
      "op": "DUP4"
    },
    "3748": {
      "op": "ADD"
    },
    "3749": {
      "op": "CALLDATACOPY"
    },
    "3750": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3752": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3754": {
      "op": "DUP5"
    },
    "3755": {
      "op": "DUP4"
    },
    "3756": {
      "op": "ADD"
    },
    "3757": {
      "op": "ADD"
    },
    "3758": {
      "op": "MSTORE"
    },
    "3759": {
      "op": "DUP1"
    },
    "3760": {
      "op": "SWAP6"
    },
    "3761": {
      "op": "POP"
    },
    "3762": {
      "op": "POP"
    },
    "3763": {
      "op": "POP"
    },
    "3764": {
      "op": "POP"
    },
    "3765": {
      "op": "POP"
    },
    "3766": {
      "op": "POP"
    },
    "3767": {
      "op": "SWAP3"
    },
    "3768": {
      "op": "SWAP6"
    },
    "3769": {
      "op": "SWAP2"
    },
    "3770": {
      "op": "SWAP5"
    },
    "3771": {
      "op": "POP"
    },
    "3772": {
      "op": "SWAP3"
    },
    "3773": {
      "op": "POP"
    },
    "3774": {
      "jump": "o",
      "op": "JUMP"
    },
    "3775": {
      "op": "JUMPDEST"
    },
    "3776": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3778": {
      "op": "DUP1"
    },
    "3779": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3781": {
      "op": "DUP4"
    },
    "3782": {
      "op": "DUP6"
    },
    "3783": {
      "op": "SUB"
    },
    "3784": {
      "op": "SLT"
    },
    "3785": {
      "op": "ISZERO"
    },
    "3786": {
      "op": "PUSH2",
      "value": "0xED2"
    },
    "3789": {
      "op": "JUMPI"
    },
    "3790": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3792": {
      "op": "DUP1"
    },
    "3793": {
      "op": "REVERT"
    },
    "3794": {
      "op": "JUMPDEST"
    },
    "3795": {
      "op": "PUSH2",
      "value": "0xEDB"
    },
    "3798": {
      "op": "DUP4"
    },
    "3799": {
      "op": "PUSH2",
      "value": "0xD3D"
    },
    "3802": {
      "jump": "i",
      "op": "JUMP"
    },
    "3803": {
      "op": "JUMPDEST"
    },
    "3804": {
      "op": "SWAP2"
    },
    "3805": {
      "op": "POP"
    },
    "3806": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3808": {
      "op": "DUP4"
    },
    "3809": {
      "op": "ADD"
    },
    "3810": {
      "op": "CALLDATALOAD"
    },
    "3811": {
      "op": "DUP1"
    },
    "3812": {
      "op": "ISZERO"
    },
    "3813": {
      "op": "ISZERO"
    },
    "3814": {
      "op": "DUP2"
    },
    "3815": {
      "op": "EQ"
    },
    "3816": {
      "op": "PUSH2",
      "value": "0xEF0"
    },
    "3819": {
      "op": "JUMPI"
    },
    "3820": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3822": {
      "op": "DUP1"
    },
    "3823": {
      "op": "REVERT"
    },
    "3824": {
      "op": "JUMPDEST"
    },
    "3825": {
      "op": "DUP1"
    },
    "3826": {
      "op": "SWAP2"
    },
    "3827": {
      "op": "POP"
    },
    "3828": {
      "op": "POP"
    },
    "3829": {
      "op": "SWAP3"
    },
    "3830": {
      "op": "POP"
    },
    "3831": {
      "op": "SWAP3"
    },
    "3832": {
      "op": "SWAP1"
    },
    "3833": {
      "op": "POP"
    },
    "3834": {
      "jump": "o",
      "op": "JUMP"
    },
    "3835": {
      "op": "JUMPDEST"
    },
    "3836": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3838": {
      "op": "DUP1"
    },
    "3839": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3841": {
      "op": "DUP4"
    },
    "3842": {
      "op": "DUP6"
    },
    "3843": {
      "op": "SUB"
    },
    "3844": {
      "op": "SLT"
    },
    "3845": {
      "op": "ISZERO"
    },
    "3846": {
      "op": "PUSH2",
      "value": "0xF0E"
    },
    "3849": {
      "op": "JUMPI"
    },
    "3850": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3852": {
      "op": "DUP1"
    },
    "3853": {
      "op": "REVERT"
    },
    "3854": {
      "op": "JUMPDEST"
    },
    "3855": {
      "op": "PUSH2",
      "value": "0xF17"
    },
    "3858": {
      "op": "DUP4"
    },
    "3859": {
      "op": "PUSH2",
      "value": "0xD3D"
    },
    "3862": {
      "jump": "i",
      "op": "JUMP"
    },
    "3863": {
      "op": "JUMPDEST"
    },
    "3864": {
      "op": "SWAP5"
    },
    "3865": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3867": {
      "op": "SWAP4"
    },
    "3868": {
      "op": "SWAP1"
    },
    "3869": {
      "op": "SWAP4"
    },
    "3870": {
      "op": "ADD"
    },
    "3871": {
      "op": "CALLDATALOAD"
    },
    "3872": {
      "op": "SWAP4"
    },
    "3873": {
      "op": "POP"
    },
    "3874": {
      "op": "POP"
    },
    "3875": {
      "op": "POP"
    },
    "3876": {
      "jump": "o",
      "op": "JUMP"
    },
    "3877": {
      "op": "JUMPDEST"
    },
    "3878": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3880": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3882": {
      "op": "DUP3"
    },
    "3883": {
      "op": "DUP5"
    },
    "3884": {
      "op": "SUB"
    },
    "3885": {
      "op": "SLT"
    },
    "3886": {
      "op": "ISZERO"
    },
    "3887": {
      "op": "PUSH2",
      "value": "0xF37"
    },
    "3890": {
      "op": "JUMPI"
    },
    "3891": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3893": {
      "op": "DUP1"
    },
    "3894": {
      "op": "REVERT"
    },
    "3895": {
      "op": "JUMPDEST"
    },
    "3896": {
      "op": "DUP2"
    },
    "3897": {
      "op": "CALLDATALOAD"
    },
    "3898": {
      "op": "PUSH2",
      "value": "0x7F3"
    },
    "3901": {
      "op": "DUP2"
    },
    "3902": {
      "op": "PUSH2",
      "value": "0x11F7"
    },
    "3905": {
      "jump": "i",
      "op": "JUMP"
    },
    "3906": {
      "op": "JUMPDEST"
    },
    "3907": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3909": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3911": {
      "op": "DUP3"
    },
    "3912": {
      "op": "DUP5"
    },
    "3913": {
      "op": "SUB"
    },
    "3914": {
      "op": "SLT"
    },
    "3915": {
      "op": "ISZERO"
    },
    "3916": {
      "op": "PUSH2",
      "value": "0xF54"
    },
    "3919": {
      "op": "JUMPI"
    },
    "3920": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3922": {
      "op": "DUP1"
    },
    "3923": {
      "op": "REVERT"
    },
    "3924": {
      "op": "JUMPDEST"
    },
    "3925": {
      "op": "DUP2"
    },
    "3926": {
      "op": "MLOAD"
    },
    "3927": {
      "op": "PUSH2",
      "value": "0x7F3"
    },
    "3930": {
      "op": "DUP2"
    },
    "3931": {
      "op": "PUSH2",
      "value": "0x11F7"
    },
    "3934": {
      "jump": "i",
      "op": "JUMP"
    },
    "3935": {
      "op": "JUMPDEST"
    },
    "3936": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3938": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3940": {
      "op": "DUP3"
    },
    "3941": {
      "op": "DUP5"
    },
    "3942": {
      "op": "SUB"
    },
    "3943": {
      "op": "SLT"
    },
    "3944": {
      "op": "ISZERO"
    },
    "3945": {
      "op": "PUSH2",
      "value": "0xF71"
    },
    "3948": {
      "op": "JUMPI"
    },
    "3949": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3951": {
      "op": "DUP1"
    },
    "3952": {
      "op": "REVERT"
    },
    "3953": {
      "op": "JUMPDEST"
    },
    "3954": {
      "op": "POP"
    },
    "3955": {
      "op": "CALLDATALOAD"
    },
    "3956": {
      "op": "SWAP2"
    },
    "3957": {
      "op": "SWAP1"
    },
    "3958": {
      "op": "POP"
    },
    "3959": {
      "jump": "o",
      "op": "JUMP"
    },
    "3960": {
      "op": "JUMPDEST"
    },
    "3961": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3963": {
      "op": "DUP2"
    },
    "3964": {
      "op": "MLOAD"
    },
    "3965": {
      "op": "DUP1"
    },
    "3966": {
      "op": "DUP5"
    },
    "3967": {
      "op": "MSTORE"
    },
    "3968": {
      "op": "PUSH2",
      "value": "0xF90"
    },
    "3971": {
      "op": "DUP2"
    },
    "3972": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3974": {
      "op": "DUP7"
    },
    "3975": {
      "op": "ADD"
    },
    "3976": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3978": {
      "op": "DUP7"
    },
    "3979": {
      "op": "ADD"
    },
    "3980": {
      "op": "PUSH2",
      "value": "0x1109"
    },
    "3983": {
      "jump": "i",
      "op": "JUMP"
    },
    "3984": {
      "op": "JUMPDEST"
    },
    "3985": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3987": {
      "op": "ADD"
    },
    "3988": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3990": {
      "op": "NOT"
    },
    "3991": {
      "op": "AND"
    },
    "3992": {
      "op": "SWAP3"
    },
    "3993": {
      "op": "SWAP1"
    },
    "3994": {
      "op": "SWAP3"
    },
    "3995": {
      "op": "ADD"
    },
    "3996": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3998": {
      "op": "ADD"
    },
    "3999": {
      "op": "SWAP3"
    },
    "4000": {
      "op": "SWAP2"
    },
    "4001": {
      "op": "POP"
    },
    "4002": {
      "op": "POP"
    },
    "4003": {
      "jump": "o",
      "op": "JUMP"
    },
    "4004": {
      "op": "JUMPDEST"
    },
    "4005": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4007": {
      "op": "DUP4"
    },
    "4008": {
      "op": "MLOAD"
    },
    "4009": {
      "op": "PUSH2",
      "value": "0xFB6"
    },
    "4012": {
      "op": "DUP2"
    },
    "4013": {
      "op": "DUP5"
    },
    "4014": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4016": {
      "op": "DUP9"
    },
    "4017": {
      "op": "ADD"
    },
    "4018": {
      "op": "PUSH2",
      "value": "0x1109"
    },
    "4021": {
      "jump": "i",
      "op": "JUMP"
    },
    "4022": {
      "op": "JUMPDEST"
    },
    "4023": {
      "op": "DUP4"
    },
    "4024": {
      "op": "MLOAD"
    },
    "4025": {
      "op": "SWAP1"
    },
    "4026": {
      "op": "DUP4"
    },
    "4027": {
      "op": "ADD"
    },
    "4028": {
      "op": "SWAP1"
    },
    "4029": {
      "op": "PUSH2",
      "value": "0xFCA"
    },
    "4032": {
      "op": "DUP2"
    },
    "4033": {
      "op": "DUP4"
    },
    "4034": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4036": {
      "op": "DUP9"
    },
    "4037": {
      "op": "ADD"
    },
    "4038": {
      "op": "PUSH2",
      "value": "0x1109"
    },
    "4041": {
      "jump": "i",
      "op": "JUMP"
    },
    "4042": {
      "op": "JUMPDEST"
    },
    "4043": {
      "op": "ADD"
    },
    "4044": {
      "op": "SWAP5"
    },
    "4045": {
      "op": "SWAP4"
    },
    "4046": {
      "op": "POP"
    },
    "4047": {
      "op": "POP"
    },
    "4048": {
      "op": "POP"
    },
    "4049": {
      "op": "POP"
    },
    "4050": {
      "jump": "o",
      "op": "JUMP"
    },
    "4051": {
      "op": "JUMPDEST"
    },
    "4052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4056": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4058": {
      "op": "SHL"
    },
    "4059": {
      "op": "SUB"
    },
    "4060": {
      "op": "DUP6"
    },
    "4061": {
      "op": "DUP2"
    },
    "4062": {
      "op": "AND"
    },
    "4063": {
      "op": "DUP3"
    },
    "4064": {
      "op": "MSTORE"
    },
    "4065": {
      "op": "DUP5"
    },
    "4066": {
      "op": "AND"
    },
    "4067": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4069": {
      "op": "DUP3"
    },
    "4070": {
      "op": "ADD"
    },
    "4071": {
      "op": "MSTORE"
    },
    "4072": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4074": {
      "op": "DUP2"
    },
    "4075": {
      "op": "ADD"
    },
    "4076": {
      "op": "DUP4"
    },
    "4077": {
      "op": "SWAP1"
    },
    "4078": {
      "op": "MSTORE"
    },
    "4079": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4081": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4083": {
      "op": "DUP3"
    },
    "4084": {
      "op": "ADD"
    },
    "4085": {
      "op": "DUP2"
    },
    "4086": {
      "op": "SWAP1"
    },
    "4087": {
      "op": "MSTORE"
    },
    "4088": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4090": {
      "op": "SWAP1"
    },
    "4091": {
      "op": "PUSH2",
      "value": "0x1006"
    },
    "4094": {
      "op": "SWAP1"
    },
    "4095": {
      "op": "DUP4"
    },
    "4096": {
      "op": "ADD"
    },
    "4097": {
      "op": "DUP5"
    },
    "4098": {
      "op": "PUSH2",
      "value": "0xF78"
    },
    "4101": {
      "jump": "i",
      "op": "JUMP"
    },
    "4102": {
      "op": "JUMPDEST"
    },
    "4103": {
      "op": "SWAP7"
    },
    "4104": {
      "op": "SWAP6"
    },
    "4105": {
      "op": "POP"
    },
    "4106": {
      "op": "POP"
    },
    "4107": {
      "op": "POP"
    },
    "4108": {
      "op": "POP"
    },
    "4109": {
      "op": "POP"
    },
    "4110": {
      "op": "POP"
    },
    "4111": {
      "jump": "o",
      "op": "JUMP"
    },
    "4112": {
      "op": "JUMPDEST"
    },
    "4113": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4115": {
      "op": "DUP2"
    },
    "4116": {
      "op": "MSTORE"
    },
    "4117": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4119": {
      "op": "PUSH2",
      "value": "0x7F3"
    },
    "4122": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4124": {
      "op": "DUP4"
    },
    "4125": {
      "op": "ADD"
    },
    "4126": {
      "op": "DUP5"
    },
    "4127": {
      "op": "PUSH2",
      "value": "0xF78"
    },
    "4130": {
      "jump": "i",
      "op": "JUMP"
    },
    "4131": {
      "op": "JUMPDEST"
    },
    "4132": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4134": {
      "op": "DUP1"
    },
    "4135": {
      "op": "DUP3"
    },
    "4136": {
      "op": "MSTORE"
    },
    "4137": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4139": {
      "op": "SWAP1"
    },
    "4140": {
      "op": "DUP3"
    },
    "4141": {
      "op": "ADD"
    },
    "4142": {
      "op": "MSTORE"
    },
    "4143": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "4176": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4178": {
      "op": "DUP3"
    },
    "4179": {
      "op": "ADD"
    },
    "4180": {
      "op": "MSTORE"
    },
    "4181": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "4200": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "4202": {
      "op": "SHL"
    },
    "4203": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4205": {
      "op": "DUP3"
    },
    "4206": {
      "op": "ADD"
    },
    "4207": {
      "op": "MSTORE"
    },
    "4208": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4210": {
      "op": "ADD"
    },
    "4211": {
      "op": "SWAP1"
    },
    "4212": {
      "jump": "o",
      "op": "JUMP"
    },
    "4213": {
      "op": "JUMPDEST"
    },
    "4214": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4216": {
      "op": "DUP1"
    },
    "4217": {
      "op": "DUP3"
    },
    "4218": {
      "op": "MSTORE"
    },
    "4219": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "4221": {
      "op": "SWAP1"
    },
    "4222": {
      "op": "DUP3"
    },
    "4223": {
      "op": "ADD"
    },
    "4224": {
      "op": "MSTORE"
    },
    "4225": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "4258": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4260": {
      "op": "DUP3"
    },
    "4261": {
      "op": "ADD"
    },
    "4262": {
      "op": "MSTORE"
    },
    "4263": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "4281": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "4283": {
      "op": "SHL"
    },
    "4284": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4286": {
      "op": "DUP3"
    },
    "4287": {
      "op": "ADD"
    },
    "4288": {
      "op": "MSTORE"
    },
    "4289": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4291": {
      "op": "ADD"
    },
    "4292": {
      "op": "SWAP1"
    },
    "4293": {
      "jump": "o",
      "op": "JUMP"
    },
    "4294": {
      "op": "JUMPDEST"
    },
    "4295": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4297": {
      "op": "DUP3"
    },
    "4298": {
      "op": "NOT"
    },
    "4299": {
      "op": "DUP3"
    },
    "4300": {
      "op": "GT"
    },
    "4301": {
      "op": "ISZERO"
    },
    "4302": {
      "op": "PUSH2",
      "value": "0x10D9"
    },
    "4305": {
      "op": "JUMPI"
    },
    "4306": {
      "op": "PUSH2",
      "value": "0x10D9"
    },
    "4309": {
      "op": "PUSH2",
      "value": "0x119F"
    },
    "4312": {
      "jump": "i",
      "op": "JUMP"
    },
    "4313": {
      "op": "JUMPDEST"
    },
    "4314": {
      "op": "POP"
    },
    "4315": {
      "op": "ADD"
    },
    "4316": {
      "op": "SWAP1"
    },
    "4317": {
      "jump": "o",
      "op": "JUMP"
    },
    "4318": {
      "op": "JUMPDEST"
    },
    "4319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4321": {
      "op": "DUP3"
    },
    "4322": {
      "op": "PUSH2",
      "value": "0x10ED"
    },
    "4325": {
      "op": "JUMPI"
    },
    "4326": {
      "op": "PUSH2",
      "value": "0x10ED"
    },
    "4329": {
      "op": "PUSH2",
      "value": "0x11B5"
    },
    "4332": {
      "jump": "i",
      "op": "JUMP"
    },
    "4333": {
      "op": "JUMPDEST"
    },
    "4334": {
      "op": "POP"
    },
    "4335": {
      "op": "DIV"
    },
    "4336": {
      "op": "SWAP1"
    },
    "4337": {
      "jump": "o",
      "op": "JUMP"
    },
    "4338": {
      "op": "JUMPDEST"
    },
    "4339": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4341": {
      "op": "DUP3"
    },
    "4342": {
      "op": "DUP3"
    },
    "4343": {
      "op": "LT"
    },
    "4344": {
      "op": "ISZERO"
    },
    "4345": {
      "op": "PUSH2",
      "value": "0x1104"
    },
    "4348": {
      "op": "JUMPI"
    },
    "4349": {
      "op": "PUSH2",
      "value": "0x1104"
    },
    "4352": {
      "op": "PUSH2",
      "value": "0x119F"
    },
    "4355": {
      "jump": "i",
      "op": "JUMP"
    },
    "4356": {
      "op": "JUMPDEST"
    },
    "4357": {
      "op": "POP"
    },
    "4358": {
      "op": "SUB"
    },
    "4359": {
      "op": "SWAP1"
    },
    "4360": {
      "jump": "o",
      "op": "JUMP"
    },
    "4361": {
      "op": "JUMPDEST"
    },
    "4362": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4364": {
      "op": "JUMPDEST"
    },
    "4365": {
      "op": "DUP4"
    },
    "4366": {
      "op": "DUP2"
    },
    "4367": {
      "op": "LT"
    },
    "4368": {
      "op": "ISZERO"
    },
    "4369": {
      "op": "PUSH2",
      "value": "0x1124"
    },
    "4372": {
      "op": "JUMPI"
    },
    "4373": {
      "op": "DUP2"
    },
    "4374": {
      "op": "DUP2"
    },
    "4375": {
      "op": "ADD"
    },
    "4376": {
      "op": "MLOAD"
    },
    "4377": {
      "op": "DUP4"
    },
    "4378": {
      "op": "DUP3"
    },
    "4379": {
      "op": "ADD"
    },
    "4380": {
      "op": "MSTORE"
    },
    "4381": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4383": {
      "op": "ADD"
    },
    "4384": {
      "op": "PUSH2",
      "value": "0x110C"
    },
    "4387": {
      "op": "JUMP"
    },
    "4388": {
      "op": "JUMPDEST"
    },
    "4389": {
      "op": "DUP4"
    },
    "4390": {
      "op": "DUP2"
    },
    "4391": {
      "op": "GT"
    },
    "4392": {
      "op": "ISZERO"
    },
    "4393": {
      "op": "PUSH2",
      "value": "0x70C"
    },
    "4396": {
      "op": "JUMPI"
    },
    "4397": {
      "op": "POP"
    },
    "4398": {
      "op": "POP"
    },
    "4399": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4401": {
      "op": "SWAP2"
    },
    "4402": {
      "op": "ADD"
    },
    "4403": {
      "op": "MSTORE"
    },
    "4404": {
      "jump": "o",
      "op": "JUMP"
    },
    "4405": {
      "op": "JUMPDEST"
    },
    "4406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4408": {
      "op": "DUP2"
    },
    "4409": {
      "op": "DUP2"
    },
    "4410": {
      "op": "SHR"
    },
    "4411": {
      "op": "SWAP1"
    },
    "4412": {
      "op": "DUP3"
    },
    "4413": {
      "op": "AND"
    },
    "4414": {
      "op": "DUP1"
    },
    "4415": {
      "op": "PUSH2",
      "value": "0x1149"
    },
    "4418": {
      "op": "JUMPI"
    },
    "4419": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4421": {
      "op": "DUP3"
    },
    "4422": {
      "op": "AND"
    },
    "4423": {
      "op": "SWAP2"
    },
    "4424": {
      "op": "POP"
    },
    "4425": {
      "op": "JUMPDEST"
    },
    "4426": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4428": {
      "op": "DUP3"
    },
    "4429": {
      "op": "LT"
    },
    "4430": {
      "op": "DUP2"
    },
    "4431": {
      "op": "EQ"
    },
    "4432": {
      "op": "ISZERO"
    },
    "4433": {
      "op": "PUSH2",
      "value": "0x116A"
    },
    "4436": {
      "op": "JUMPI"
    },
    "4437": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4442": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4444": {
      "op": "SHL"
    },
    "4445": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4447": {
      "op": "MSTORE"
    },
    "4448": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4450": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4452": {
      "op": "MSTORE"
    },
    "4453": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4455": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4457": {
      "op": "REVERT"
    },
    "4458": {
      "op": "JUMPDEST"
    },
    "4459": {
      "op": "POP"
    },
    "4460": {
      "op": "SWAP2"
    },
    "4461": {
      "op": "SWAP1"
    },
    "4462": {
      "op": "POP"
    },
    "4463": {
      "jump": "o",
      "op": "JUMP"
    },
    "4464": {
      "op": "JUMPDEST"
    },
    "4465": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4467": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4469": {
      "op": "NOT"
    },
    "4470": {
      "op": "DUP3"
    },
    "4471": {
      "op": "EQ"
    },
    "4472": {
      "op": "ISZERO"
    },
    "4473": {
      "op": "PUSH2",
      "value": "0x1184"
    },
    "4476": {
      "op": "JUMPI"
    },
    "4477": {
      "op": "PUSH2",
      "value": "0x1184"
    },
    "4480": {
      "op": "PUSH2",
      "value": "0x119F"
    },
    "4483": {
      "jump": "i",
      "op": "JUMP"
    },
    "4484": {
      "op": "JUMPDEST"
    },
    "4485": {
      "op": "POP"
    },
    "4486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4488": {
      "op": "ADD"
    },
    "4489": {
      "op": "SWAP1"
    },
    "4490": {
      "jump": "o",
      "op": "JUMP"
    },
    "4491": {
      "op": "JUMPDEST"
    },
    "4492": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4494": {
      "op": "DUP3"
    },
    "4495": {
      "op": "PUSH2",
      "value": "0x119A"
    },
    "4498": {
      "op": "JUMPI"
    },
    "4499": {
      "op": "PUSH2",
      "value": "0x119A"
    },
    "4502": {
      "op": "PUSH2",
      "value": "0x11B5"
    },
    "4505": {
      "jump": "i",
      "op": "JUMP"
    },
    "4506": {
      "op": "JUMPDEST"
    },
    "4507": {
      "op": "POP"
    },
    "4508": {
      "op": "MOD"
    },
    "4509": {
      "op": "SWAP1"
    },
    "4510": {
      "jump": "o",
      "op": "JUMP"
    },
    "4511": {
      "op": "JUMPDEST"
    },
    "4512": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4517": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4519": {
      "op": "SHL"
    },
    "4520": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4522": {
      "op": "MSTORE"
    },
    "4523": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4525": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4527": {
      "op": "MSTORE"
    },
    "4528": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4530": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4532": {
      "op": "REVERT"
    },
    "4533": {
      "op": "JUMPDEST"
    },
    "4534": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4539": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4541": {
      "op": "SHL"
    },
    "4542": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4544": {
      "op": "MSTORE"
    },
    "4545": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4547": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4549": {
      "op": "MSTORE"
    },
    "4550": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4552": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4554": {
      "op": "REVERT"
    },
    "4555": {
      "op": "JUMPDEST"
    },
    "4556": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4561": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4563": {
      "op": "SHL"
    },
    "4564": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4566": {
      "op": "MSTORE"
    },
    "4567": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4569": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4571": {
      "op": "MSTORE"
    },
    "4572": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4576": {
      "op": "REVERT"
    },
    "4577": {
      "op": "JUMPDEST"
    },
    "4578": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4583": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4585": {
      "op": "SHL"
    },
    "4586": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4588": {
      "op": "MSTORE"
    },
    "4589": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "4591": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4593": {
      "op": "MSTORE"
    },
    "4594": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4596": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4598": {
      "op": "REVERT"
    },
    "4599": {
      "op": "JUMPDEST"
    },
    "4600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4604": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4606": {
      "op": "SHL"
    },
    "4607": {
      "op": "SUB"
    },
    "4608": {
      "op": "NOT"
    },
    "4609": {
      "op": "DUP2"
    },
    "4610": {
      "op": "AND"
    },
    "4611": {
      "op": "DUP2"
    },
    "4612": {
      "op": "EQ"
    },
    "4613": {
      "op": "PUSH2",
      "value": "0x120D"
    },
    "4616": {
      "op": "JUMPI"
    },
    "4617": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4619": {
      "op": "DUP1"
    },
    "4620": {
      "op": "REVERT"
    },
    "4621": {
      "op": "JUMPDEST"
    },
    "4622": {
      "op": "POP"
    },
    "4623": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "725a784c5db59cc0f1f55c8482b953bbee8e7159",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"./extensions/IERC721Enumerable.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping (uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping (address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping (uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping (address => mapping (address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor (string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return interfaceId == type(IERC721).interfaceId\n            || interfaceId == type(IERC721Metadata).interfaceId\n            || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: balance query for the zero address\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: owner query for nonexistent token\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0\n            ? string(abi.encodePacked(baseURI, tokenId.toString()))\n            : '';\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. Empty by default, can be overriden\n     * in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(_msgSender() == owner || ERC721.isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        require(_exists(tokenId), \"ERC721: approved query for nonexistent token\");\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        require(operator != _msgSender(), \"ERC721: approve to caller\");\n\n        _operatorApprovals[_msgSender()][operator] = approved;\n        emit ApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory _data) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || getApproved(tokenId) == spender || ERC721.isApprovedForAll(owner, spender));\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory _data) internal virtual {\n        _mint(to, tokenId);\n        require(_checkOnERC721Received(address(0), to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory _data)\n        private returns (bool)\n    {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\n                return retval == IERC721Receiver(to).onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    // solhint-disable-next-line no-inline-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal virtual { }\n}\n",
  "sourceMap": "599:12437:1:-:0;;;1366:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1433:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1456:17:1;;;;:7;;:17;;;;;:::i;:::-;;1366:114;;599:12437;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;599:12437:1;;;-1:-1:-1;599:12437:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:14;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;162:13;;-1:-1:-1;;;;;224:10:14;;;221:36;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:14;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:72;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:53;;;615:1;612;605:12;566:53;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:80;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:80;887:6;14:885;-1:-1:-1;;;;;;14:885:14:o;904:562::-;1003:6;1011;1064:2;1052:9;1043:7;1039:23;1035:32;1032:52;;;1080:1;1077;1070:12;1032:52;1107:16;;-1:-1:-1;;;;;1172:14:14;;;1169:34;;;1199:1;1196;1189:12;1169:34;1222:61;1275:7;1266:6;1255:9;1251:22;1222:61;:::i;:::-;1212:71;;1329:2;1318:9;1314:18;1308:25;1292:41;;1358:2;1348:8;1345:16;1342:36;;;1374:1;1371;1364:12;1342:36;;1397:63;1452:7;1441:8;1430:9;1426:24;1397:63;:::i;:::-;1387:73;;;904:562;;;;;:::o;1471:380::-;1550:1;1546:12;;;;1593;;;1614:61;;1668:4;1660:6;1656:17;1646:27;;1614:61;1721:2;1713:6;1710:14;1690:18;1687:38;1684:161;;;1767:10;1762:3;1758:20;1755:1;1748:31;1802:4;1799:1;1792:15;1830:4;1827:1;1820:15;1684:161;;1471:380;;;:::o;1856:127::-;1917:10;1912:3;1908:20;1905:1;1898:31;1948:4;1945:1;1938:15;1972:4;1969:1;1962:15;1856:127;599:12437:1;;;;;;",
  "sourcePath": "C:/Users/robel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC721/ERC721.sol",
  "type": "contract"
}